#! /usr/bin/env bash
# Patch: -pro_musb_hdrc_Search_and_replace_pDmaChannel_with_dma_c
# Date: Fri Sep 19 14:12:55 2008
# From 782a831a45afa332709ee4153df5951784bbb824 Mon Sep 17 00:00:00 2001
# From: Tony Lindgren <tony@atomide.com>
# Date: Thu, 16 Aug 2007 00:59:44 -0700
# Subject: [PATCH] musb_hdrc: Search and replace pDmaChannel with dma_channel
# 
# Search and replace pDmaChannel with dma_channel
# 
# Signed-off-by: Tony Lindgren <tony@atomide.com>
# (cherry picked from commit 58c4d26d8575bd55c8e3e362da7aea09af9e99e5)

PATCHNUM=1734
LSPINFO=include/linux/lsppatchlevel.h
TMPFILE=/tmp/mvl_patch_$$

function dopatch() {
    patch $* >${TMPFILE} 2>&1 <<"EOF"
From 782a831a45afa332709ee4153df5951784bbb824 Mon Sep 17 00:00:00 2001
From: Tony Lindgren <tony@atomide.com>
Date: Thu, 16 Aug 2007 00:59:44 -0700
Subject: [PATCH] musb_hdrc: Search and replace pDmaChannel with dma_channel

Search and replace pDmaChannel with dma_channel

Signed-off-by: Tony Lindgren <tony@atomide.com>
(cherry picked from commit 58c4d26d8575bd55c8e3e362da7aea09af9e99e5)
Index: linux-2.6.18/drivers/usb/musb/musb_host.c
===================================================================
--- linux-2.6.18.orig/drivers/usb/musb/musb_host.c
+++ linux-2.6.18/drivers/usb/musb/musb_host.c
@@ -628,7 +628,7 @@ static void musb_ep_program(struct musb 
 			u8 * buf, u32 len)
 {
 	struct dma_controller	*dma_controller;
-	struct dma_channel	*pDmaChannel;
+	struct dma_channel	*dma_channel;
 	u8			bDmaOk;
 	void __iomem		*mbase = musb->mregs;
 	struct musb_hw_ep	*hw_ep = musb->endpoints + epnum;
@@ -656,17 +656,17 @@ static void musb_ep_program(struct musb 
 	/* candidate for DMA? */
 	dma_controller = musb->dma_controller;
 	if (is_dma_capable() && epnum && dma_controller) {
-		pDmaChannel = is_out ? hw_ep->tx_channel : hw_ep->rx_channel;
-		if (!pDmaChannel) {
-			pDmaChannel = dma_controller->channel_alloc(
+		dma_channel = is_out ? hw_ep->tx_channel : hw_ep->rx_channel;
+		if (!dma_channel) {
+			dma_channel = dma_controller->channel_alloc(
 					dma_controller, hw_ep, is_out);
 			if (is_out)
-				hw_ep->tx_channel = pDmaChannel;
+				hw_ep->tx_channel = dma_channel;
 			else
-				hw_ep->rx_channel = pDmaChannel;
+				hw_ep->rx_channel = dma_channel;
 		}
 	} else
-		pDmaChannel = NULL;
+		dma_channel = NULL;
 
 	/* make sure we clear DMAEnab, autoSet bits from previous run */
 
@@ -760,7 +760,7 @@ static void musb_ep_program(struct musb 
 			wLoadCount = min((u32) packet_sz, len);
 
 #ifdef CONFIG_USB_INVENTRA_DMA
-		if (pDmaChannel) {
+		if (dma_channel) {
 
 			/* clear previous state */
 			csr = musb_readw(epio, MUSB_TXCSR);
@@ -771,15 +771,15 @@ static void musb_ep_program(struct musb 
 			musb_writew(epio, MUSB_TXCSR,
 				csr | MUSB_TXCSR_MODE);
 
-			qh->segsize = min(len, pDmaChannel->max_len);
+			qh->segsize = min(len, dma_channel->max_len);
 
 			if (qh->segsize <= packet_sz)
-				pDmaChannel->desired_mode = 0;
+				dma_channel->desired_mode = 0;
 			else
-				pDmaChannel->desired_mode = 1;
+				dma_channel->desired_mode = 1;
 
 
-			if (pDmaChannel->desired_mode == 0) {
+			if (dma_channel->desired_mode == 0) {
 				csr &= ~(MUSB_TXCSR_AUTOSET
 					| MUSB_TXCSR_DMAMODE);
 				csr |= (MUSB_TXCSR_DMAENAB);
@@ -792,25 +792,25 @@ static void musb_ep_program(struct musb 
 			musb_writew(epio, MUSB_TXCSR, csr);
 
 			bDmaOk = dma_controller->channel_program(
-					pDmaChannel, packet_sz,
-					pDmaChannel->desired_mode,
+					dma_channel, packet_sz,
+					dma_channel->desired_mode,
 					urb->transfer_dma,
 					qh->segsize);
 			if (bDmaOk) {
 				wLoadCount = 0;
 			} else {
-				dma_controller->channel_release(pDmaChannel);
+				dma_controller->channel_release(dma_channel);
 				if (is_out)
 					hw_ep->tx_channel = NULL;
 				else
 					hw_ep->rx_channel = NULL;
-				pDmaChannel = NULL;
+				dma_channel = NULL;
 			}
 		}
 #endif
 
 		/* candidate for DMA */
-		if ((is_cppi_enabled() || tusb_dma_omap()) && pDmaChannel) {
+		if ((is_cppi_enabled() || tusb_dma_omap()) && dma_channel) {
 
 			/* program endpoint CSRs first, then setup DMA.
 			 * assume CPPI setup succeeds.
@@ -824,14 +824,14 @@ static void musb_ep_program(struct musb 
 			musb_writew(epio, MUSB_TXCSR,
 				csr | MUSB_TXCSR_MODE);
 
-			pDmaChannel->actual_len = 0L;
+			dma_channel->actual_len = 0L;
 			qh->segsize = len;
 
 			/* TX uses "rndis" mode automatically, but needs help
 			 * to identify the zero-length-final-packet case.
 			 */
 			bDmaOk = dma_controller->channel_program(
-					pDmaChannel, packet_sz,
+					dma_channel, packet_sz,
 					(urb->transfer_flags
 							& URB_ZERO_PACKET)
 						== URB_ZERO_PACKET,
@@ -840,8 +840,8 @@ static void musb_ep_program(struct musb 
 			if (bDmaOk) {
 				wLoadCount = 0;
 			} else {
-				dma_controller->channel_release(pDmaChannel);
-				pDmaChannel = hw_ep->tx_channel = NULL;
+				dma_controller->channel_release(dma_channel);
+				dma_channel = hw_ep->tx_channel = NULL;
 
 				/* REVISIT there's an error path here that
 				 * needs handling:  can't do dma, but
@@ -901,10 +901,10 @@ static void musb_ep_program(struct musb 
 
 		/* kick things off */
 
-		if ((is_cppi_enabled() || tusb_dma_omap()) && pDmaChannel) {
+		if ((is_cppi_enabled() || tusb_dma_omap()) && dma_channel) {
 			/* candidate for DMA */
-			if (pDmaChannel) {
-				pDmaChannel->actual_len = 0L;
+			if (dma_channel) {
+				dma_channel->actual_len = 0L;
 				qh->segsize = len;
 
 				/* AUTOREQ is in a DMA register */
@@ -916,15 +916,15 @@ static void musb_ep_program(struct musb 
 				 * errors, we dare not queue multiple transfers.
 				 */
 				bDmaOk = dma_controller->channel_program(
-						pDmaChannel, packet_sz,
+						dma_channel, packet_sz,
 						!(urb->transfer_flags
 							& URB_SHORT_NOT_OK),
 						urb->transfer_dma,
 						qh->segsize);
 				if (!bDmaOk) {
 					dma_controller->channel_release(
-							pDmaChannel);
-					pDmaChannel = hw_ep->rx_channel = NULL;
+							dma_channel);
+					dma_channel = hw_ep->rx_channel = NULL;
 				} else
 					csr |= MUSB_RXCSR_DMAENAB;
 			}
Index: linux-2.6.18/mvl_patches/pro50-1734.c
===================================================================
--- /dev/null
+++ linux-2.6.18/mvl_patches/pro50-1734.c
@@ -0,0 +1,16 @@
+/*
+ * Author: MontaVista Software, Inc. <source@mvista.com>
+ *
+ * 2008 (c) MontaVista Software, Inc. This file is licensed under
+ * the terms of the GNU General Public License version 2. This program
+ * is licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ */
+#include <linux/init.h>
+#include <linux/mvl_patch.h>
+
+static __init int regpatch(void)
+{
+        return mvl_register_patch(1734);
+}
+module_init(regpatch);
EOF

    rv=0
    cat /tmp/mvl_patch_$$
    if [ "$?" != "0" ]; then
	# Patch had a hard error, return 2
	rv=2
    elif grep '^Hunk' ${TMPFILE}; then
	rv=1
    fi

    rm -f ${TMPFILE}
    return $rv
}

function options() {
    echo "Options are:"
    echo "  --force-unsupported - Force the patch to be applied even if the"
    echo "      patch is out of order or the current kernel is unsupported."
    echo "      Use of this option is strongly discouraged."
    echo "  --force-apply-fuzz - If the patch has fuzz, go ahead and apply"
    echo "      it anyway.  This can occur if the patch is applied to an"
    echo "      unsupported kernel or applied out of order or if you have"
    echo "      made your own modifications to the kernel.  Use with"
    echo "      caution."
    echo "  --remove - Remove the patch"
}


function checkpatchnum() {
    local level;

    if [ ! -e ${1} ]; then
	echo "${1} does not exist, make sure you are in the kernel" 1>&2
	echo "base directory" 1>&2
	exit 1;
    fi

    # Extract the current patch number from the lsp info file.
    level=`grep '#define LSP_.*PATCH_LEVEL' ${1} | sed 's/^.*\"\\(.*\\)\".*\$/\\1/'`
    if [ "a$level" = "a" ]; then
	echo "No patch level defined in ${1}, are you sure this is" 1>&2
	echo "a valid MVL kernel LSP?" 1>&2
	exit 1;
    fi

    expr $level + 0 >/dev/null 2>&1
    isnum=$?

    # Check if the kernel is supported
    if [ "$level" = "unsupported" ]; then
	echo "**Current kernel is unsupported by MontaVista due to patches"
	echo "  begin applied out of order."
	if [ $force_unsupported == 't' ]; then
	    echo "  Application is forced, applying patch anyway"
	    unsupported=t
	    fix_patch_level=f
	else
	    echo "  Patch application aborted.  Use --force-unsupported to"
	    echo "  force the patch to be applied, but the kernel will not"
	    echo "  be supported by MontaVista."
	    exit 1;
	fi

    # Check the patch number from the lspinfo file to make sure it is
    # a valid number
    elif [ $isnum = 2 ]; then
	echo "**Patch level from ${1} was not a valid number, " 1>&2
	echo "  are you sure this is a valid MVL kernel LSP?" 1>&2
	exit 1;

    # Check that this is the right patch number to be applied.
    elif [ `expr $level $3` ${4} ${2} ]; then
	echo "**Application of this patch is out of order and will cause the"
	echo "  kernel to be unsupported by MontaVista."
	if [ $force_unsupported == 't' ]; then
	    echo "  application is forced, applying patch anyway"
	    unsupported=t
	else
	    echo "  Patch application aborted.  Please get all the patches in"
	    echo "  proper order from MontaVista Zone and apply them in order"
	    echo "  If you really want to apply this patch, use"
	    echo "  --force-unsupported to force the patch to be applied, but"
	    echo "  the kernel will not be supported by MontaVista."
	    exit 1;
	fi
    fi
}

#
# Update the patch level in the file.  Note that we use patch to do
# this.  Certain weak version control systems don't take kindly to
# arbitrary changes directly to files, but do have a special version
# of "patch" that understands this.
#
function setpatchnum() {
    sed "s/^#define LSP_\(.*\)PATCH_LEVEL[ \t*]\"[0-9]*\".*$/#define LSP_\1PATCH_LEVEL \"${2}\"/" <${1} >/tmp/$$.tmp1
    diff -u ${1} /tmp/$$.tmp1 >/tmp/$$.tmp2
    rm /tmp/$$.tmp1
    sed "s/^+++ \/tmp\/$$.tmp1/+++ include\/linux\/lsppatchlevel.h/" </tmp/$$.tmp2 >/tmp/$$.tmp1
    rm /tmp/$$.tmp2
    patch -p0 </tmp/$$.tmp1
    rm /tmp/$$.tmp1
}

force_unsupported=f
force_apply_fuzz=""
unsupported=f
fix_patch_level=t
reverse=f
common_patchnum_diff='+ 1'
common_patchnum=$PATCHNUM
patch_extraopts=''

# Extract command line parameters.
while [ $# -gt 0 ]; do
    if [ "a$1" == 'a--force-unsupported' ]; then
	force_unsupported=t
    elif [ "a$1" == 'a--force-apply-fuzz' ]; then
	force_apply_fuzz=y
    elif [ "a$1" == 'a--remove' ]; then
	reverse=t
	common_patchnum_diff=''
	common_patchnum=`expr $PATCHNUM - 1`
	patch_extraopts='--reverse'
    else
	echo "'$1' is an invalid command line parameter."
	options
	exit 1
    fi
    shift
done

echo "Checking patch level"
checkpatchnum ${LSPINFO} ${PATCHNUM} "${common_patchnum_diff}" "-ne"

if ! dopatch -p1 --dry-run --force $patch_extraopts; then
    if [ $? = 2 ]; then
	echo -n "**Patch had errors, application aborted" 1>&2
	exit 1;
    fi

    # Patch has warnings
    clean_apply=${force_apply_fuzz}
    while [ "a$clean_apply" != 'ay' -a "a$clean_apply" != 'an' ]; do
	echo -n "**Patch did not apply cleanly.  Do you still want to apply? (y/n) > "
	read clean_apply
	clean_apply=`echo "$clean_apply" | tr '[:upper:]' '[:lower:]'`
    done
    if [ $clean_apply = 'n' ]; then
	exit 1;
    fi
fi

dopatch -p1 --force $patch_extraopts

if [ $fix_patch_level = 't' ]; then 
    if [ $unsupported = 't' ]; then
	common_patchnum="unsupported"
    fi

    setpatchnum ${LSPINFO} ${common_patchnum}
fi

# Move the patch file into the mvl_patches directory if we are not reversing
if [ $reverse != 't' ]; then 
    if echo $0 | grep '/' >/dev/null; then
	# Filename is a path, either absolute or from the current directory.
	srcfile=$0
    else
	# Filename is from the path
	for i in `echo $PATH | tr ':;' '  '`; do
	    if [ -e ${i}/$0 ]; then
		srcfile=${i}/$0
	    fi
	done
    fi

    fname=`basename ${srcfile}`
    diff -uN mvl_patches/${fname} ${srcfile} | (cd mvl_patches; patch)
fi

