#! /usr/bin/env bash
# Patch: -pro_emac_status_update_func
# Date: Thu Feb 19 15:02:42 2009
# Source: MontaVista Software, Inc.
# MR: 28780
# Type: Enhancement
# Disposition: local
# Signed-off-by: Aleksey Makarov <amakarov@ru.mvista.com>
# Signed-off-by: Mikhail Cherkashin <mcherkashin@ru.mvista.com>
# Signed-off-by: Sergei Shtylyov <sshtylyov@ru.mvista.com>
# Description:
# Replace EMAC_IOCTL_STATUS_UPDATE ioctl() call with emac_status_update().
# 
#  drivers/net/davinci_emac.c |  151 +++++++++++++++++++--------------------------
#  1 files changed, 67 insertions(+), 84 deletions(-)
# 

PATCHNUM=2130
LSPINFO=include/linux/lsppatchlevel.h
TMPFILE=/tmp/mvl_patch_$$

function dopatch() {
    patch $* >${TMPFILE} 2>&1 <<"EOF"
Source: MontaVista Software, Inc.
MR: 28780
Type: Enhancement
Disposition: local
Signed-off-by: Aleksey Makarov <amakarov@ru.mvista.com>
Signed-off-by: Mikhail Cherkashin <mcherkashin@ru.mvista.com>
Signed-off-by: Sergei Shtylyov <sshtylyov@ru.mvista.com>
Description:
Replace EMAC_IOCTL_STATUS_UPDATE ioctl() call with emac_status_update().

 drivers/net/davinci_emac.c |  151 +++++++++++++++++++--------------------------
 mvl_patches/pro50-2130.c   |   16 ++++
 2 files changed, 83 insertions(+), 84 deletions(-)

Index: linux-2.6.18/drivers/net/davinci_emac.c
===================================================================
--- linux-2.6.18.orig/drivers/net/davinci_emac.c
+++ linux-2.6.18/drivers/net/davinci_emac.c
@@ -397,7 +397,6 @@ typedef void *emac_net_data_token;
 
 #define EMAC_IOCTL_TIMER_START           (EMAC_IOCTL_BASE + 16)
 #define EMAC_IOCTL_TIMER_STOP            (EMAC_IOCTL_BASE + 17)
-#define EMAC_IOCTL_STATUS_UPDATE         (EMAC_IOCTL_BASE + 18)
 #define EMAC_IOCTL_MIB64_CNT_TIMER_START (EMAC_IOCTL_BASE + 19)
 #define EMAC_IOCTL_MIB64_CNT_TIMER_STOP  (EMAC_IOCTL_BASE + 20)
 
@@ -1606,81 +1605,6 @@ static int emac_control_cb(struct emac_d
 		}
 		break;
 
-	case EMAC_IOCTL_STATUS_UPDATE:
-		{
-			/* cmd_arg will point to status structure,
-			 * param not used  */
-			struct net_device *netdev = dev->owner;
-
-			emac_status *status = &dev->ddc_status;
-			dev->ddc_status = *((emac_status *) cmd_arg);
-			if ((status->hw_status & EMAC_TX_HOST_ERROR) ==
-			    EMAC_TX_HOST_ERROR) {
-				ERR("TX Host Error. "
-				    "Transmit Stopped %s\n", netdev->name);
-			}
-			if ((status->hw_status & EMAC_RX_HOST_ERROR) ==
-			    EMAC_RX_HOST_ERROR) {
-				ERR("RX Host Error. "
-				    "Receive Stopped %s\n", netdev->name);
-			}
-			if (status->phy_linked) {
-				/* link ON */
-				if (!netif_carrier_ok(netdev)) {
-					netif_carrier_on(netdev);
-				}
-
-				dev->giga_bit_enable = FALSE;
-
-				if (status->phy_speed == 1000) {
-					dev->link_speed = 1000000000;
-					dev->giga_bit_enable = TRUE;
-				} else if (status->phy_speed == 100) {
-					dev->link_speed = 100000000;
-				} else {
-					dev->link_speed = 10000000;
-				}
-
-				dev->link_mode =
-				    ((status->phy_duplex == PHY_DUPLEX_FULL) ?
-					PHY_DUPLEX_FULL : PHY_DUPLEX_HALF);
-
-				/* reactivate the transmit queue if it
-				 * is stopped */
-				if (netif_running(netdev)
-				    && netif_queue_stopped(netdev)) {
-					netif_wake_queue(netdev);
-				}
-			} else {
-				/* link OFF */
-				if (netif_carrier_ok(netdev)) {
-					/* do we need to register
-					 * synchronization issues with
-					 * stats here. */
-					dev->link_speed = 100000000;
-					dev->link_mode = 1;
-					netif_carrier_off(netdev);
-				}
-				if (!netif_queue_stopped(netdev)) {
-					/* so that kernel does not
-					 * keep on xmiting pkts. */
-					netif_stop_queue(netdev);
-				}
-			}
-
-				pr_debug("%s, PhyNum %d,  %s, %s, %s\n",
-				    dev->owner->name,
-				    status->phy_num,
-				    ((status->phy_duplex == PHY_DUPLEX_FULL) ?
-				     "Full Duplex" : "Half Duplex"),
-					((status->phy_speed > 10) ?
-					((status->phy_speed > 100) ?
-					"1000 Mbps" : "100 Mbps") : "10 Mbps"),
-				    ((status->phy_linked) ?
-				     "Linked" : "NO LINK"));
-		}
-		break;
-
 	case EMAC_IOCTL_MIB64_CNT_TIMER_START:
 		{
 			/* cmd will directly have the timer period of the
@@ -1716,6 +1640,71 @@ static int emac_control_cb(struct emac_d
 	return (EMAC_SUCCESS);
 }
 
+static void emac_status_update(struct emac_dev *dev, emac_status *cmd_arg)
+{
+
+	/* cmd_arg will point to status structure,
+	 * param not used  */
+	struct net_device *netdev = dev->owner;
+
+	emac_status *status = &dev->ddc_status;
+	dev->ddc_status = *cmd_arg;
+	if ((status->hw_status & EMAC_TX_HOST_ERROR) ==
+			EMAC_TX_HOST_ERROR) {
+		ERR("TX Host Error. "
+				"Transmit Stopped %s\n", netdev->name);
+	}
+	if ((status->hw_status & EMAC_RX_HOST_ERROR) ==
+			EMAC_RX_HOST_ERROR) {
+		ERR("RX Host Error. "
+				"Receive Stopped %s\n", netdev->name);
+	}
+	if (status->phy_linked) {
+		/* link ON */
+		if (!netif_carrier_ok(netdev))
+			netif_carrier_on(netdev);
+
+		dev->link_speed =
+			((status->
+			  phy_speed == 100) ? 100000000 : 10000000);
+		dev->link_mode =
+			((status->phy_duplex == PHY_DUPLEX_FULL) ?
+			 PHY_DUPLEX_FULL : PHY_DUPLEX_HALF);
+
+		/* reactivate the transmit queue if it
+		 * is stopped */
+		if (netif_running(netdev)
+				&& netif_queue_stopped(netdev)) {
+			netif_wake_queue(netdev);
+		}
+	} else {
+		/* link OFF */
+		if (netif_carrier_ok(netdev)) {
+			/* do we need to register
+			 * synchronization issues with
+			 * stats here. */
+			dev->link_speed = 100000000;
+			dev->link_mode = 1;
+			netif_carrier_off(netdev);
+		}
+		if (!netif_queue_stopped(netdev)) {
+			/* so that kernel does not
+			 * keep on xmiting pkts. */
+			netif_stop_queue(netdev);
+		}
+	}
+
+	pr_debug("%s, PhyNum %d,  %s, %s, %s\n",
+			dev->owner->name,
+			status->phy_num,
+			((status->phy_duplex == PHY_DUPLEX_FULL) ?
+			 "Full Duplex" : "Half Duplex"),
+			((status->phy_speed == 100) ?
+			 "100 Mbps" : "10 Mbps"),
+			((status->phy_linked) ?
+			 "Linked" : "NO LINK"));
+}
+
 /*****************************************************************************
  *
  * emacEndGetConfig - Extract configuration for given unit number/instance
@@ -3890,9 +3879,6 @@ static int emac_open(struct emac_dev *de
 	 * update DDA layer */
 	emac_set_phy_mode(dev);
 
-	emac_control_cb(dev,
-			EMAC_IOCTL_STATUS_UPDATE, (void *)&dev->status, NULL);
-
 	/* start the tick timer via DDA */
 	emac_control_cb(dev,
 			EMAC_IOCTL_TIMER_START,
@@ -5313,9 +5299,7 @@ static int emac_tick(struct emac_dev *de
 		tick_change = emac_mdio_tick();
 		if (tick_change == 1) {	/*  MDIO indicated a change  */
 			emac_update_phy_status(dev);
-			emac_control_cb(dev,
-					EMAC_IOCTL_STATUS_UPDATE,
-					(void *)&dev->status, NULL);
+			emac_status_update (dev, &dev->status);
 		} else if ((dev->init_cfg.phy_mode & SNWAY_AUTOMDIX)
 			   && (tick_change & _MIIMDIO_MDIXFLIP)) {
 			/* DaVinci does not have MDI/MDIX on chip facility */
@@ -5379,8 +5363,7 @@ static void emac_process_host_error(stru
 	}
 
 	/* inform DDA layer about this critical failure */
-	emac_control_cb(dev,
-			EMAC_IOCTL_STATUS_UPDATE, (void *)&dev->status, NULL);
+	emac_status_update(dev, &dev->status);
 }
 
 /**
Index: linux-2.6.18/mvl_patches/pro50-2130.c
===================================================================
--- /dev/null
+++ linux-2.6.18/mvl_patches/pro50-2130.c
@@ -0,0 +1,16 @@
+/*
+ * Author: MontaVista Software, Inc. <source@mvista.com>
+ *
+ * 2009 (c) MontaVista Software, Inc. This file is licensed under
+ * the terms of the GNU General Public License version 2. This program
+ * is licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ */
+#include <linux/init.h>
+#include <linux/mvl_patch.h>
+
+static __init int regpatch(void)
+{
+        return mvl_register_patch(2130);
+}
+module_init(regpatch);
EOF

    rv=0
    cat /tmp/mvl_patch_$$
    if [ "$?" != "0" ]; then
	# Patch had a hard error, return 2
	rv=2
    elif grep '^Hunk' ${TMPFILE}; then
	rv=1
    fi

    rm -f ${TMPFILE}
    return $rv
}

function options() {
    echo "Options are:"
    echo "  --force-unsupported - Force the patch to be applied even if the"
    echo "      patch is out of order or the current kernel is unsupported."
    echo "      Use of this option is strongly discouraged."
    echo "  --force-apply-fuzz - If the patch has fuzz, go ahead and apply"
    echo "      it anyway.  This can occur if the patch is applied to an"
    echo "      unsupported kernel or applied out of order or if you have"
    echo "      made your own modifications to the kernel.  Use with"
    echo "      caution."
    echo "  --remove - Remove the patch"
}


function checkpatchnum() {
    local level;

    if [ ! -e ${1} ]; then
	echo "${1} does not exist, make sure you are in the kernel" 1>&2
	echo "base directory" 1>&2
	exit 1;
    fi

    # Extract the current patch number from the lsp info file.
    level=`grep '#define LSP_.*PATCH_LEVEL' ${1} | sed 's/^.*\"\\(.*\\)\".*\$/\\1/'`
    if [ "a$level" = "a" ]; then
	echo "No patch level defined in ${1}, are you sure this is" 1>&2
	echo "a valid MVL kernel LSP?" 1>&2
	exit 1;
    fi

    expr $level + 0 >/dev/null 2>&1
    isnum=$?

    # Check if the kernel is supported
    if [ "$level" = "unsupported" ]; then
	echo "**Current kernel is unsupported by MontaVista due to patches"
	echo "  begin applied out of order."
	if [ $force_unsupported == 't' ]; then
	    echo "  Application is forced, applying patch anyway"
	    unsupported=t
	    fix_patch_level=f
	else
	    echo "  Patch application aborted.  Use --force-unsupported to"
	    echo "  force the patch to be applied, but the kernel will not"
	    echo "  be supported by MontaVista."
	    exit 1;
	fi

    # Check the patch number from the lspinfo file to make sure it is
    # a valid number
    elif [ $isnum = 2 ]; then
	echo "**Patch level from ${1} was not a valid number, " 1>&2
	echo "  are you sure this is a valid MVL kernel LSP?" 1>&2
	exit 1;

    # Check that this is the right patch number to be applied.
    elif [ `expr $level $3` ${4} ${2} ]; then
	echo "**Application of this patch is out of order and will cause the"
	echo "  kernel to be unsupported by MontaVista."
	if [ $force_unsupported == 't' ]; then
	    echo "  application is forced, applying patch anyway"
	    unsupported=t
	else
	    echo "  Patch application aborted.  Please get all the patches in"
	    echo "  proper order from MontaVista Zone and apply them in order"
	    echo "  If you really want to apply this patch, use"
	    echo "  --force-unsupported to force the patch to be applied, but"
	    echo "  the kernel will not be supported by MontaVista."
	    exit 1;
	fi
    fi
}

#
# Update the patch level in the file.  Note that we use patch to do
# this.  Certain weak version control systems don't take kindly to
# arbitrary changes directly to files, but do have a special version
# of "patch" that understands this.
#
function setpatchnum() {
    sed "s/^#define LSP_\(.*\)PATCH_LEVEL[ \t*]\"[0-9]*\".*$/#define LSP_\1PATCH_LEVEL \"${2}\"/" <${1} >/tmp/$$.tmp1
    diff -u ${1} /tmp/$$.tmp1 >/tmp/$$.tmp2
    rm /tmp/$$.tmp1
    sed "s/^+++ \/tmp\/$$.tmp1/+++ include\/linux\/lsppatchlevel.h/" </tmp/$$.tmp2 >/tmp/$$.tmp1
    rm /tmp/$$.tmp2
    patch -p0 </tmp/$$.tmp1
    rm /tmp/$$.tmp1
}

force_unsupported=f
force_apply_fuzz=""
unsupported=f
fix_patch_level=t
reverse=f
common_patchnum_diff='+ 1'
common_patchnum=$PATCHNUM
patch_extraopts=''

# Extract command line parameters.
while [ $# -gt 0 ]; do
    if [ "a$1" == 'a--force-unsupported' ]; then
	force_unsupported=t
    elif [ "a$1" == 'a--force-apply-fuzz' ]; then
	force_apply_fuzz=y
    elif [ "a$1" == 'a--remove' ]; then
	reverse=t
	common_patchnum_diff=''
	common_patchnum=`expr $PATCHNUM - 1`
	patch_extraopts='--reverse'
    else
	echo "'$1' is an invalid command line parameter."
	options
	exit 1
    fi
    shift
done

echo "Checking patch level"
checkpatchnum ${LSPINFO} ${PATCHNUM} "${common_patchnum_diff}" "-ne"

if ! dopatch -p1 --dry-run --force $patch_extraopts; then
    if [ $? = 2 ]; then
	echo -n "**Patch had errors, application aborted" 1>&2
	exit 1;
    fi

    # Patch has warnings
    clean_apply=${force_apply_fuzz}
    while [ "a$clean_apply" != 'ay' -a "a$clean_apply" != 'an' ]; do
	echo -n "**Patch did not apply cleanly.  Do you still want to apply? (y/n) > "
	read clean_apply
	clean_apply=`echo "$clean_apply" | tr '[:upper:]' '[:lower:]'`
    done
    if [ $clean_apply = 'n' ]; then
	exit 1;
    fi
fi

dopatch -p1 --force $patch_extraopts

if [ $fix_patch_level = 't' ]; then 
    if [ $unsupported = 't' ]; then
	common_patchnum="unsupported"
    fi

    setpatchnum ${LSPINFO} ${common_patchnum}
fi

# Move the patch file into the mvl_patches directory if we are not reversing
if [ $reverse != 't' ]; then 
    if echo $0 | grep '/' >/dev/null; then
	# Filename is a path, either absolute or from the current directory.
	srcfile=$0
    else
	# Filename is from the path
	for i in `echo $PATH | tr ':;' '  '`; do
	    if [ -e ${i}/$0 ]; then
		srcfile=${i}/$0
	    fi
	done
    fi

    fname=`basename ${srcfile}`
    diff -uN mvl_patches/${fname} ${srcfile} | (cd mvl_patches; patch)
fi

