#! /usr/bin/env bash
# Patch: -pro_MUSB_Coding_style_cleanup_kill_all_CPP_style_comme
# Date: Fri Sep 19 14:18:05 2008
# From 663d96df995a1099d35b9f96d936e919b2ad0f61 Mon Sep 17 00:00:00 2001
# From: Bryan Wu <bryan.wu@analog.com>
# Date: Fri, 24 Aug 2007 05:04:52 -0700
# Subject: [PATCH] MUSB: Coding style cleanup, kill all CPP style comments
# 
# Coding style cleanup, kill all CPP style comments
# 
# Signed-off-by: Bryan Wu <bryan.wu@analog.com>
# Signed-off-by: Tony Lindgren <tony@atomide.com>
# (cherry picked from commit 3c5639c67736e191ac380fc94fccaa347cfd964c)

PATCHNUM=1783
LSPINFO=include/linux/lsppatchlevel.h
TMPFILE=/tmp/mvl_patch_$$

function dopatch() {
    patch $* >${TMPFILE} 2>&1 <<"EOF"
From 663d96df995a1099d35b9f96d936e919b2ad0f61 Mon Sep 17 00:00:00 2001
From: Bryan Wu <bryan.wu@analog.com>
Date: Fri, 24 Aug 2007 05:04:52 -0700
Subject: [PATCH] MUSB: Coding style cleanup, kill all CPP style comments

Coding style cleanup, kill all CPP style comments

Signed-off-by: Bryan Wu <bryan.wu@analog.com>
Signed-off-by: Tony Lindgren <tony@atomide.com>
(cherry picked from commit 3c5639c67736e191ac380fc94fccaa347cfd964c)
Index: linux-2.6.18/drivers/usb/musb/cppi_dma.c
===================================================================
--- linux-2.6.18.orig/drivers/usb/musb/cppi_dma.c
+++ linux-2.6.18/drivers/usb/musb/cppi_dma.c
@@ -401,7 +401,7 @@ cppi_dump_tx(int level, struct cppi_chan
 
 		musb_readl(c->stateRam, 4 * 4),	/* flags */
 		musb_readl(c->stateRam, 5 * 4),	/* len */
-		// dummy/unused word 6
+		/* dummy/unused word 6 */
 		musb_readl(c->stateRam, 7 * 4)	/* completion */
 		);
 }
@@ -963,13 +963,13 @@ static int cppi_channel_program(struct d
 		WARN("%cX DMA%d not cleaned up after abort!\n",
 				otgChannel->transmit ? 'T' : 'R',
 				otgChannel->chNo);
-		//WARN_ON(1);
+		/* WARN_ON(1); */
 		break;
 	case MUSB_DMA_STATUS_BUSY:
 		WARN("program active channel?  %cX DMA%d\n",
 				otgChannel->transmit ? 'T' : 'R',
 				otgChannel->chNo);
-		//WARN_ON(1);
+		/* WARN_ON(1); */
 		break;
 	case MUSB_DMA_STATUS_UNKNOWN:
 		DBG(1, "%cX DMA%d not allocated!\n",
@@ -1206,7 +1206,7 @@ void cppi_completion(struct musb *musb, 
 				 *
 				 * REVISIT have observed bit 18 set; huh??
 				 */
-//				if ((bdPtr->hOptions & CPPI_EOQ_MASK))
+				/* if ((bdPtr->hOptions & CPPI_EOQ_MASK)) */
 					txState->completionPtr = bdPtr->dma;
 
 				/* stop scanning on end-of-segment */
@@ -1216,7 +1216,7 @@ void cppi_completion(struct musb *musb, 
 
 			/* on end of segment, maybe go to next one */
 			if (bReqComplete) {
-				//cppi_dump_tx(4, txChannel, "/complete");
+				/* cppi_dump_tx(4, txChannel, "/complete"); */
 
 				/* transfer more, or report completion */
 				if (txChannel->currOffset
@@ -1416,7 +1416,7 @@ static int cppi_channel_abort(struct dma
 			musb_writel(regBase, DAVINCI_TXCPPI_INTCLR_REG,
 					(1 << otgCh->chNo));
 
-		// REVISIT put timeouts on these controller handshakes
+		/* REVISIT put timeouts on these controller handshakes */
 
 		cppi_dump_tx(6, otgCh, " (teardown)");
 
Index: linux-2.6.18/drivers/usb/musb/cppi_dma.h
===================================================================
--- linux-2.6.18.orig/drivers/usb/musb/cppi_dma.h
+++ linux-2.6.18/drivers/usb/musb/cppi_dma.h
@@ -29,7 +29,7 @@
 
 /* CPPI data structure definitions */
 
-#define	CPPI_DESCRIPTOR_ALIGN	16	// bytes; 5-dec docs say 4-byte align
+#define	CPPI_DESCRIPTOR_ALIGN	16	/* bytes; 5-dec docs say 4-byte align */
 
 struct cppi_descriptor {
 	/* Hardware Overlay */
Index: linux-2.6.18/drivers/usb/musb/musb_core.c
===================================================================
--- linux-2.6.18.orig/drivers/usb/musb/musb_core.c
+++ linux-2.6.18/drivers/usb/musb/musb_core.c
@@ -530,7 +530,7 @@ static irqreturn_t musb_stage0_irq(struc
 					s = "<AValid"; break;
 				case 2 << MUSB_DEVCTL_VBUS_SHIFT:
 					s = "<VBusValid"; break;
-				//case 3 << MUSB_DEVCTL_VBUS_SHIFT:
+				/* case 3 << MUSB_DEVCTL_VBUS_SHIFT: */
 				default:
 					s = "VALID"; break;
 				}; s; }),
@@ -555,7 +555,7 @@ static irqreturn_t musb_stage0_irq(struc
 #ifdef CONFIG_USB_MUSB_OTG
 		/* flush endpoints when transitioning from Device Mode */
 		if (is_peripheral_active(musb)) {
-			// REVISIT HNP; just force disconnect
+			/* REVISIT HNP; just force disconnect */
 		}
 		musb_writew(mbase, MUSB_INTRTXE, musb->epmask);
 		musb_writew(mbase, MUSB_INTRRXE, musb->epmask & 0xfffe);
@@ -682,8 +682,10 @@ static irqreturn_t musb_stage2_irq(struc
 		for (epnum = 1; (epnum < musb->nr_endpoints)
 					&& (musb->epmask >= (1 << epnum));
 				epnum++, ep++) {
-			// FIXME handle framecounter wraps (12 bits)
-			// eliminate duplicated StartUrb logic
+			/*
+			 * FIXME handle framecounter wraps (12 bits)
+			 * eliminate duplicated StartUrb logic
+			 */
 			if (ep->dwWaitFrame >= frame) {
 				ep->dwWaitFrame = 0;
 				printk("SOF --> periodic TX%s on %d\n",
@@ -813,7 +815,7 @@ void musb_start(struct musb *musb)
 						| MUSB_POWER_SOFTCONN
 						| MUSB_POWER_HSENAB
 						/* ENSUSPEND wedges tusb */
-						// | MUSB_POWER_ENSUSPEND
+						/* | MUSB_POWER_ENSUSPEND */
 						);
 
 	musb->is_active = 0;
@@ -1143,7 +1145,7 @@ static int __init ep_config_from_table(s
 
 
 	offset = fifo_setup(musb, hw_ep, &ep0_cfg, 0);
-	// assert(offset > 0)
+	/* assert(offset > 0) */
 
 	/* NOTE:  for RTL versions >= 1.400 EPINFO and RAMINFO would
 	 * be better than static MUSB_C_NUM_EPS and DYN_FIFO_SIZE...
@@ -1497,7 +1499,7 @@ irqreturn_t musb_interrupt(struct musb *
 	ep_num = 1;
 	while (reg) {
 		if (reg & 1) {
-			// musb_ep_select(musb->mregs, ep_num);
+			/* musb_ep_select(musb->mregs, ep_num); */
 			/* REVISIT just retval = ep->rx_irq(...) */
 			retval = IRQ_HANDLED;
 			if (devctl & MUSB_DEVCTL_HM) {
@@ -1518,7 +1520,7 @@ irqreturn_t musb_interrupt(struct musb *
 	ep_num = 1;
 	while (reg) {
 		if (reg & 1) {
-			// musb_ep_select(musb->mregs, ep_num);
+			/* musb_ep_select(musb->mregs, ep_num); */
 			/* REVISIT just retval |= ep->tx_irq(...) */
 			retval = IRQ_HANDLED;
 			if (devctl & MUSB_DEVCTL_HM) {
@@ -1964,7 +1966,7 @@ musb_init_controller(struct device *dev,
 		goto fail2;
 	}
 	musb->nIrq = nIrq;
-// FIXME this handles wakeup irqs wrong
+/* FIXME this handles wakeup irqs wrong */
 	if (enable_irq_wake(nIrq) == 0)
 		device_init_wakeup(dev, 1);
 
Index: linux-2.6.18/drivers/usb/musb/musb_debug.h
===================================================================
--- linux-2.6.18.orig/drivers/usb/musb/musb_debug.h
+++ linux-2.6.18/drivers/usb/musb/musb_debug.h
@@ -63,4 +63,4 @@ static inline int _dbg_level(unsigned l)
 
 extern const char *otg_state_string(struct musb *);
 
-#endif				//  __MUSB_LINUX_DEBUG_H__
+#endif				/*  __MUSB_LINUX_DEBUG_H__ */
Index: linux-2.6.18/drivers/usb/musb/musb_dma.h
===================================================================
--- linux-2.6.18.orig/drivers/usb/musb/musb_dma.h
+++ linux-2.6.18/drivers/usb/musb/musb_dma.h
@@ -113,7 +113,7 @@ struct dma_controller;
  */
 struct dma_channel {
 	void			*private_data;
-	// FIXME not void* private_data, but a dma_controller *
+	/* FIXME not void* private_data, but a dma_controller * */
 	size_t			max_len;
 	size_t			actual_len;
 	enum dma_channel_status	status;
Index: linux-2.6.18/drivers/usb/musb/musb_gadget.c
===================================================================
--- linux-2.6.18.orig/drivers/usb/musb/musb_gadget.c
+++ linux-2.6.18/drivers/usb/musb/musb_gadget.c
@@ -322,7 +322,7 @@ static void txstate(struct musb *musb, s
 							MUSB_TXCSR_DMAMODE);
 					csr |= (MUSB_TXCSR_DMAENAB |
 							MUSB_TXCSR_MODE);
-					// against programming guide
+					/* against programming guide */
 				}
 				else
 					csr |= (MUSB_TXCSR_AUTOSET
@@ -646,7 +646,7 @@ static void rxstate(struct musb *musb, s
 				csr |= MUSB_RXCSR_DMAENAB;
 #ifdef USE_MODE1
 				csr |= MUSB_RXCSR_AUTOCLEAR;
-//				csr |= MUSB_RXCSR_DMAMODE;
+				/* csr |= MUSB_RXCSR_DMAMODE; */
 
 				/* this special sequence (enabling and then
 				 * disabling MUSB_RXCSR_DMAMODE) is required
@@ -768,7 +768,7 @@ void musb_g_rx(struct musb *musb, u8 epn
 	}
 
 	if (csr & MUSB_RXCSR_P_OVERRUN) {
-		// csr |= MUSB_RXCSR_P_WZC_BITS;
+		/* csr |= MUSB_RXCSR_P_WZC_BITS; */
 		csr &= ~MUSB_RXCSR_P_OVERRUN;
 		musb_writew(epio, MUSB_RXCSR, csr);
 
@@ -1541,8 +1541,10 @@ static int musb_gadget_vbus_session(stru
 {
 	DBG(2, "<= %s =>\n", __FUNCTION__);
 
-	// FIXME iff driver's softconnect flag is set (as it is during probe,
-	// though that can clear it), just musb_pullup().
+	/*
+	 * FIXME iff driver's softconnect flag is set (as it is during probe,
+	 * though that can clear it), just musb_pullup().
+	 */
 
 	return -EINVAL;
 }
@@ -1580,7 +1582,7 @@ static const struct usb_gadget_ops musb_
 	.get_frame		= musb_gadget_get_frame,
 	.wakeup			= musb_gadget_wakeup,
 	.set_selfpowered	= musb_gadget_set_self_powered,
-	//.vbus_session		= musb_gadget_vbus_session,
+	/* .vbus_session		= musb_gadget_vbus_session, */
 	.vbus_draw		= musb_gadget_vbus_draw,
 	.pullup			= musb_gadget_pullup,
 };
@@ -1597,7 +1599,7 @@ static struct musb *the_gadget;
 
 static void musb_gadget_release(struct device *dev)
 {
-	// kref_put(WHAT)
+	/* kref_put(WHAT) */
 	dev_dbg(dev, "%s\n", __FUNCTION__);
 }
 
Index: linux-2.6.18/drivers/usb/musb/musb_gadget_ep0.c
===================================================================
--- linux-2.6.18.orig/drivers/usb/musb/musb_gadget_ep0.c
+++ linux-2.6.18/drivers/usb/musb/musb_gadget_ep0.c
@@ -494,7 +494,7 @@ static void ep0_txstate(struct musb *mus
 	u8			fifo_count;
 
 	if (!request) {
-		// WARN_ON(1);
+		/* WARN_ON(1); */
 		DBG(2, "odd; csr0 %04x\n", musb_readw(regs, MUSB_CSR0));
 		return;
 	}
Index: linux-2.6.18/drivers/usb/musb/musb_host.c
===================================================================
--- linux-2.6.18.orig/drivers/usb/musb/musb_host.c
+++ linux-2.6.18/drivers/usb/musb/musb_host.c
@@ -247,7 +247,7 @@ musb_start_urb(struct musb *musb, int is
 			qh->frame = urb->start_frame;
 			/* enable SOF interrupt so we can count down */
 DBG(1,"SOF for %d\n", epnum);
-#if 1 // ifndef	CONFIG_ARCH_DAVINCI
+#if 1 /* ifndef	CONFIG_ARCH_DAVINCI */
 			musb_writeb(mbase, MUSB_INTRUSBE, 0xff);
 #endif
 		}
@@ -482,7 +482,7 @@ musb_host_packet_rx(struct musb *musb, s
 	int			pipe = urb->pipe;
 	void			*buffer = urb->transfer_buffer;
 
-	// musb_ep_select(mbase, epnum);
+	/* musb_ep_select(mbase, epnum); */
 	rx_count = musb_readw(epio, MUSB_RXCOUNT);
 	DBG(3, "RX%d count %d, buffer %p len %d/%d\n", epnum, rx_count,
 			urb->transfer_buffer, qh->offset,
@@ -784,7 +784,7 @@ static void musb_ep_program(struct musb 
 				csr &= ~(MUSB_TXCSR_AUTOSET
 					| MUSB_TXCSR_DMAMODE);
 				csr |= (MUSB_TXCSR_DMAENAB);
-					// against programming guide
+					/* against programming guide */
 			} else
 				csr |= (MUSB_TXCSR_AUTOSET
 					| MUSB_TXCSR_DMAENAB
@@ -1312,7 +1312,7 @@ void musb_host_tx(struct musb *musb, u8 
 		musb_advance_schedule(musb, urb, hw_ep, USB_DIR_OUT);
 
 	} else if (!(tx_csr & MUSB_TXCSR_DMAENAB)) {
-		// WARN_ON(!buf);
+		/* WARN_ON(!buf); */
 
 		/* REVISIT:  some docs say that when hw_ep->tx_double_buffered,
 		 * (and presumably, fifo is not half-full) we should write TWO
@@ -1541,9 +1541,9 @@ void musb_host_rx(struct musb *musb, u8 
 			status = -EPROTO;
 			ERR("Rx interrupt with no errors or packet!\n");
 
-			// FIXME this is another "SHOULD NEVER HAPPEN"
+			/* FIXME this is another "SHOULD NEVER HAPPEN" */
 
-// SCRUB (RX)
+/* SCRUB (RX) */
 			/* do the proper sequence to abort the transfer */
 			musb_ep_select(mbase, epnum);
 			val &= ~MUSB_RXCSR_H_REQPKT;
@@ -2167,6 +2167,6 @@ const struct hc_driver musb_hc_driver = 
 	.hub_control		= musb_hub_control,
 	.bus_suspend		= musb_bus_suspend,
 	.bus_resume		= musb_bus_resume,
-//	.start_port_reset	= NULL,
-//	.hub_irq_enable		= NULL,
+	/* .start_port_reset	= NULL, */
+	/* .hub_irq_enable	= NULL, */
 };
Index: linux-2.6.18/drivers/usb/musb/musb_host.h
===================================================================
--- linux-2.6.18.orig/drivers/usb/musb/musb_host.h
+++ linux-2.6.18/drivers/usb/musb/musb_host.h
@@ -54,7 +54,7 @@ struct musb_qh {
 	struct musb_hw_ep	*hw_ep;		/* current binding */
 
 	struct list_head	ring;		/* of musb_qh */
-	//struct musb_qh		*next;		/* for periodic tree */
+	/* struct musb_qh		*next; */	/* for periodic tree */
 
 	unsigned		offset;		/* in urb->transfer_buffer */
 	unsigned		segsize;	/* current xfer fragment */
Index: linux-2.6.18/drivers/usb/musb/musb_procfs.c
===================================================================
--- linux-2.6.18.orig/drivers/usb/musb/musb_procfs.c
+++ linux-2.6.18/drivers/usb/musb/musb_procfs.c
@@ -705,8 +705,8 @@ static int musb_proc_write(struct file *
 			reg = musb_readb(mbase, MUSB_DEVCTL);
 			reg |= MUSB_DEVCTL_HR;
 			musb_writeb(mbase, MUSB_DEVCTL, reg);
-			//MUSB_HST_MODE( ((struct musb*)data) );
-			//WARN("Host Mode\n");
+			/* MUSB_HST_MODE( ((struct musb*)data) ); */
+			/* WARN("Host Mode\n"); */
 		}
 		break;
 
@@ -802,7 +802,7 @@ static int musb_proc_read(char *page, ch
 	}
 
 	/* generate the report for the end points */
-	// REVISIT ... not unless something's connected!
+	/* REVISIT ... not unless something's connected! */
 	for (epnum = 0; count >= 0 && epnum < musb->nr_endpoints;
 			epnum++) {
 		code = dump_end_info(musb, epnum, buffer, count);
@@ -840,7 +840,7 @@ musb_debug_create(char *name, struct mus
 					S_IFREG | S_IRUGO | S_IWUSR, NULL);
 	if (pde) {
 		pde->data = data;
-		// pde->owner = THIS_MODULE;
+		/* pde->owner = THIS_MODULE; */
 
 		pde->read_proc = musb_proc_read;
 		pde->write_proc = musb_proc_write;
Index: linux-2.6.18/drivers/usb/musb/tusb6010.c
===================================================================
--- linux-2.6.18.orig/drivers/usb/musb/tusb6010.c
+++ linux-2.6.18/drivers/usb/musb/tusb6010.c
@@ -337,7 +337,7 @@ static void tusb_set_clock_source(struct
 
 	musb_writel(base, TUSB_PRCM_CONF, reg);
 
-	// FIXME tusb6010_platform_retime(mode == 0);
+	/* FIXME tusb6010_platform_retime(mode == 0); */
 }
 
 /*
@@ -688,7 +688,7 @@ tusb_otg_ints(struct musb *musb, u32 int
 		if ((is_otg_enabled(musb) && !musb->xceiv.default_a)
 				|| !is_host_enabled(musb)) {
 #ifdef CONFIG_USB_MUSB_HDRC_HCD
-			// ? musb_root_disconnect(musb);
+			/* ? musb_root_disconnect(musb); */
 			musb->port1_status &=
 				~(USB_PORT_STAT_CONNECTION
 				| USB_PORT_STAT_ENABLE
@@ -864,7 +864,7 @@ static irqreturn_t tusb_interrupt(int ir
 		DBG(3, "wake %sactive %02x\n",
 				musb->is_active ? "" : "in", reg);
 
-		// REVISIT host side TUSB_PRCM_WHOSTDISCON, TUSB_PRCM_WBUS
+		/* REVISIT host side TUSB_PRCM_WHOSTDISCON, TUSB_PRCM_WBUS */
 	}
 
 	if (int_src & TUSB_INT_SRC_USB_IP_CONN)
Index: linux-2.6.18/drivers/usb/musb/tusb6010_omap.c
===================================================================
--- linux-2.6.18.orig/drivers/usb/musb/tusb6010_omap.c
+++ linux-2.6.18/drivers/usb/musb/tusb6010_omap.c
@@ -75,7 +75,7 @@ static int tusb_omap_dma_start(struct dm
 
 	tusb_dma = container_of(c, struct tusb_omap_dma, controller);
 
-	// DBG(3, "ep%i ch: %i\n", chdat->epnum, chdat->ch);
+	/* DBG(3, "ep%i ch: %i\n", chdat->epnum, chdat->ch); */
 
 	return 0;
 }
@@ -86,7 +86,7 @@ static int tusb_omap_dma_stop(struct dma
 
 	tusb_dma = container_of(c, struct tusb_omap_dma, controller);
 
-	// DBG(3, "ep%i ch: %i\n", chdat->epnum, chdat->ch);
+	/* DBG(3, "ep%i ch: %i\n", chdat->epnum, chdat->ch); */
 
 	return 0;
 }
Index: linux-2.6.18/mvl_patches/pro50-1783.c
===================================================================
--- /dev/null
+++ linux-2.6.18/mvl_patches/pro50-1783.c
@@ -0,0 +1,16 @@
+/*
+ * Author: MontaVista Software, Inc. <source@mvista.com>
+ *
+ * 2008 (c) MontaVista Software, Inc. This file is licensed under
+ * the terms of the GNU General Public License version 2. This program
+ * is licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ */
+#include <linux/init.h>
+#include <linux/mvl_patch.h>
+
+static __init int regpatch(void)
+{
+        return mvl_register_patch(1783);
+}
+module_init(regpatch);
EOF

    rv=0
    cat /tmp/mvl_patch_$$
    if [ "$?" != "0" ]; then
	# Patch had a hard error, return 2
	rv=2
    elif grep '^Hunk' ${TMPFILE}; then
	rv=1
    fi

    rm -f ${TMPFILE}
    return $rv
}

function options() {
    echo "Options are:"
    echo "  --force-unsupported - Force the patch to be applied even if the"
    echo "      patch is out of order or the current kernel is unsupported."
    echo "      Use of this option is strongly discouraged."
    echo "  --force-apply-fuzz - If the patch has fuzz, go ahead and apply"
    echo "      it anyway.  This can occur if the patch is applied to an"
    echo "      unsupported kernel or applied out of order or if you have"
    echo "      made your own modifications to the kernel.  Use with"
    echo "      caution."
    echo "  --remove - Remove the patch"
}


function checkpatchnum() {
    local level;

    if [ ! -e ${1} ]; then
	echo "${1} does not exist, make sure you are in the kernel" 1>&2
	echo "base directory" 1>&2
	exit 1;
    fi

    # Extract the current patch number from the lsp info file.
    level=`grep '#define LSP_.*PATCH_LEVEL' ${1} | sed 's/^.*\"\\(.*\\)\".*\$/\\1/'`
    if [ "a$level" = "a" ]; then
	echo "No patch level defined in ${1}, are you sure this is" 1>&2
	echo "a valid MVL kernel LSP?" 1>&2
	exit 1;
    fi

    expr $level + 0 >/dev/null 2>&1
    isnum=$?

    # Check if the kernel is supported
    if [ "$level" = "unsupported" ]; then
	echo "**Current kernel is unsupported by MontaVista due to patches"
	echo "  begin applied out of order."
	if [ $force_unsupported == 't' ]; then
	    echo "  Application is forced, applying patch anyway"
	    unsupported=t
	    fix_patch_level=f
	else
	    echo "  Patch application aborted.  Use --force-unsupported to"
	    echo "  force the patch to be applied, but the kernel will not"
	    echo "  be supported by MontaVista."
	    exit 1;
	fi

    # Check the patch number from the lspinfo file to make sure it is
    # a valid number
    elif [ $isnum = 2 ]; then
	echo "**Patch level from ${1} was not a valid number, " 1>&2
	echo "  are you sure this is a valid MVL kernel LSP?" 1>&2
	exit 1;

    # Check that this is the right patch number to be applied.
    elif [ `expr $level $3` ${4} ${2} ]; then
	echo "**Application of this patch is out of order and will cause the"
	echo "  kernel to be unsupported by MontaVista."
	if [ $force_unsupported == 't' ]; then
	    echo "  application is forced, applying patch anyway"
	    unsupported=t
	else
	    echo "  Patch application aborted.  Please get all the patches in"
	    echo "  proper order from MontaVista Zone and apply them in order"
	    echo "  If you really want to apply this patch, use"
	    echo "  --force-unsupported to force the patch to be applied, but"
	    echo "  the kernel will not be supported by MontaVista."
	    exit 1;
	fi
    fi
}

#
# Update the patch level in the file.  Note that we use patch to do
# this.  Certain weak version control systems don't take kindly to
# arbitrary changes directly to files, but do have a special version
# of "patch" that understands this.
#
function setpatchnum() {
    sed "s/^#define LSP_\(.*\)PATCH_LEVEL[ \t*]\"[0-9]*\".*$/#define LSP_\1PATCH_LEVEL \"${2}\"/" <${1} >/tmp/$$.tmp1
    diff -u ${1} /tmp/$$.tmp1 >/tmp/$$.tmp2
    rm /tmp/$$.tmp1
    sed "s/^+++ \/tmp\/$$.tmp1/+++ include\/linux\/lsppatchlevel.h/" </tmp/$$.tmp2 >/tmp/$$.tmp1
    rm /tmp/$$.tmp2
    patch -p0 </tmp/$$.tmp1
    rm /tmp/$$.tmp1
}

force_unsupported=f
force_apply_fuzz=""
unsupported=f
fix_patch_level=t
reverse=f
common_patchnum_diff='+ 1'
common_patchnum=$PATCHNUM
patch_extraopts=''

# Extract command line parameters.
while [ $# -gt 0 ]; do
    if [ "a$1" == 'a--force-unsupported' ]; then
	force_unsupported=t
    elif [ "a$1" == 'a--force-apply-fuzz' ]; then
	force_apply_fuzz=y
    elif [ "a$1" == 'a--remove' ]; then
	reverse=t
	common_patchnum_diff=''
	common_patchnum=`expr $PATCHNUM - 1`
	patch_extraopts='--reverse'
    else
	echo "'$1' is an invalid command line parameter."
	options
	exit 1
    fi
    shift
done

echo "Checking patch level"
checkpatchnum ${LSPINFO} ${PATCHNUM} "${common_patchnum_diff}" "-ne"

if ! dopatch -p1 --dry-run --force $patch_extraopts; then
    if [ $? = 2 ]; then
	echo -n "**Patch had errors, application aborted" 1>&2
	exit 1;
    fi

    # Patch has warnings
    clean_apply=${force_apply_fuzz}
    while [ "a$clean_apply" != 'ay' -a "a$clean_apply" != 'an' ]; do
	echo -n "**Patch did not apply cleanly.  Do you still want to apply? (y/n) > "
	read clean_apply
	clean_apply=`echo "$clean_apply" | tr '[:upper:]' '[:lower:]'`
    done
    if [ $clean_apply = 'n' ]; then
	exit 1;
    fi
fi

dopatch -p1 --force $patch_extraopts

if [ $fix_patch_level = 't' ]; then 
    if [ $unsupported = 't' ]; then
	common_patchnum="unsupported"
    fi

    setpatchnum ${LSPINFO} ${common_patchnum}
fi

# Move the patch file into the mvl_patches directory if we are not reversing
if [ $reverse != 't' ]; then 
    if echo $0 | grep '/' >/dev/null; then
	# Filename is a path, either absolute or from the current directory.
	srcfile=$0
    else
	# Filename is from the path
	for i in `echo $PATH | tr ':;' '  '`; do
	    if [ -e ${i}/$0 ]; then
		srcfile=${i}/$0
	    fi
	done
    fi

    fname=`basename ${srcfile}`
    diff -uN mvl_patches/${fname} ${srcfile} | (cd mvl_patches; patch)
fi

