#! /usr/bin/env bash
# Patch: -pro_musb_hdrc_Search_and_replace_bIsSharedFifo_with_is_
# Date: Fri Sep 19 14:08:05 2008
# From 6e6e23823a1d15ae08abd76c1cb899bd845e8e37 Mon Sep 17 00:00:00 2001
# From: Tony Lindgren <tony@atomide.com>
# Date: Mon, 13 Aug 2007 04:14:45 -0700
# Subject: [PATCH] musb_hdrc: Search and replace bIsSharedFifo with is_shared_fifo
# 
# Search and replace bIsSharedFifo with is_shared_fifo
# 
# Signed-off-by: Tony Lindgren <tony@atomide.com>
# (cherry picked from commit fb5420a1a905fb2a230230fd224749a28f9db991)

PATCHNUM=1680
LSPINFO=include/linux/lsppatchlevel.h
TMPFILE=/tmp/mvl_patch_$$

function dopatch() {
    patch $* >${TMPFILE} 2>&1 <<"EOF"
From 6e6e23823a1d15ae08abd76c1cb899bd845e8e37 Mon Sep 17 00:00:00 2001
From: Tony Lindgren <tony@atomide.com>
Date: Mon, 13 Aug 2007 04:14:45 -0700
Subject: [PATCH] musb_hdrc: Search and replace bIsSharedFifo with is_shared_fifo

Search and replace bIsSharedFifo with is_shared_fifo

Signed-off-by: Tony Lindgren <tony@atomide.com>
(cherry picked from commit fb5420a1a905fb2a230230fd224749a28f9db991)
Index: linux-2.6.18/drivers/usb/musb/musb_gadget.c
===================================================================
--- linux-2.6.18.orig/drivers/usb/musb/musb_gadget.c
+++ linux-2.6.18/drivers/usb/musb/musb_gadget.c
@@ -896,7 +896,7 @@ static int musb_gadget_enable(struct usb
 	if (desc->bEndpointAddress & USB_DIR_IN) {
 		u16 wIntrTxE = musb_readw(mbase, MGC_O_HDRC_INTRTXE);
 
-		if (hw_ep->bIsSharedFifo)
+		if (hw_ep->is_shared_fifo)
 			musb_ep->is_in = 1;
 		if (!musb_ep->is_in)
 			goto fail;
@@ -926,7 +926,7 @@ static int musb_gadget_enable(struct usb
 	} else {
 		u16 wIntrRxE = musb_readw(mbase, MGC_O_HDRC_INTRRXE);
 
-		if (hw_ep->bIsSharedFifo)
+		if (hw_ep->is_shared_fifo)
 			musb_ep->is_in = 0;
 		if (musb_ep->is_in)
 			goto fail;
@@ -942,7 +942,7 @@ static int musb_gadget_enable(struct usb
 		musb_writew(regs, MGC_O_HDRC_RXMAXP, tmp);
 
 		/* force shared fifo to OUT-only mode */
-		if (hw_ep->bIsSharedFifo) {
+		if (hw_ep->is_shared_fifo) {
 			csr = musb_readw(regs, MGC_O_HDRC_TXCSR);
 			csr &= ~(MGC_M_TXCSR_MODE | MGC_M_TXCSR_TXPKTRDY);
 			musb_writew(regs, MGC_O_HDRC_TXCSR, csr);
@@ -1624,7 +1624,7 @@ init_peripheral_ep(struct musb *musb, st
 	INIT_LIST_HEAD(&ep->req_list);
 
 	sprintf(ep->name, "ep%d%s", epnum,
-			(!epnum || hw_ep->bIsSharedFifo) ? "" : (
+			(!epnum || hw_ep->is_shared_fifo) ? "" : (
 				is_in ? "in" : "out"));
 	ep->end_point.name = ep->name;
 	INIT_LIST_HEAD(&ep->end_point.ep_list);
@@ -1658,7 +1658,7 @@ static inline void __init musb_g_init_en
 	for (epnum = 0, hw_ep = musb->endpoints;
 			epnum < musb->nr_endpoints;
 			epnum++, hw_ep++) {
-		if (hw_ep->bIsSharedFifo /* || !epnum */) {
+		if (hw_ep->is_shared_fifo /* || !epnum */) {
 			init_peripheral_ep(musb, &hw_ep->ep_in, epnum, 0);
 			count++;
 		} else {
@@ -1855,7 +1855,7 @@ stop_activity(struct musb *musb, struct 
 				i < musb->nr_endpoints;
 				i++, hw_ep++) {
 			musb_ep_select(musb->mregs, i);
-			if (hw_ep->bIsSharedFifo /* || !epnum */) {
+			if (hw_ep->is_shared_fifo /* || !epnum */) {
 				nuke(&hw_ep->ep_in, -ESHUTDOWN);
 			} else {
 				if (hw_ep->wMaxPacketSizeTx)
Index: linux-2.6.18/drivers/usb/musb/musb_host.c
===================================================================
--- linux-2.6.18.orig/drivers/usb/musb/musb_host.c
+++ linux-2.6.18/drivers/usb/musb/musb_host.c
@@ -216,7 +216,7 @@ musb_start_urb(struct musb *musb, int is
 			epnum, pBuffer, dwLength);
 
 	/* Configure endpoint */
-	if (is_in || hw_ep->bIsSharedFifo)
+	if (is_in || hw_ep->is_shared_fifo)
 		hw_ep->in_qh = qh;
 	else
 		hw_ep->out_qh = qh;
@@ -322,7 +322,7 @@ static inline void musb_save_toggle(stru
 	 * problems getting toggle correct.
 	 */
 
-	if (is_in || ep->bIsSharedFifo)
+	if (is_in || ep->is_shared_fifo)
 		qh = ep->in_qh;
 	else
 		qh = ep->out_qh;
@@ -349,7 +349,7 @@ musb_giveback(struct musb_qh *qh, struct
 	struct musb		*musb = ep->musb;
 	int			ready = qh->is_ready;
 
-	if (ep->bIsSharedFifo)
+	if (ep->is_shared_fifo)
 		is_in = 1;
 	else
 		is_in = usb_pipein(urb->pipe);
@@ -382,7 +382,7 @@ musb_giveback(struct musb_qh *qh, struct
 			ep->tx_reinit = 1;
 
 		/* clobber old pointers to this qh */
-		if (is_in || ep->bIsSharedFifo)
+		if (is_in || ep->is_shared_fifo)
 			ep->in_qh = NULL;
 		else
 			ep->out_qh = NULL;
@@ -429,7 +429,7 @@ musb_advance_schedule(struct musb *musb,
 {
 	struct musb_qh	*qh;
 
-	if (is_in || hw_ep->bIsSharedFifo)
+	if (is_in || hw_ep->is_shared_fifo)
 		qh = hw_ep->in_qh;
 	else
 		qh = hw_ep->out_qh;
@@ -578,7 +578,7 @@ musb_rx_reinit(struct musb *musb, struct
 	 */
 
 	/* if programmed for Tx, put it in RX mode */
-	if (ep->bIsSharedFifo) {
+	if (ep->is_shared_fifo) {
 		csr = musb_readw(ep->regs, MGC_O_HDRC_TXCSR);
 		if (csr & MGC_M_TXCSR_MODE) {
 			musb_h_tx_flush_fifo(ep);
@@ -636,7 +636,7 @@ static void musb_ep_program(struct musb 
 	struct musb_qh		*qh;
 	u16			wPacketSize;
 
-	if (!is_out || hw_ep->bIsSharedFifo)
+	if (!is_out || hw_ep->is_shared_fifo)
 		qh = hw_ep->in_qh;
 	else
 		qh = hw_ep->out_qh;
Index: linux-2.6.18/drivers/usb/musb/musbdefs.h
===================================================================
--- linux-2.6.18.orig/drivers/usb/musb/musbdefs.h
+++ linux-2.6.18/drivers/usb/musb/musbdefs.h
@@ -266,7 +266,7 @@ struct musb_hw_ep {
 	u8			epnum;
 
 	/* hardware configuration, possibly dynamic */
-	u8			bIsSharedFifo;
+	u8			is_shared_fifo;
 	u8			tx_double_buffered;
 	u8			rx_double_buffered;
 	u16			wMaxPacketSizeTx;
Index: linux-2.6.18/drivers/usb/musb/plat_uds.c
===================================================================
--- linux-2.6.18.orig/drivers/usb/musb/plat_uds.c
+++ linux-2.6.18/drivers/usb/musb/plat_uds.c
@@ -1078,7 +1078,7 @@ fifo_setup(struct musb *musb, struct mus
 		hw_ep->tx_double_buffered = hw_ep->rx_double_buffered;
 		hw_ep->wMaxPacketSizeTx = maxpacket;
 
-		hw_ep->bIsSharedFifo = TRUE;
+		hw_ep->is_shared_fifo = TRUE;
 		break;
 	}
 
@@ -1204,11 +1204,11 @@ static int __init ep_config_from_hw(stru
 		/* shared TX/RX FIFO? */
 		if ((reg & 0xf0) == 0xf0) {
 			hw_ep->wMaxPacketSizeRx = hw_ep->wMaxPacketSizeTx;
-			hw_ep->bIsSharedFifo = TRUE;
+			hw_ep->is_shared_fifo = TRUE;
 			continue;
 		} else {
 			hw_ep->wMaxPacketSizeRx = 1 << ((reg & 0xf0) >> 4);
-			hw_ep->bIsSharedFifo = FALSE;
+			hw_ep->is_shared_fifo = FALSE;
 		}
 
 		/* FIXME set up hw_ep->{rx,tx}_double_buffered */
@@ -1388,12 +1388,12 @@ static int __init musb_core_init(u16 wTy
 			printk(KERN_DEBUG
 				"%s: hw_ep %d%s, %smax %d\n",
 				musb_driver_name, i,
-				hw_ep->bIsSharedFifo ? "shared" : "tx",
+				hw_ep->is_shared_fifo ? "shared" : "tx",
 				hw_ep->tx_double_buffered
 					? "doublebuffer, " : "",
 				hw_ep->wMaxPacketSizeTx);
 		}
-		if (hw_ep->wMaxPacketSizeRx && !hw_ep->bIsSharedFifo) {
+		if (hw_ep->wMaxPacketSizeRx && !hw_ep->is_shared_fifo) {
 			printk(KERN_DEBUG
 				"%s: hw_ep %d%s, %smax %d\n",
 				musb_driver_name, i,
Index: linux-2.6.18/mvl_patches/pro50-1680.c
===================================================================
--- /dev/null
+++ linux-2.6.18/mvl_patches/pro50-1680.c
@@ -0,0 +1,16 @@
+/*
+ * Author: MontaVista Software, Inc. <source@mvista.com>
+ *
+ * 2008 (c) MontaVista Software, Inc. This file is licensed under
+ * the terms of the GNU General Public License version 2. This program
+ * is licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ */
+#include <linux/init.h>
+#include <linux/mvl_patch.h>
+
+static __init int regpatch(void)
+{
+        return mvl_register_patch(1680);
+}
+module_init(regpatch);
EOF

    rv=0
    cat /tmp/mvl_patch_$$
    if [ "$?" != "0" ]; then
	# Patch had a hard error, return 2
	rv=2
    elif grep '^Hunk' ${TMPFILE}; then
	rv=1
    fi

    rm -f ${TMPFILE}
    return $rv
}

function options() {
    echo "Options are:"
    echo "  --force-unsupported - Force the patch to be applied even if the"
    echo "      patch is out of order or the current kernel is unsupported."
    echo "      Use of this option is strongly discouraged."
    echo "  --force-apply-fuzz - If the patch has fuzz, go ahead and apply"
    echo "      it anyway.  This can occur if the patch is applied to an"
    echo "      unsupported kernel or applied out of order or if you have"
    echo "      made your own modifications to the kernel.  Use with"
    echo "      caution."
    echo "  --remove - Remove the patch"
}


function checkpatchnum() {
    local level;

    if [ ! -e ${1} ]; then
	echo "${1} does not exist, make sure you are in the kernel" 1>&2
	echo "base directory" 1>&2
	exit 1;
    fi

    # Extract the current patch number from the lsp info file.
    level=`grep '#define LSP_.*PATCH_LEVEL' ${1} | sed 's/^.*\"\\(.*\\)\".*\$/\\1/'`
    if [ "a$level" = "a" ]; then
	echo "No patch level defined in ${1}, are you sure this is" 1>&2
	echo "a valid MVL kernel LSP?" 1>&2
	exit 1;
    fi

    expr $level + 0 >/dev/null 2>&1
    isnum=$?

    # Check if the kernel is supported
    if [ "$level" = "unsupported" ]; then
	echo "**Current kernel is unsupported by MontaVista due to patches"
	echo "  begin applied out of order."
	if [ $force_unsupported == 't' ]; then
	    echo "  Application is forced, applying patch anyway"
	    unsupported=t
	    fix_patch_level=f
	else
	    echo "  Patch application aborted.  Use --force-unsupported to"
	    echo "  force the patch to be applied, but the kernel will not"
	    echo "  be supported by MontaVista."
	    exit 1;
	fi

    # Check the patch number from the lspinfo file to make sure it is
    # a valid number
    elif [ $isnum = 2 ]; then
	echo "**Patch level from ${1} was not a valid number, " 1>&2
	echo "  are you sure this is a valid MVL kernel LSP?" 1>&2
	exit 1;

    # Check that this is the right patch number to be applied.
    elif [ `expr $level $3` ${4} ${2} ]; then
	echo "**Application of this patch is out of order and will cause the"
	echo "  kernel to be unsupported by MontaVista."
	if [ $force_unsupported == 't' ]; then
	    echo "  application is forced, applying patch anyway"
	    unsupported=t
	else
	    echo "  Patch application aborted.  Please get all the patches in"
	    echo "  proper order from MontaVista Zone and apply them in order"
	    echo "  If you really want to apply this patch, use"
	    echo "  --force-unsupported to force the patch to be applied, but"
	    echo "  the kernel will not be supported by MontaVista."
	    exit 1;
	fi
    fi
}

#
# Update the patch level in the file.  Note that we use patch to do
# this.  Certain weak version control systems don't take kindly to
# arbitrary changes directly to files, but do have a special version
# of "patch" that understands this.
#
function setpatchnum() {
    sed "s/^#define LSP_\(.*\)PATCH_LEVEL[ \t*]\"[0-9]*\".*$/#define LSP_\1PATCH_LEVEL \"${2}\"/" <${1} >/tmp/$$.tmp1
    diff -u ${1} /tmp/$$.tmp1 >/tmp/$$.tmp2
    rm /tmp/$$.tmp1
    sed "s/^+++ \/tmp\/$$.tmp1/+++ include\/linux\/lsppatchlevel.h/" </tmp/$$.tmp2 >/tmp/$$.tmp1
    rm /tmp/$$.tmp2
    patch -p0 </tmp/$$.tmp1
    rm /tmp/$$.tmp1
}

force_unsupported=f
force_apply_fuzz=""
unsupported=f
fix_patch_level=t
reverse=f
common_patchnum_diff='+ 1'
common_patchnum=$PATCHNUM
patch_extraopts=''

# Extract command line parameters.
while [ $# -gt 0 ]; do
    if [ "a$1" == 'a--force-unsupported' ]; then
	force_unsupported=t
    elif [ "a$1" == 'a--force-apply-fuzz' ]; then
	force_apply_fuzz=y
    elif [ "a$1" == 'a--remove' ]; then
	reverse=t
	common_patchnum_diff=''
	common_patchnum=`expr $PATCHNUM - 1`
	patch_extraopts='--reverse'
    else
	echo "'$1' is an invalid command line parameter."
	options
	exit 1
    fi
    shift
done

echo "Checking patch level"
checkpatchnum ${LSPINFO} ${PATCHNUM} "${common_patchnum_diff}" "-ne"

if ! dopatch -p1 --dry-run --force $patch_extraopts; then
    if [ $? = 2 ]; then
	echo -n "**Patch had errors, application aborted" 1>&2
	exit 1;
    fi

    # Patch has warnings
    clean_apply=${force_apply_fuzz}
    while [ "a$clean_apply" != 'ay' -a "a$clean_apply" != 'an' ]; do
	echo -n "**Patch did not apply cleanly.  Do you still want to apply? (y/n) > "
	read clean_apply
	clean_apply=`echo "$clean_apply" | tr '[:upper:]' '[:lower:]'`
    done
    if [ $clean_apply = 'n' ]; then
	exit 1;
    fi
fi

dopatch -p1 --force $patch_extraopts

if [ $fix_patch_level = 't' ]; then 
    if [ $unsupported = 't' ]; then
	common_patchnum="unsupported"
    fi

    setpatchnum ${LSPINFO} ${common_patchnum}
fi

# Move the patch file into the mvl_patches directory if we are not reversing
if [ $reverse != 't' ]; then 
    if echo $0 | grep '/' >/dev/null; then
	# Filename is a path, either absolute or from the current directory.
	srcfile=$0
    else
	# Filename is from the path
	for i in `echo $PATH | tr ':;' '  '`; do
	    if [ -e ${i}/$0 ]; then
		srcfile=${i}/$0
	    fi
	done
    fi

    fname=`basename ${srcfile}`
    diff -uN mvl_patches/${fname} ${srcfile} | (cd mvl_patches; patch)
fi

