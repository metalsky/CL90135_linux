#! /usr/bin/env bash
# Patch: -pro_arm_davinci_dm355_edma_fixes
# Date: Fri Sep 19 14:29:23 2008
# Source: Texas Instruments Inc.
# MR: 29560
# Type: Defect Fix
# Disposition: local
# Signed-off-by: Sandeep Paulraj <s-paulraj@ti.com>
# Signed-off-by: Sergei Shtylyov <sshtylyov@ru.mvista.com>
# Description:
# Since DM355 has only 2 queues, the structures have been appropriately edited.
# The priority of Q1 has been changed to 7. Also the number of PaRAM entries in
# DM355 is 128 instead of 512. The mapping information for the EDMA channels has
# been updated
# 
#  arch/arm/mach-davinci/dma.c         |   37 +++++-------------------------------
#  include/asm-arm/arch-davinci/edma.h |    8 +++----
#  2 files changed, 10 insertions(+), 35 deletions(-)
# 

PATCHNUM=1890
LSPINFO=include/linux/lsppatchlevel.h
TMPFILE=/tmp/mvl_patch_$$

function dopatch() {
    patch $* >${TMPFILE} 2>&1 <<"EOF"
Source: Texas Instruments Inc.
MR: 29560
Type: Defect Fix
Disposition: local
Signed-off-by: Sandeep Paulraj <s-paulraj@ti.com>
Signed-off-by: Sergei Shtylyov <sshtylyov@ru.mvista.com>
Description:
Since DM355 has only 2 queues, the structures have been appropriately edited.
The priority of Q1 has been changed to 7. Also the number of PaRAM entries in
DM355 is 128 instead of 512. The mapping information for the EDMA channels has
been updated

 arch/arm/mach-davinci/dma.c         |   37 +++++-------------------------------
 include/asm-arm/arch-davinci/edma.h |    8 +++----
 mvl_patches/pro50-1890.c            |   16 +++++++++++++++
 3 files changed, 26 insertions(+), 35 deletions(-)

Index: linux-2.6.18/arch/arm/mach-davinci/dma.c
===================================================================
--- linux-2.6.18.orig/arch/arm/mach-davinci/dma.c
+++ linux-2.6.18/arch/arm/mach-davinci/dma.c
@@ -188,8 +188,7 @@ static struct edma_map dm646x_queue_tc_m
  * availability on EDMA_MASTER_SHADOW_REGION side events
  */
 static unsigned int dm355_edma_channels_arm[] = {
-	0xFFFFFFFFu,
-	0x00000000u,
+	0xFFFFFFFFu, 0xFFFFFFFFu
 };
 
 /*
@@ -205,10 +204,7 @@ static unsigned char dm355_qdma_channels
  *  availability on EDMA_MASTER_SHADOW_REGION side events
  */
 static unsigned int dm355_param_entry_arm[] = {
-	0xFFFFFFFFu, 0x00000000u, 0x00000000u, 0xFFFFFFC0u,
-	0xFFFFFFFFu, 0xFFFFFFFFu, 0xFFFFFFFFu, 0xFFFFFFFFu,
-	0xFFFFFFFFu, 0xFFFFFFFFu, 0xFFFFFFFFu, 0xFFFFFFFFu,
-	0xFFFFFFFFu, 0xFFFFFFFFu, 0xFFFFFFFFu, 0xFFFFFFFFu,
+	0xFFFFFFFFu, 0xFFFFFFFFu, 0xFFFFFFFFu, 0xFFFFFFFFu
 };
 
 /*
@@ -226,46 +222,25 @@ static unsigned int dm355_tcc_arm[EDMA_N
  *   (First 64 PaRAM Sets are reserved for 64 DMA Channels)
  */
 static unsigned int dm355_param_entry_reserved[] = {
-	0xFFFFFFFFu, 0xFFFFFFFFu, 0x0u, 0x0u,
-	0x0u, 0x0u, 0x0u, 0x0u,
-	0x0u, 0x0u, 0x0u, 0x0u,
-	0x0u, 0x0u, 0x0u, 0x0u
+	0xFFFFFFFFu, 0xFFFFFFFFu, 0x0u, 0x0u
 };
 
 static struct edma_map dm355_queue_priority_mapping[] = {
 	/* {Event Queue No, Priority} */
 	{0, 0},
-	{1, 1},
-	{2, 1},
-	{3, 1},
-	{4, 1},
-	{5, 1},
-	{6, 1},
-	{7, 1},
+	{1, 7}
 };
 
 static struct edma_map dm355_queue_watermark_level[] = {
 	/* {Event Queue No, Watermark Level} */
 	{0, 16},
-	{1, 16},
-	{2, 16},
-	{3, 16},
-	{4, 16},
-	{5, 16},
-	{6, 16},
-	{7, 16},
+	{1, 16}
 };
 
 static struct edma_map dm355_queue_tc_mapping[] = {
 	/* {Event Queue No, TC no} */
 	{0, 0},
-	{1, 1},
-	{2, 2},
-	{3, 3},
-	{4, 4},
-	{5, 5},
-	{6, 6},
-	{7, 7},
+	{1, 1}
 };
 
 static spinlock_t dma_chan_lock;
Index: linux-2.6.18/include/asm-arm/arch-davinci/edma.h
===================================================================
--- linux-2.6.18.orig/include/asm-arm/arch-davinci/edma.h
+++ linux-2.6.18/include/asm-arm/arch-davinci/edma.h
@@ -455,13 +455,13 @@ enum dm646x_edma_ch {
 /* end DM646X specific info */
 
 /* DM355 specific info */
-#define EDMA_DM355_NUM_PARAMENTRY	512
-#define EDMA_DM355_NUM_EVQUE		8
+#define EDMA_DM355_NUM_PARAMENTRY	128
+#define EDMA_DM355_NUM_EVQUE		2
 #define EDMA_DM355_NUM_TC		2
 #define EDMA_DM355_CHMAP_EXIST		0
 #define EDMA_DM355_NUM_REGIONS		4
-#define DM355_DMACH2EVENT_MAP0		0xFEFFCFFFu
-#define DM355_DMACH2EVENT_MAP1		0x00FFFFFFu
+#define DM355_DMACH2EVENT_MAP0		0xCD03FFFCu
+#define DM355_DMACH2EVENT_MAP1		0xFF000000u
 
 /* DM355 specific EDMA3 Events Information */
 enum dm355_edma_ch {
Index: linux-2.6.18/mvl_patches/pro50-1890.c
===================================================================
--- /dev/null
+++ linux-2.6.18/mvl_patches/pro50-1890.c
@@ -0,0 +1,16 @@
+/*
+ * Author: MontaVista Software, Inc. <source@mvista.com>
+ *
+ * 2008 (c) MontaVista Software, Inc. This file is licensed under
+ * the terms of the GNU General Public License version 2. This program
+ * is licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ */
+#include <linux/init.h>
+#include <linux/mvl_patch.h>
+
+static __init int regpatch(void)
+{
+        return mvl_register_patch(1890);
+}
+module_init(regpatch);
EOF

    rv=0
    cat /tmp/mvl_patch_$$
    if [ "$?" != "0" ]; then
	# Patch had a hard error, return 2
	rv=2
    elif grep '^Hunk' ${TMPFILE}; then
	rv=1
    fi

    rm -f ${TMPFILE}
    return $rv
}

function options() {
    echo "Options are:"
    echo "  --force-unsupported - Force the patch to be applied even if the"
    echo "      patch is out of order or the current kernel is unsupported."
    echo "      Use of this option is strongly discouraged."
    echo "  --force-apply-fuzz - If the patch has fuzz, go ahead and apply"
    echo "      it anyway.  This can occur if the patch is applied to an"
    echo "      unsupported kernel or applied out of order or if you have"
    echo "      made your own modifications to the kernel.  Use with"
    echo "      caution."
    echo "  --remove - Remove the patch"
}


function checkpatchnum() {
    local level;

    if [ ! -e ${1} ]; then
	echo "${1} does not exist, make sure you are in the kernel" 1>&2
	echo "base directory" 1>&2
	exit 1;
    fi

    # Extract the current patch number from the lsp info file.
    level=`grep '#define LSP_.*PATCH_LEVEL' ${1} | sed 's/^.*\"\\(.*\\)\".*\$/\\1/'`
    if [ "a$level" = "a" ]; then
	echo "No patch level defined in ${1}, are you sure this is" 1>&2
	echo "a valid MVL kernel LSP?" 1>&2
	exit 1;
    fi

    expr $level + 0 >/dev/null 2>&1
    isnum=$?

    # Check if the kernel is supported
    if [ "$level" = "unsupported" ]; then
	echo "**Current kernel is unsupported by MontaVista due to patches"
	echo "  begin applied out of order."
	if [ $force_unsupported == 't' ]; then
	    echo "  Application is forced, applying patch anyway"
	    unsupported=t
	    fix_patch_level=f
	else
	    echo "  Patch application aborted.  Use --force-unsupported to"
	    echo "  force the patch to be applied, but the kernel will not"
	    echo "  be supported by MontaVista."
	    exit 1;
	fi

    # Check the patch number from the lspinfo file to make sure it is
    # a valid number
    elif [ $isnum = 2 ]; then
	echo "**Patch level from ${1} was not a valid number, " 1>&2
	echo "  are you sure this is a valid MVL kernel LSP?" 1>&2
	exit 1;

    # Check that this is the right patch number to be applied.
    elif [ `expr $level $3` ${4} ${2} ]; then
	echo "**Application of this patch is out of order and will cause the"
	echo "  kernel to be unsupported by MontaVista."
	if [ $force_unsupported == 't' ]; then
	    echo "  application is forced, applying patch anyway"
	    unsupported=t
	else
	    echo "  Patch application aborted.  Please get all the patches in"
	    echo "  proper order from MontaVista Zone and apply them in order"
	    echo "  If you really want to apply this patch, use"
	    echo "  --force-unsupported to force the patch to be applied, but"
	    echo "  the kernel will not be supported by MontaVista."
	    exit 1;
	fi
    fi
}

#
# Update the patch level in the file.  Note that we use patch to do
# this.  Certain weak version control systems don't take kindly to
# arbitrary changes directly to files, but do have a special version
# of "patch" that understands this.
#
function setpatchnum() {
    sed "s/^#define LSP_\(.*\)PATCH_LEVEL[ \t*]\"[0-9]*\".*$/#define LSP_\1PATCH_LEVEL \"${2}\"/" <${1} >/tmp/$$.tmp1
    diff -u ${1} /tmp/$$.tmp1 >/tmp/$$.tmp2
    rm /tmp/$$.tmp1
    sed "s/^+++ \/tmp\/$$.tmp1/+++ include\/linux\/lsppatchlevel.h/" </tmp/$$.tmp2 >/tmp/$$.tmp1
    rm /tmp/$$.tmp2
    patch -p0 </tmp/$$.tmp1
    rm /tmp/$$.tmp1
}

force_unsupported=f
force_apply_fuzz=""
unsupported=f
fix_patch_level=t
reverse=f
common_patchnum_diff='+ 1'
common_patchnum=$PATCHNUM
patch_extraopts=''

# Extract command line parameters.
while [ $# -gt 0 ]; do
    if [ "a$1" == 'a--force-unsupported' ]; then
	force_unsupported=t
    elif [ "a$1" == 'a--force-apply-fuzz' ]; then
	force_apply_fuzz=y
    elif [ "a$1" == 'a--remove' ]; then
	reverse=t
	common_patchnum_diff=''
	common_patchnum=`expr $PATCHNUM - 1`
	patch_extraopts='--reverse'
    else
	echo "'$1' is an invalid command line parameter."
	options
	exit 1
    fi
    shift
done

echo "Checking patch level"
checkpatchnum ${LSPINFO} ${PATCHNUM} "${common_patchnum_diff}" "-ne"

if ! dopatch -p1 --dry-run --force $patch_extraopts; then
    if [ $? = 2 ]; then
	echo -n "**Patch had errors, application aborted" 1>&2
	exit 1;
    fi

    # Patch has warnings
    clean_apply=${force_apply_fuzz}
    while [ "a$clean_apply" != 'ay' -a "a$clean_apply" != 'an' ]; do
	echo -n "**Patch did not apply cleanly.  Do you still want to apply? (y/n) > "
	read clean_apply
	clean_apply=`echo "$clean_apply" | tr '[:upper:]' '[:lower:]'`
    done
    if [ $clean_apply = 'n' ]; then
	exit 1;
    fi
fi

dopatch -p1 --force $patch_extraopts

if [ $fix_patch_level = 't' ]; then 
    if [ $unsupported = 't' ]; then
	common_patchnum="unsupported"
    fi

    setpatchnum ${LSPINFO} ${common_patchnum}
fi

# Move the patch file into the mvl_patches directory if we are not reversing
if [ $reverse != 't' ]; then 
    if echo $0 | grep '/' >/dev/null; then
	# Filename is a path, either absolute or from the current directory.
	srcfile=$0
    else
	# Filename is from the path
	for i in `echo $PATH | tr ':;' '  '`; do
	    if [ -e ${i}/$0 ]; then
		srcfile=${i}/$0
	    fi
	done
    fi

    fname=`basename ${srcfile}`
    diff -uN mvl_patches/${fname} ${srcfile} | (cd mvl_patches; patch)
fi

