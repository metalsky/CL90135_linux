#! /usr/bin/env bash
# Patch: -pro_musb_hdrc_Search_and_replace_pControlRequest_with_c
# Date: Fri Sep 19 14:09:44 2008
# From fb3d1cdd0fa8d11b1965e773118f458a4885361e Mon Sep 17 00:00:00 2001
# From: Tony Lindgren <tony@atomide.com>
# Date: Mon, 13 Aug 2007 04:59:35 -0700
# Subject: [PATCH] musb_hdrc: Search and replace pControlRequest with ctrlrequest
# 
# Search and replace pControlRequest with ctrlrequest
# 
# Signed-off-by: Tony Lindgren <tony@atomide.com>
# (cherry picked from commit 1d958a49bacc15e7e867c9b477d1f12d6cc81584)

PATCHNUM=1701
LSPINFO=include/linux/lsppatchlevel.h
TMPFILE=/tmp/mvl_patch_$$

function dopatch() {
    patch $* >${TMPFILE} 2>&1 <<"EOF"
From fb3d1cdd0fa8d11b1965e773118f458a4885361e Mon Sep 17 00:00:00 2001
From: Tony Lindgren <tony@atomide.com>
Date: Mon, 13 Aug 2007 04:59:35 -0700
Subject: [PATCH] musb_hdrc: Search and replace pControlRequest with ctrlrequest

Search and replace pControlRequest with ctrlrequest

Signed-off-by: Tony Lindgren <tony@atomide.com>
(cherry picked from commit 1d958a49bacc15e7e867c9b477d1f12d6cc81584)
Index: linux-2.6.18/drivers/usb/musb/g_ep0.c
===================================================================
--- linux-2.6.18.orig/drivers/usb/musb/g_ep0.c
+++ linux-2.6.18/drivers/usb/musb/g_ep0.c
@@ -72,12 +72,12 @@ static char *decode_ep0stage(u8 stage)
  */
 static int service_tx_status_request(
 	struct musb *musb,
-	const struct usb_ctrlrequest *pControlRequest)
+	const struct usb_ctrlrequest *ctrlrequest)
 {
 	void __iomem	*mbase = musb->mregs;
 	int handled = 1;
 	u8 bResult[2], epnum = 0;
-	const u8 bRecip = pControlRequest->bRequestType & USB_RECIP_MASK;
+	const u8 bRecip = ctrlrequest->bRequestType & USB_RECIP_MASK;
 
 	bResult[1] = 0;
 
@@ -107,7 +107,7 @@ static int service_tx_status_request(
 		u16		tmp;
 		void __iomem	*regs;
 
-		epnum = (u8) pControlRequest->wIndex;
+		epnum = (u8) ctrlrequest->wIndex;
 		if (!epnum) {
 			bResult[0] = 0;
 			break;
@@ -147,7 +147,7 @@ static int service_tx_status_request(
 
 	/* fill up the fifo; caller updates csr0 */
 	if (handled > 0) {
-		u16	len = le16_to_cpu(pControlRequest->wLength);
+		u16	len = le16_to_cpu(ctrlrequest->wLength);
 
 		if (len > 2)
 			len = 2;
@@ -170,16 +170,16 @@ static int service_tx_status_request(
  */
 static int
 service_in_request(struct musb *musb,
-		const struct usb_ctrlrequest *pControlRequest)
+		const struct usb_ctrlrequest *ctrlrequest)
 {
 	int handled = 0;	/* not handled */
 
-	if ((pControlRequest->bRequestType & USB_TYPE_MASK)
+	if ((ctrlrequest->bRequestType & USB_TYPE_MASK)
 			== USB_TYPE_STANDARD) {
-		switch (pControlRequest->bRequest) {
+		switch (ctrlrequest->bRequest) {
 		case USB_REQ_GET_STATUS:
 			handled = service_tx_status_request(musb,
-					pControlRequest);
+					ctrlrequest);
 			break;
 
 		/* case USB_REQ_SYNC_FRAME: */
@@ -225,29 +225,29 @@ static inline void musb_try_b_hnp_enable
  */
 static int
 service_zero_data_request(struct musb *musb,
-		struct usb_ctrlrequest *pControlRequest)
+		struct usb_ctrlrequest *ctrlrequest)
 __releases(musb->lock)
 __acquires(musb->lock)
 {
 	int handled = -EINVAL;
 	void __iomem *mbase = musb->mregs;
-	const u8 bRecip = pControlRequest->bRequestType & USB_RECIP_MASK;
+	const u8 bRecip = ctrlrequest->bRequestType & USB_RECIP_MASK;
 
 	/* the gadget driver handles everything except what we MUST handle */
-	if ((pControlRequest->bRequestType & USB_TYPE_MASK)
+	if ((ctrlrequest->bRequestType & USB_TYPE_MASK)
 			== USB_TYPE_STANDARD) {
-		switch (pControlRequest->bRequest) {
+		switch (ctrlrequest->bRequest) {
 		case USB_REQ_SET_ADDRESS:
 			/* change it after the status stage */
 			musb->bSetAddress = TRUE;
-			musb->address = (u8) (pControlRequest->wValue & 0x7f);
+			musb->address = (u8) (ctrlrequest->wValue & 0x7f);
 			handled = 1;
 			break;
 
 		case USB_REQ_CLEAR_FEATURE:
 			switch (bRecip) {
 			case USB_RECIP_DEVICE:
-				if (pControlRequest->wValue
+				if (ctrlrequest->wValue
 						!= USB_DEVICE_REMOTE_WAKEUP)
 					break;
 				musb->may_wakeup = 0;
@@ -256,16 +256,16 @@ __acquires(musb->lock)
 			case USB_RECIP_INTERFACE:
 				break;
 			case USB_RECIP_ENDPOINT:{
-				const u8 epnum = pControlRequest->wIndex & 0x0f;
+				const u8 epnum = ctrlrequest->wIndex & 0x0f;
 				struct musb_ep *musb_ep;
 
 				if (epnum == 0
 						|| epnum >= MUSB_C_NUM_EPS
-						|| pControlRequest->wValue
+						|| ctrlrequest->wValue
 							!= USB_ENDPOINT_HALT)
 					break;
 
-				if (pControlRequest->wIndex & USB_DIR_IN)
+				if (ctrlrequest->wIndex & USB_DIR_IN)
 					musb_ep = &musb->endpoints[epnum].ep_in;
 				else
 					musb_ep = &musb->endpoints[epnum].ep_out;
@@ -292,17 +292,17 @@ __acquires(musb->lock)
 			switch (bRecip) {
 			case USB_RECIP_DEVICE:
 				handled = 1;
-				switch (pControlRequest->wValue) {
+				switch (ctrlrequest->wValue) {
 				case USB_DEVICE_REMOTE_WAKEUP:
 					musb->may_wakeup = 1;
 					break;
 				case USB_DEVICE_TEST_MODE:
 					if (musb->g.speed != USB_SPEED_HIGH)
 						goto stall;
-					if (pControlRequest->wIndex & 0xff)
+					if (ctrlrequest->wIndex & 0xff)
 						goto stall;
 
-					switch (pControlRequest->wIndex >> 8) {
+					switch (ctrlrequest->wIndex >> 8) {
 					case 1:
 						pr_debug("TEST_J\n");
 						/* TEST_J */
@@ -365,7 +365,7 @@ stall:
 
 			case USB_RECIP_ENDPOINT:{
 				const u8		epnum =
-					pControlRequest->wIndex & 0x0f;
+					ctrlrequest->wIndex & 0x0f;
 				struct musb_ep		*musb_ep;
 				struct musb_hw_ep	*ep;
 				void __iomem		*regs;
@@ -374,13 +374,13 @@ stall:
 
 				if (epnum == 0
 						|| epnum >= MUSB_C_NUM_EPS
-						|| pControlRequest->wValue
+						|| ctrlrequest->wValue
 							!= USB_ENDPOINT_HALT)
 					break;
 
 				ep = musb->endpoints + epnum;
 				regs = ep->regs;
-				is_in = pControlRequest->wIndex & USB_DIR_IN;
+				is_in = ctrlrequest->wIndex & USB_DIR_IN;
 				if (is_in)
 					musb_ep = &ep->ep_in;
 				else
@@ -578,7 +578,7 @@ musb_read_setup(struct musb *musb, struc
 
 static int
 forward_to_driver(struct musb *musb,
-		const struct usb_ctrlrequest *pControlRequest)
+		const struct usb_ctrlrequest *ctrlrequest)
 __releases(musb->lock)
 __acquires(musb->lock)
 {
@@ -586,7 +586,7 @@ __acquires(musb->lock)
 	if (!musb->gadget_driver)
 		return -EOPNOTSUPP;
 	spin_unlock(&musb->lock);
-	retval = musb->gadget_driver->setup(&musb->g, pControlRequest);
+	retval = musb->gadget_driver->setup(&musb->g, ctrlrequest);
 	spin_lock(&musb->lock);
 	return retval;
 }
Index: linux-2.6.18/mvl_patches/pro50-1701.c
===================================================================
--- /dev/null
+++ linux-2.6.18/mvl_patches/pro50-1701.c
@@ -0,0 +1,16 @@
+/*
+ * Author: MontaVista Software, Inc. <source@mvista.com>
+ *
+ * 2008 (c) MontaVista Software, Inc. This file is licensed under
+ * the terms of the GNU General Public License version 2. This program
+ * is licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ */
+#include <linux/init.h>
+#include <linux/mvl_patch.h>
+
+static __init int regpatch(void)
+{
+        return mvl_register_patch(1701);
+}
+module_init(regpatch);
EOF

    rv=0
    cat /tmp/mvl_patch_$$
    if [ "$?" != "0" ]; then
	# Patch had a hard error, return 2
	rv=2
    elif grep '^Hunk' ${TMPFILE}; then
	rv=1
    fi

    rm -f ${TMPFILE}
    return $rv
}

function options() {
    echo "Options are:"
    echo "  --force-unsupported - Force the patch to be applied even if the"
    echo "      patch is out of order or the current kernel is unsupported."
    echo "      Use of this option is strongly discouraged."
    echo "  --force-apply-fuzz - If the patch has fuzz, go ahead and apply"
    echo "      it anyway.  This can occur if the patch is applied to an"
    echo "      unsupported kernel or applied out of order or if you have"
    echo "      made your own modifications to the kernel.  Use with"
    echo "      caution."
    echo "  --remove - Remove the patch"
}


function checkpatchnum() {
    local level;

    if [ ! -e ${1} ]; then
	echo "${1} does not exist, make sure you are in the kernel" 1>&2
	echo "base directory" 1>&2
	exit 1;
    fi

    # Extract the current patch number from the lsp info file.
    level=`grep '#define LSP_.*PATCH_LEVEL' ${1} | sed 's/^.*\"\\(.*\\)\".*\$/\\1/'`
    if [ "a$level" = "a" ]; then
	echo "No patch level defined in ${1}, are you sure this is" 1>&2
	echo "a valid MVL kernel LSP?" 1>&2
	exit 1;
    fi

    expr $level + 0 >/dev/null 2>&1
    isnum=$?

    # Check if the kernel is supported
    if [ "$level" = "unsupported" ]; then
	echo "**Current kernel is unsupported by MontaVista due to patches"
	echo "  begin applied out of order."
	if [ $force_unsupported == 't' ]; then
	    echo "  Application is forced, applying patch anyway"
	    unsupported=t
	    fix_patch_level=f
	else
	    echo "  Patch application aborted.  Use --force-unsupported to"
	    echo "  force the patch to be applied, but the kernel will not"
	    echo "  be supported by MontaVista."
	    exit 1;
	fi

    # Check the patch number from the lspinfo file to make sure it is
    # a valid number
    elif [ $isnum = 2 ]; then
	echo "**Patch level from ${1} was not a valid number, " 1>&2
	echo "  are you sure this is a valid MVL kernel LSP?" 1>&2
	exit 1;

    # Check that this is the right patch number to be applied.
    elif [ `expr $level $3` ${4} ${2} ]; then
	echo "**Application of this patch is out of order and will cause the"
	echo "  kernel to be unsupported by MontaVista."
	if [ $force_unsupported == 't' ]; then
	    echo "  application is forced, applying patch anyway"
	    unsupported=t
	else
	    echo "  Patch application aborted.  Please get all the patches in"
	    echo "  proper order from MontaVista Zone and apply them in order"
	    echo "  If you really want to apply this patch, use"
	    echo "  --force-unsupported to force the patch to be applied, but"
	    echo "  the kernel will not be supported by MontaVista."
	    exit 1;
	fi
    fi
}

#
# Update the patch level in the file.  Note that we use patch to do
# this.  Certain weak version control systems don't take kindly to
# arbitrary changes directly to files, but do have a special version
# of "patch" that understands this.
#
function setpatchnum() {
    sed "s/^#define LSP_\(.*\)PATCH_LEVEL[ \t*]\"[0-9]*\".*$/#define LSP_\1PATCH_LEVEL \"${2}\"/" <${1} >/tmp/$$.tmp1
    diff -u ${1} /tmp/$$.tmp1 >/tmp/$$.tmp2
    rm /tmp/$$.tmp1
    sed "s/^+++ \/tmp\/$$.tmp1/+++ include\/linux\/lsppatchlevel.h/" </tmp/$$.tmp2 >/tmp/$$.tmp1
    rm /tmp/$$.tmp2
    patch -p0 </tmp/$$.tmp1
    rm /tmp/$$.tmp1
}

force_unsupported=f
force_apply_fuzz=""
unsupported=f
fix_patch_level=t
reverse=f
common_patchnum_diff='+ 1'
common_patchnum=$PATCHNUM
patch_extraopts=''

# Extract command line parameters.
while [ $# -gt 0 ]; do
    if [ "a$1" == 'a--force-unsupported' ]; then
	force_unsupported=t
    elif [ "a$1" == 'a--force-apply-fuzz' ]; then
	force_apply_fuzz=y
    elif [ "a$1" == 'a--remove' ]; then
	reverse=t
	common_patchnum_diff=''
	common_patchnum=`expr $PATCHNUM - 1`
	patch_extraopts='--reverse'
    else
	echo "'$1' is an invalid command line parameter."
	options
	exit 1
    fi
    shift
done

echo "Checking patch level"
checkpatchnum ${LSPINFO} ${PATCHNUM} "${common_patchnum_diff}" "-ne"

if ! dopatch -p1 --dry-run --force $patch_extraopts; then
    if [ $? = 2 ]; then
	echo -n "**Patch had errors, application aborted" 1>&2
	exit 1;
    fi

    # Patch has warnings
    clean_apply=${force_apply_fuzz}
    while [ "a$clean_apply" != 'ay' -a "a$clean_apply" != 'an' ]; do
	echo -n "**Patch did not apply cleanly.  Do you still want to apply? (y/n) > "
	read clean_apply
	clean_apply=`echo "$clean_apply" | tr '[:upper:]' '[:lower:]'`
    done
    if [ $clean_apply = 'n' ]; then
	exit 1;
    fi
fi

dopatch -p1 --force $patch_extraopts

if [ $fix_patch_level = 't' ]; then 
    if [ $unsupported = 't' ]; then
	common_patchnum="unsupported"
    fi

    setpatchnum ${LSPINFO} ${common_patchnum}
fi

# Move the patch file into the mvl_patches directory if we are not reversing
if [ $reverse != 't' ]; then 
    if echo $0 | grep '/' >/dev/null; then
	# Filename is a path, either absolute or from the current directory.
	srcfile=$0
    else
	# Filename is from the path
	for i in `echo $PATH | tr ':;' '  '`; do
	    if [ -e ${i}/$0 ]; then
		srcfile=${i}/$0
	    fi
	done
    fi

    fname=`basename ${srcfile}`
    diff -uN mvl_patches/${fname} ${srcfile} | (cd mvl_patches; patch)
fi

