#! /usr/bin/env bash
# Patch: -pro_partial_omap2430_fixes_for_musb_hdrc
# Date: Fri Sep 19 14:03:42 2008
# From eb17e65db01eed2e57b9cb79d2c2fd95cabb29e4 Mon Sep 17 00:00:00 2001
# From: Dmitry Krivoschekov <dkrivoschekov@ru.mvista.com>
# Date: Wed, 21 May 2008 17:18:16 +0400
# Subject: [PATCH] partial omap2430 fixes for musb_hdrc
# 
# Partial build fixes for musb_hdrc on OMAP 2430; plus typedef and CaMeLcAsE
# removal in the support for Mentor's DMA engine.
# 
# Also re-order the mach-omap2 Kconfig to restore the option hierachy that
# was destroyed when the 2430SDP patch was merged into the wrong place.
# 
# Someone still needs to provide <asm/arch/hdrc_cnf.h> corresponding to
# how the Mentor core is configured on that platform; add some register
# and pin mux declarations; and create and register the platform_device.
# 
# Signed-off-by: David Brownell <dbrownell@users.sourceforge.net>
# (cherry picked from commit 94ceb9b3dbb8d8a2f0c7a28a070b9f2636a97508)
# 
# Conflicts:
# 
# 	arch/arm/mach-omap2/Kconfig
# 	
# 	NOTE: needless changes to the arch/arm/mach-omap2/Kconfig
# 	have been dropped entirely. Refer to the original
# 	commit 94ceb9b3dbb8d8 for them.
# 	
# 	Signed-off-by: Dmitry Krivoschekov <dkrivoschekov@ru.mvista.com> 

PATCHNUM=1617
LSPINFO=include/linux/lsppatchlevel.h
TMPFILE=/tmp/mvl_patch_$$

function dopatch() {
    patch $* >${TMPFILE} 2>&1 <<"EOF"
From eb17e65db01eed2e57b9cb79d2c2fd95cabb29e4 Mon Sep 17 00:00:00 2001
From: Dmitry Krivoschekov <dkrivoschekov@ru.mvista.com>
Date: Wed, 21 May 2008 17:18:16 +0400
Subject: [PATCH] partial omap2430 fixes for musb_hdrc

Partial build fixes for musb_hdrc on OMAP 2430; plus typedef and CaMeLcAsE
removal in the support for Mentor's DMA engine.

Also re-order the mach-omap2 Kconfig to restore the option hierachy that
was destroyed when the 2430SDP patch was merged into the wrong place.

Someone still needs to provide <asm/arch/hdrc_cnf.h> corresponding to
how the Mentor core is configured on that platform; add some register
and pin mux declarations; and create and register the platform_device.

Signed-off-by: David Brownell <dbrownell@users.sourceforge.net>
(cherry picked from commit 94ceb9b3dbb8d8a2f0c7a28a070b9f2636a97508)

Conflicts:

	arch/arm/mach-omap2/Kconfig
	
	NOTE: needless changes to the arch/arm/mach-omap2/Kconfig
	have been dropped entirely. Refer to the original
	commit 94ceb9b3dbb8d8 for them.
	
	Signed-off-by: Dmitry Krivoschekov <dkrivoschekov@ru.mvista.com> 
Index: linux-2.6.18/drivers/usb/musb/Kconfig
===================================================================
--- linux-2.6.18.orig/drivers/usb/musb/Kconfig
+++ linux-2.6.18/drivers/usb/musb/Kconfig
@@ -29,7 +29,7 @@ config USB_MUSB_SOC
 	boolean
 	depends on USB_MUSB_HDRC
 	default y if ARCH_DAVINCI
-	default y if ARCH_OMAP243X
+	default y if ARCH_OMAP2430
 	default y if ARCH_OMAP343X
 	help
 	  Use a static <asm/arch/hdrc_cnf.h> file to describe how the
@@ -40,7 +40,7 @@ comment "DaVinci 644x USB support"
 	depends on USB_MUSB_HDRC && ARCH_DAVINCI
 
 comment "OMAP 243x high speed USB support"
-	depends on USB_MUSB_HDRC && ARCH_OMAP243X
+	depends on USB_MUSB_HDRC && ARCH_OMAP2430
 
 comment "OMAP 343x high speed USB support"
 	depends on USB_MUSB_HDRC && ARCH_OMAP343X
@@ -145,7 +145,7 @@ config USB_INVENTRA_FIFO
 config USB_INVENTRA_DMA
 	bool
 	depends on USB_MUSB_HDRC && !USB_INVENTRA_FIFO
-	default ARCH_OMAP243X || ARCH_OMAP343X
+	default ARCH_OMAP2430 || ARCH_OMAP343X
 	help
 	  Enable DMA transfers using Mentor's engine.
 
Index: linux-2.6.18/drivers/usb/musb/Makefile
===================================================================
--- linux-2.6.18.orig/drivers/usb/musb/Makefile
+++ linux-2.6.18/drivers/usb/musb/Makefile
@@ -14,7 +14,7 @@ ifeq ($(CONFIG_USB_TUSB6010),y)
 	musb_hdrc-objs	+= tusb6010.o
 endif
 
-ifeq ($(CONFIG_ARCH_OMAP243X),y)
+ifeq ($(CONFIG_ARCH_OMAP2430),y)
 	musb_hdrc-objs	+= omap2430.o
 endif
 
Index: linux-2.6.18/drivers/usb/musb/musb_host.c
===================================================================
--- linux-2.6.18.orig/drivers/usb/musb/musb_host.c
+++ linux-2.6.18/drivers/usb/musb/musb_host.c
@@ -803,7 +803,11 @@ static void musb_ep_program(struct musb 
 				wLoadCount = 0;
 			} else {
 				pDmaController->channel_release(pDmaChannel);
-				pDmaChannel = pEnd->pDmaChannel = NULL;
+				if (is_out)
+					pEnd->tx_channel = NULL;
+				else
+					pEnd->rx_channel = NULL;
+				pDmaChannel = NULL;
 			}
 		}
 #endif
Index: linux-2.6.18/drivers/usb/musb/musbhsdma.c
===================================================================
--- linux-2.6.18.orig/drivers/usb/musb/musbhsdma.c
+++ linux-2.6.18/drivers/usb/musb/musbhsdma.c
@@ -32,9 +32,11 @@
  ******************************************************************/
 
 /*
- * DMA implementation for high-speed controllers.
+ * Interface to Mentor's DMA engine
  */
 
+#include <linux/platform_device.h>
+
 #include "musbdefs.h"
 
 
@@ -68,55 +70,50 @@
 
 /******************************* Types ********************************/
 
-struct _MGC_HsDmaController;
-
-typedef struct {
+struct hsdma_channel {
 	struct dma_channel Channel;
-	struct _MGC_HsDmaController *pController;
+	struct hsdma *pController;
 	u32 dwStartAddress;
 	u32 dwCount;
 	u8 bIndex;
 	u8 bEnd;
 	u8 bTransmit;
-} MGC_HsDmaChannel;
+};
 
 struct hsdma {
 	struct dma_controller Controller;
-	MGC_HsDmaChannel aChannel[MGC_HSDMA_CHANNELS];
+	struct hsdma_channel aChannel[MGC_HSDMA_CHANNELS];
 	void *pDmaPrivate;
 	void __iomem *pCoreBase;
 	u8 bChannelCount;
 	u8 bmUsedChannels;
 };
 
-/* FIXME remove typedef noise */
-typedef struct hsdma MGC_HsDmaController;
-
 /****************************** FUNCTIONS ********************************/
 
-static int MGC_HsDmaStartController(struct dma_controller *c)
+static int hsdma_start(struct dma_controller *c)
 {
 	/* nothing to do */
 	return 0;
 }
 
-static int MGC_HsDmaStopController(struct dma_controller *c)
+static int hsdma_stop(struct dma_controller *c)
 {
 	/* nothing to do */
 	return 0;
 }
 
-static struct dma_channel *MGC_HsDmaAllocateChannel(
-		struct dma_controller *c,
+static struct dma_channel *
+hsdma_channel_alloc(struct dma_controller *c,
 		struct musb_hw_ep *hw_ep,
 		u8 bTransmit)
 {
 	u8 bBit;
 	struct dma_channel *pChannel = NULL;
-	MGC_HsDmaChannel *pImplChannel = NULL;
-	MGC_HsDmaController *pController;
+	struct hsdma_channel *pImplChannel = NULL;
+	struct hsdma *pController;
 
-	pcontroller = container_of(c, struct hsdma, Controller);
+	pController = container_of(c, struct hsdma, Controller);
 	for (bBit = 0; bBit < MGC_HSDMA_CHANNELS; bBit++) {
 		if (!(pController->bmUsedChannels & (1 << bBit))) {
 			pController->bmUsedChannels |= (1 << bBit);
@@ -138,10 +135,9 @@ static struct dma_channel *MGC_HsDmaAllo
 	return pChannel;
 }
 
-static void MGC_HsDmaReleaseChannel(struct dma_channel *pChannel)
+static void hsdma_channel_release(struct dma_channel *pChannel)
 {
-	MGC_HsDmaChannel *pImplChannel =
-	    (MGC_HsDmaChannel *) pChannel->pPrivateData;
+	struct hsdma_channel *pImplChannel = pChannel->pPrivateData;
 
 	pImplChannel->pController->bmUsedChannels &=
 	    ~(1 << pImplChannel->bIndex);
@@ -150,9 +146,8 @@ static void MGC_HsDmaReleaseChannel(stru
 
 static void clear_state(struct dma_channel *pChannel)
 {
-	MGC_HsDmaChannel *pImplChannel =
-	    (MGC_HsDmaChannel *) pChannel->pPrivateData;
-	MGC_HsDmaController *pController = pImplChannel->pController;
+	struct hsdma_channel *pImplChannel = pChannel->pPrivateData;
+	struct hsdma *pController = pImplChannel->pController;
 	u8 *pBase = pController->pCoreBase;
 	u8 bChannel = pImplChannel->bIndex;
 
@@ -175,9 +170,8 @@ static u8 configure_channel(struct dma_c
 				  u16 wPacketSize, u8 bMode,
 				  dma_addr_t dma_addr, u32 dwLength)
 {
-	MGC_HsDmaChannel *pImplChannel =
-	    (MGC_HsDmaChannel *) pChannel->pPrivateData;
-	MGC_HsDmaController *pController = pImplChannel->pController;
+	struct hsdma_channel *pImplChannel = pChannel->pPrivateData;
+	struct hsdma *pController = pImplChannel->pController;
 	u8 *pBase = pController->pCoreBase;
 	u8 bChannel = pImplChannel->bIndex;
 	u16 wCsr = 0;
@@ -223,12 +217,11 @@ static u8 configure_channel(struct dma_c
 	return TRUE;
 }
 
-static int MGC_HsDmaProgramChannel(struct dma_channel * pChannel,
+static int hsdma_channel_program(struct dma_channel * pChannel,
 				  u16 wPacketSize, u8 bMode,
 				  dma_addr_t dma_addr, u32 dwLength)
 {
-	MGC_HsDmaChannel *pImplChannel =
-	    (MGC_HsDmaChannel *) pChannel->pPrivateData;
+	struct hsdma_channel *pImplChannel = pChannel->pPrivateData;
 
 	DBG(2, "pkt_sz %d, dma_addr 0x%x length %d, mode %d\n",
 	       wPacketSize, dma_addr, dwLength, bMode);
@@ -267,7 +260,7 @@ static int MGC_HsDmaProgramChannel(struc
 }
 
 // REVISIT...
-static int MGC_HsDmaAbortChannel(struct dma_channel *pChannel)
+static int hsdma_channel_abort(struct dma_channel *pChannel)
 {
 	clear_state(pChannel);
 	pChannel->bStatus = MGC_DMA_STATUS_FREE;
@@ -279,8 +272,8 @@ static irqreturn_t hsdma_irq(int irq, vo
 	u8 bChannel;
 	u16 wCsr;
 	u32 dwAddress;
-	MGC_HsDmaChannel *pImplChannel;
-	MGC_HsDmaController *pController = pPrivateData;
+	struct hsdma_channel *pImplChannel;
+	struct hsdma *pController = pPrivateData;
 	u8 *pBase = pController->pCoreBase;
 	struct dma_channel *pChannel;
 	u8 bIntr = musb_readb(pBase, MGC_O_HSDMA_INTR);
@@ -291,8 +284,7 @@ static irqreturn_t hsdma_irq(int irq, vo
 	for (bChannel = 0; bChannel < MGC_HSDMA_CHANNELS; bChannel++) {
 		if (bIntr & (1 << bChannel)) {
 
-			pImplChannel = (MGC_HsDmaChannel *)
-					&(pController->aChannel[bChannel]);
+			pImplChannel = &pController->aChannel[bChannel];
 			pChannel = &pImplChannel->Channel;
 
 			wCsr = musb_readw(pBase,
@@ -356,7 +348,7 @@ static irqreturn_t hsdma_irq(int irq, vo
 
 static void hsdma_controller_destroy(struct dma_controller *pController)
 {
-	MGC_HsDmaController *pHsController = pController->pPrivateData;
+	struct hsdma *pHsController = pController->pPrivateData;
 
 	if (pHsController) {
 		pHsController->Controller.pPrivateData = NULL;
@@ -367,7 +359,7 @@ static void hsdma_controller_destroy(str
 static struct dma_controller *
 hsdma_controller_new(struct musb *pThis, void __iomem *pCoreBase)
 {
-	MGC_HsDmaController *pController;
+	struct hsdma *pController;
 	struct device *dev = pThis->controller;
 	struct platform_device *pdev = to_platform_device(dev);
 	int irq = platform_get_irq(pdev, 1);
@@ -377,7 +369,7 @@ hsdma_controller_new(struct musb *pThis,
 		return NULL;
 	}
 
-	if (!(pController = kzalloc(sizeof(MGC_HsDmaController), GFP_KERNEL)))
+	if (!(pController = kzalloc(sizeof *pController, GFP_KERNEL)))
 		return NULL;
 
 	pController->bChannelCount = MGC_HSDMA_CHANNELS;
@@ -385,12 +377,12 @@ hsdma_controller_new(struct musb *pThis,
 	pController->pCoreBase = pCoreBase;
 
 	pController->Controller.pPrivateData = pController;
-	pController->Controller.start = MGC_HsDmaStartController;
-	pController->Controller.stop = MGC_HsDmaStopController;
-	pController->Controller.channel_alloc = MGC_HsDmaAllocateChannel;
-	pController->Controller.channel_release = MGC_HsDmaReleaseChannel;
-	pController->Controller.channel_program = MGC_HsDmaProgramChannel;
-	pController->Controller.channel_abort = MGC_HsDmaAbortChannel;
+	pController->Controller.start = hsdma_start;
+	pController->Controller.stop = hsdma_stop;
+	pController->Controller.channel_alloc = hsdma_channel_alloc;
+	pController->Controller.channel_release = hsdma_channel_release;
+	pController->Controller.channel_program = hsdma_channel_program;
+	pController->Controller.channel_abort = hsdma_channel_abort;
 
 	if (request_irq(irq, hsdma_irq, SA_INTERRUPT,
 			pThis->controller->bus_id, &pController->Controller)) {
Index: linux-2.6.18/drivers/usb/musb/omap2430.c
===================================================================
--- linux-2.6.18.orig/drivers/usb/musb/omap2430.c
+++ linux-2.6.18/drivers/usb/musb/omap2430.c
@@ -65,11 +65,11 @@ int __init musb_platform_init(struct mus
 {
 	/* Erratum - reset value of STP has pull-down.
 	   Change it to pull-up. */
-	omap2_cfg_reg(AE5_2430_USB0HS_STP);
+	omap_cfg_reg(AE5_2430_USB0HS_STP);
 
 	/* start clock */
 	musb->clock = clk_get((struct device *)musb->controller, "usbhs_ick");
-	clk_use(musb->clock);
+	clk_enable(musb->clock);
 
 	omap_writel(omap_readl(OTG_INTERFSEL) | (1<<0), OTG_INTERFSEL);
 	omap_writel(omap_readl(OTG_SYSCONFIG) |
@@ -90,11 +90,7 @@ int __init musb_platform_init(struct mus
 int __exit musb_platform_exit(struct musb *musb)
 {
 	omap_vbus_power(musb, 0 /*off*/, 1);
-
-	/* REVISIT older omap trees need "unuse", more current
-	 * ones just have disable()
-	 */
-	clk_unuse(musb->clock);
+	clk_disable(musb->clock);
 
 	return 0;
 }
Index: linux-2.6.18/drivers/usb/musb/omap2430.h
===================================================================
--- linux-2.6.18.orig/drivers/usb/musb/omap2430.h
+++ linux-2.6.18/drivers/usb/musb/omap2430.h
@@ -10,7 +10,7 @@
 #ifndef __MUSB_OMAP243X_H__
 #define __MUSB_OMAP243X_H__
 
-#ifdef CONFIG_ARCH_OMAP243X
+#ifdef CONFIG_ARCH_OMAP2430
 /*
  * OMAP2430-specific definitions
  */
Index: linux-2.6.18/mvl_patches/pro50-1617.c
===================================================================
--- /dev/null
+++ linux-2.6.18/mvl_patches/pro50-1617.c
@@ -0,0 +1,16 @@
+/*
+ * Author: MontaVista Software, Inc. <source@mvista.com>
+ *
+ * 2008 (c) MontaVista Software, Inc. This file is licensed under
+ * the terms of the GNU General Public License version 2. This program
+ * is licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ */
+#include <linux/init.h>
+#include <linux/mvl_patch.h>
+
+static __init int regpatch(void)
+{
+        return mvl_register_patch(1617);
+}
+module_init(regpatch);
EOF

    rv=0
    cat /tmp/mvl_patch_$$
    if [ "$?" != "0" ]; then
	# Patch had a hard error, return 2
	rv=2
    elif grep '^Hunk' ${TMPFILE}; then
	rv=1
    fi

    rm -f ${TMPFILE}
    return $rv
}

function options() {
    echo "Options are:"
    echo "  --force-unsupported - Force the patch to be applied even if the"
    echo "      patch is out of order or the current kernel is unsupported."
    echo "      Use of this option is strongly discouraged."
    echo "  --force-apply-fuzz - If the patch has fuzz, go ahead and apply"
    echo "      it anyway.  This can occur if the patch is applied to an"
    echo "      unsupported kernel or applied out of order or if you have"
    echo "      made your own modifications to the kernel.  Use with"
    echo "      caution."
    echo "  --remove - Remove the patch"
}


function checkpatchnum() {
    local level;

    if [ ! -e ${1} ]; then
	echo "${1} does not exist, make sure you are in the kernel" 1>&2
	echo "base directory" 1>&2
	exit 1;
    fi

    # Extract the current patch number from the lsp info file.
    level=`grep '#define LSP_.*PATCH_LEVEL' ${1} | sed 's/^.*\"\\(.*\\)\".*\$/\\1/'`
    if [ "a$level" = "a" ]; then
	echo "No patch level defined in ${1}, are you sure this is" 1>&2
	echo "a valid MVL kernel LSP?" 1>&2
	exit 1;
    fi

    expr $level + 0 >/dev/null 2>&1
    isnum=$?

    # Check if the kernel is supported
    if [ "$level" = "unsupported" ]; then
	echo "**Current kernel is unsupported by MontaVista due to patches"
	echo "  begin applied out of order."
	if [ $force_unsupported == 't' ]; then
	    echo "  Application is forced, applying patch anyway"
	    unsupported=t
	    fix_patch_level=f
	else
	    echo "  Patch application aborted.  Use --force-unsupported to"
	    echo "  force the patch to be applied, but the kernel will not"
	    echo "  be supported by MontaVista."
	    exit 1;
	fi

    # Check the patch number from the lspinfo file to make sure it is
    # a valid number
    elif [ $isnum = 2 ]; then
	echo "**Patch level from ${1} was not a valid number, " 1>&2
	echo "  are you sure this is a valid MVL kernel LSP?" 1>&2
	exit 1;

    # Check that this is the right patch number to be applied.
    elif [ `expr $level $3` ${4} ${2} ]; then
	echo "**Application of this patch is out of order and will cause the"
	echo "  kernel to be unsupported by MontaVista."
	if [ $force_unsupported == 't' ]; then
	    echo "  application is forced, applying patch anyway"
	    unsupported=t
	else
	    echo "  Patch application aborted.  Please get all the patches in"
	    echo "  proper order from MontaVista Zone and apply them in order"
	    echo "  If you really want to apply this patch, use"
	    echo "  --force-unsupported to force the patch to be applied, but"
	    echo "  the kernel will not be supported by MontaVista."
	    exit 1;
	fi
    fi
}

#
# Update the patch level in the file.  Note that we use patch to do
# this.  Certain weak version control systems don't take kindly to
# arbitrary changes directly to files, but do have a special version
# of "patch" that understands this.
#
function setpatchnum() {
    sed "s/^#define LSP_\(.*\)PATCH_LEVEL[ \t*]\"[0-9]*\".*$/#define LSP_\1PATCH_LEVEL \"${2}\"/" <${1} >/tmp/$$.tmp1
    diff -u ${1} /tmp/$$.tmp1 >/tmp/$$.tmp2
    rm /tmp/$$.tmp1
    sed "s/^+++ \/tmp\/$$.tmp1/+++ include\/linux\/lsppatchlevel.h/" </tmp/$$.tmp2 >/tmp/$$.tmp1
    rm /tmp/$$.tmp2
    patch -p0 </tmp/$$.tmp1
    rm /tmp/$$.tmp1
}

force_unsupported=f
force_apply_fuzz=""
unsupported=f
fix_patch_level=t
reverse=f
common_patchnum_diff='+ 1'
common_patchnum=$PATCHNUM
patch_extraopts=''

# Extract command line parameters.
while [ $# -gt 0 ]; do
    if [ "a$1" == 'a--force-unsupported' ]; then
	force_unsupported=t
    elif [ "a$1" == 'a--force-apply-fuzz' ]; then
	force_apply_fuzz=y
    elif [ "a$1" == 'a--remove' ]; then
	reverse=t
	common_patchnum_diff=''
	common_patchnum=`expr $PATCHNUM - 1`
	patch_extraopts='--reverse'
    else
	echo "'$1' is an invalid command line parameter."
	options
	exit 1
    fi
    shift
done

echo "Checking patch level"
checkpatchnum ${LSPINFO} ${PATCHNUM} "${common_patchnum_diff}" "-ne"

if ! dopatch -p1 --dry-run --force $patch_extraopts; then
    if [ $? = 2 ]; then
	echo -n "**Patch had errors, application aborted" 1>&2
	exit 1;
    fi

    # Patch has warnings
    clean_apply=${force_apply_fuzz}
    while [ "a$clean_apply" != 'ay' -a "a$clean_apply" != 'an' ]; do
	echo -n "**Patch did not apply cleanly.  Do you still want to apply? (y/n) > "
	read clean_apply
	clean_apply=`echo "$clean_apply" | tr '[:upper:]' '[:lower:]'`
    done
    if [ $clean_apply = 'n' ]; then
	exit 1;
    fi
fi

dopatch -p1 --force $patch_extraopts

if [ $fix_patch_level = 't' ]; then 
    if [ $unsupported = 't' ]; then
	common_patchnum="unsupported"
    fi

    setpatchnum ${LSPINFO} ${common_patchnum}
fi

# Move the patch file into the mvl_patches directory if we are not reversing
if [ $reverse != 't' ]; then 
    if echo $0 | grep '/' >/dev/null; then
	# Filename is a path, either absolute or from the current directory.
	srcfile=$0
    else
	# Filename is from the path
	for i in `echo $PATH | tr ':;' '  '`; do
	    if [ -e ${i}/$0 ]; then
		srcfile=${i}/$0
	    fi
	done
    fi

    fname=`basename ${srcfile}`
    diff -uN mvl_patches/${fname} ${srcfile} | (cd mvl_patches; patch)
fi

