#! /usr/bin/env bash
# Patch: -pro_musb_hdrc_cleanup_comments_dates
# Date: Fri Sep 19 14:18:18 2008
# From 9824c06189a01601e2f4e5d6ea1af0a395cb0013 Mon Sep 17 00:00:00 2001
# From: David Brownell <david-b@pacbell.net>
# Date: Sat, 25 Aug 2007 14:41:49 -0700
# Subject: [PATCH] musb_hdrc cleanup -- comments, dates
# 
# Clarify dates in comments ... they are from 2006.  Drop reference
# to the Mentor "2.2a" code base; it's not remotely relevant any more.
# 
# Also fix up a few comments, and remove a few "sparse" warnings,
# mostly on DaVinci.
# 
# Signed-off-by: David Brownell <dbrownell@users.sourceforge.net>
# (cherry picked from commit 98aaefa1d64c5197fc171a85dd440c12225487da)

PATCHNUM=1785
LSPINFO=include/linux/lsppatchlevel.h
TMPFILE=/tmp/mvl_patch_$$

function dopatch() {
    patch $* >${TMPFILE} 2>&1 <<"EOF"
From 9824c06189a01601e2f4e5d6ea1af0a395cb0013 Mon Sep 17 00:00:00 2001
From: David Brownell <david-b@pacbell.net>
Date: Sat, 25 Aug 2007 14:41:49 -0700
Subject: [PATCH] musb_hdrc cleanup -- comments, dates

Clarify dates in comments ... they are from 2006.  Drop reference
to the Mentor "2.2a" code base; it's not remotely relevant any more.

Also fix up a few comments, and remove a few "sparse" warnings,
mostly on DaVinci.

Signed-off-by: David Brownell <dbrownell@users.sourceforge.net>
(cherry picked from commit 98aaefa1d64c5197fc171a85dd440c12225487da)
Index: linux-2.6.18/drivers/usb/musb/cppi_dma.c
===================================================================
--- linux-2.6.18.orig/drivers/usb/musb/cppi_dma.c
+++ linux-2.6.18/drivers/usb/musb/cppi_dma.c
@@ -3,7 +3,7 @@
  *
  * This file implements a DMA  interface using TI's CPPI DMA.
  * For now it's DaVinci-only, but CPPI isn't specific to DaVinci or USB.
- * TUSB 6010 over VLYNQ has CPPI that looks much like DaVinci.
+ * The TUSB6020, using VLYNQ, has CPPI that looks much like DaVinci.
  */
 
 #include <linux/usb.h>
@@ -12,14 +12,14 @@
 #include "cppi_dma.h"
 
 
-/* CPPI DMA status 7-mar:
+/* CPPI DMA status 7-mar-2006:
  *
  * - See musb_{host,gadget}.c for more info
  *
  * - Correct RX DMA generally forces the engine into irq-per-packet mode,
  *   which can easily saturate the CPU under non-mass-storage loads.
  *
- * NOTES 24-aug (2.6.18-rc4):
+ * NOTES 24-aug-2006 (2.6.18-rc4):
  *
  * - peripheral RXDMA wedged in a test with packets of length 512/512/1.
  *   evidently after the 1 byte packet was received and acked, the queue
@@ -539,7 +539,7 @@ static inline int cppi_autoreq_update(st
  * ========
  * TX is a lot more reasonable than RX; it doesn't need to run in
  * irq-per-packet mode very often.  RNDIS mode seems to behave too
- * (other how it handles the exactly-N-packets case).  Building a
+ * (except how it handles the exactly-N-packets case).  Building a
  * txdma queue with multiple requests (urb or usb_request) looks
  * like it would work ... but fault handling would need much testing.
  *
Index: linux-2.6.18/drivers/usb/musb/cppi_dma.h
===================================================================
--- linux-2.6.18.orig/drivers/usb/musb/cppi_dma.h
+++ linux-2.6.18/drivers/usb/musb/cppi_dma.h
@@ -48,19 +48,14 @@ struct cppi_descriptor {
 
 struct cppi;
 
-/**
- *  Channel Control Structure
- *
- * CPPI  Channel Control structure. Using he same for Tx/Rx. If need be
- * derive out of this later.
- */
+/* CPPI  Channel Control structure */
 struct cppi_channel {
 	/* First field must be dma_channel for easy type casting
 	 * FIXME just use container_of() and be typesafe instead!
 	 */
 	struct dma_channel Channel;
 
-	/* back pointer to the Dma Controller structure */
+	/* back pointer to the DMA Controller structure */
 	struct cppi		*controller;
 
 	/* which direction of which endpoint? */
@@ -92,12 +87,7 @@ struct cppi_channel {
 	struct list_head	tx_complete;
 };
 
-/**
- *  CPPI Dma Controller Object
- *
- *  CPPI Dma controller object.Encapsulates all bookeeping and Data
- *  structures pertaining to the CPPI Dma Controller.
- */
+/* CPPI DMA controller object */
 struct cppi {
 	struct dma_controller		Controller;
 	struct musb			*musb;
Index: linux-2.6.18/drivers/usb/musb/davinci.c
===================================================================
--- linux-2.6.18.orig/drivers/usb/musb/davinci.c
+++ linux-2.6.18/drivers/usb/musb/davinci.c
@@ -57,8 +57,9 @@ static inline void phy_on(void)
 {
 	/* start the on-chip PHY and its PLL */
 	__raw_writel(USBPHY_SESNDEN | USBPHY_VBDTCTEN | USBPHY_PHYPLLON,
-			IO_ADDRESS(USBPHY_CTL_PADDR));
-	while ((__raw_readl(IO_ADDRESS(USBPHY_CTL_PADDR))
+			(void __force __iomem *) IO_ADDRESS(USBPHY_CTL_PADDR));
+	while ((__raw_readl((void __force __iomem *)
+				IO_ADDRESS(USBPHY_CTL_PADDR))
 			& USBPHY_PHYCLKGD) == 0)
 		cpu_relax();
 }
@@ -66,7 +67,7 @@ static inline void phy_on(void)
 static inline void phy_off(void)
 {
 	/* powerdown the on-chip PHY and its oscillator */
-	__raw_writel(USBPHY_OSCPDWN | USBPHY_PHYPDWN,
+	__raw_writel(USBPHY_OSCPDWN | USBPHY_PHYPDWN, (void __force __iomem *)
 			IO_ADDRESS(USBPHY_CTL_PADDR));
 }
 
@@ -149,7 +150,7 @@ static void evm_deferred_drvvbus(struct 
 	davinci_i2c_expander_op(0x3a, USB_DRVVBUS, vbus_state);
 	vbus_state = !vbus_state;
 }
-DECLARE_WORK(evm_vbus_work, evm_deferred_drvvbus);
+static DECLARE_WORK(evm_vbus_work, evm_deferred_drvvbus);
 
 #endif	/* modified board */
 #endif	/* EVM */
@@ -189,7 +190,7 @@ static void davinci_source_power(struct 
 static void davinci_set_vbus(struct musb *musb, int is_on)
 {
 	WARN_ON(is_on && is_peripheral_active(musb));
-	return davinci_source_power(musb, is_on, 0);
+	davinci_source_power(musb, is_on, 0);
 }
 
 
@@ -200,7 +201,7 @@ static struct timer_list otg_workaround;
 static void otg_timer(unsigned long _musb)
 {
 	struct musb		*musb = (void *)_musb;
-	void	*__iomem	mregs = musb->mregs;
+	void __iomem		*mregs = musb->mregs;
 	u8			devctl;
 	unsigned long		flags;
 
@@ -260,7 +261,7 @@ static irqreturn_t davinci_interrupt(int
 	unsigned long	flags;
 	irqreturn_t	retval = IRQ_NONE;
 	struct musb	*musb = __hci;
-	void		*__iomem tibase = musb->ctrl_base;
+	void __iomem	*tibase = musb->ctrl_base;
 	u32		tmp;
 
 	spin_lock_irqsave(&musb->lock, flags);
@@ -309,7 +310,7 @@ static irqreturn_t davinci_interrupt(int
 	 */
 	if (tmp & (DAVINCI_INTR_DRVVBUS << DAVINCI_USB_USBINT_SHIFT)) {
 		int	drvvbus = musb_readl(tibase, DAVINCI_USB_STAT_REG);
-		void	*__iomem mregs = musb->mregs;
+		void __iomem *mregs = musb->mregs;
 		u8	devctl = musb_readb(mregs, MUSB_DEVCTL);
 		int	err = musb->int_usb & MUSB_INTR_VBUSERROR;
 
@@ -322,7 +323,7 @@ static irqreturn_t davinci_interrupt(int
 			 * to get VBUS errors during enumeration.
 			 *
 			 * This is a workaround, but newer RTL from Mentor
-			 * seems to lalow a better one: "re"starting sessions
+			 * seems to allow a better one: "re"starting sessions
 			 * without waiting (on EVM, a **long** time) for VBUS
 			 * to stop registering in devctl.
 			 */
@@ -378,8 +379,8 @@ static irqreturn_t davinci_interrupt(int
 
 int __init musb_platform_init(struct musb *musb)
 {
-	void	*__iomem tibase = musb->ctrl_base;
-	u32	revision;
+	void __iomem	*tibase = musb->ctrl_base;
+	u32		revision;
 
 	musb->mregs += DAVINCI_BASE_OFFSET;
 #if 0
@@ -416,8 +417,8 @@ int __init musb_platform_init(struct mus
 
 	/* NOTE:  irqs are in mixed mode, not bypass to pure-musb */
 	pr_debug("DaVinci OTG revision %08x phy %03x control %02x\n",
-		revision,
-		__raw_readl((void *__iomem) IO_ADDRESS(USBPHY_CTL_PADDR)),
+		revision, __raw_readl((void __force __iomem *)
+				IO_ADDRESS(USBPHY_CTL_PADDR)),
 		musb_readb(tibase, DAVINCI_USB_CTRL_REG));
 
 	musb->isr = davinci_interrupt;
Index: linux-2.6.18/drivers/usb/musb/davinci.h
===================================================================
--- linux-2.6.18.orig/drivers/usb/musb/davinci.h
+++ linux-2.6.18/drivers/usb/musb/davinci.h
@@ -76,7 +76,7 @@
 #define DAVINCI_DMA_ALL_CHANNELS_ENABLE	0xF
 #define DAVINCI_DMA_ALL_CHANNELS_DISABLE 0xF
 
-/* REVISIT relying on "volatile" here is wrong ... */
+/* FIXME relying on "volatile" here is wrong ... */
 
 /* define structures of Rx/Tx stateRam entries */
 struct cppi_tx_stateram {
Index: linux-2.6.18/drivers/usb/musb/musb_core.c
===================================================================
--- linux-2.6.18.orig/drivers/usb/musb/musb_core.c
+++ linux-2.6.18/drivers/usb/musb/musb_core.c
@@ -135,7 +135,7 @@ const char *otg_state_string(struct musb
 #define DRIVER_AUTHOR "Mentor Graphics, Texas Instruments, Nokia"
 #define DRIVER_DESC "Inventra Dual-Role USB Controller Driver"
 
-#define MUSB_VERSION_BASE "2.2a/db-0.5.2"
+#define MUSB_VERSION_BASE "6.0"
 
 #ifndef MUSB_VERSION_SUFFIX
 #define MUSB_VERSION_SUFFIX	""
Index: linux-2.6.18/drivers/usb/musb/musb_gadget.c
===================================================================
--- linux-2.6.18.orig/drivers/usb/musb/musb_gadget.c
+++ linux-2.6.18/drivers/usb/musb/musb_gadget.c
@@ -46,7 +46,7 @@
 #include "musb_core.h"
 
 
-/* MUSB PERIPHERAL status 3-mar:
+/* MUSB PERIPHERAL status 3-mar-2006:
  *
  * - EP0 seems solid.  It passes both USBCV and usbtest control cases.
  *   Minor glitches:
@@ -88,9 +88,7 @@
  *     + TUSB 6010, platform-specific dma in the works
  */
 
-/**************************************************************************
-Handling completion
-**************************************************************************/
+/* ----------------------------------------------------------------------- */
 
 /*
  * Immediately complete a request.
@@ -192,9 +190,9 @@ static void nuke(struct musb_ep *ep, con
 	}
 }
 
-/**************************************************************************
- * TX/IN and RX/OUT Data transfers
- **************************************************************************/
+/* ----------------------------------------------------------------------- */
+
+/* Data transfers - pure PIO, pure DMA, or mixed mode */
 
 /*
  * This assumes the separate CPPI engine is responding to DMA requests
@@ -1432,7 +1430,7 @@ static const struct usb_ep_ops musb_ep_o
 	.fifo_flush	= musb_gadget_fifo_flush
 };
 
-/***********************************************************************/
+/* ----------------------------------------------------------------------- */
 
 static int musb_gadget_get_frame(struct usb_gadget *gadget)
 {
@@ -1587,9 +1585,9 @@ static const struct usb_gadget_ops musb_
 	.pullup			= musb_gadget_pullup,
 };
 
-/****************************************************************
- * Registration operations
- ****************************************************************/
+/* ----------------------------------------------------------------------- */
+
+/* Registration */
 
 /* Only this registration code "knows" the rule (from USB standards)
  * about there being only one external upstream port.  It assumes
@@ -1924,7 +1922,7 @@ int usb_gadget_unregister_driver(struct 
 EXPORT_SYMBOL(usb_gadget_unregister_driver);
 
 
-/***********************************************************************/
+/* ----------------------------------------------------------------------- */
 
 /* lifecycle operations called through plat_uds.c */
 
Index: linux-2.6.18/drivers/usb/musb/musb_gadget_ep0.c
===================================================================
--- linux-2.6.18.orig/drivers/usb/musb/musb_gadget_ep0.c
+++ linux-2.6.18/drivers/usb/musb/musb_gadget_ep0.c
@@ -1,5 +1,5 @@
 /*
- * MUSB OTG driver ep0 handling
+ * MUSB OTG peripheral driver ep0 handling
  *
  * Copyright 2005 Mentor Graphics Corporation
  * Copyright (C) 2005-2006 by Texas Instruments
@@ -993,6 +993,4 @@ const struct usb_ep_ops musb_g_ep0_ops =
 	.queue		= musb_g_ep0_queue,
 	.dequeue	= musb_g_ep0_dequeue,
 	.set_halt	= musb_g_ep0_halt,
-	.fifo_status	= NULL,
-	.fifo_flush	= NULL,
 };
Index: linux-2.6.18/drivers/usb/musb/musb_host.c
===================================================================
--- linux-2.6.18.orig/drivers/usb/musb/musb_host.c
+++ linux-2.6.18/drivers/usb/musb/musb_host.c
@@ -72,7 +72,7 @@
  *
  * - Not tested with HNP, but some SRP paths seem to behave.
  *
- * NOTE 24-August:
+ * NOTE 24-August-2006:
  *
  * - Bulk traffic finally uses both sides of hardware ep1, freeing up an
  *   extra endpoint for periodic use enabling hub + keybd + mouse.  That
@@ -101,8 +101,6 @@
  */
 
 
-/*************************** Forwards ***************************/
-
 static void musb_ep_program(struct musb *musb, u8 epnum,
 			struct urb *urb, unsigned int nOut,
 			u8 * buf, u32 len);
@@ -685,8 +683,6 @@ static void musb_ep_program(struct musb 
 
 		/* general endpoint setup */
 		if (epnum) {
-			u16	csr = csr;
-
 			/* ASSERT:  TXCSR_DMAENAB was already cleared */
 
 			/* flush all old state, set default */
Index: linux-2.6.18/drivers/usb/musb/musb_host.h
===================================================================
--- linux-2.6.18.orig/drivers/usb/musb/musb_host.h
+++ linux-2.6.18/drivers/usb/musb/musb_host.h
@@ -46,8 +46,7 @@ static inline struct musb *hcd_to_musb(s
 	return (void *) hcd->hcd_priv;
 }
 
-/* stored in "usb_host_endpoint.hcpriv" for scheduled endpoints
- */
+/* stored in "usb_host_endpoint.hcpriv" for scheduled endpoints */
 struct musb_qh {
 	struct usb_host_endpoint *hep;		/* usbcore info */
 	struct usb_device	*dev;
Index: linux-2.6.18/drivers/usb/musb/musb_io.h
===================================================================
--- linux-2.6.18.orig/drivers/usb/musb/musb_io.h
+++ linux-2.6.18/drivers/usb/musb/musb_io.h
@@ -1,5 +1,5 @@
 /*
- * MUSB OTG driver Linux-specific architecture defines
+ * MUSB OTG driver register I/O
  *
  * Copyright 2005 Mentor Graphics Corporation
  * Copyright (C) 2005-2006 by Texas Instruments
Index: linux-2.6.18/drivers/usb/musb/musb_procfs.c
===================================================================
--- linux-2.6.18.orig/drivers/usb/musb/musb_procfs.c
+++ linux-2.6.18/drivers/usb/musb/musb_procfs.c
@@ -32,12 +32,6 @@
  *
  */
 
-/*
- * Inventra Controller Driver (ICD) for Linux.
- *
- * The code managing debug files (currently in procfs).
- */
-
 #include <linux/kernel.h>
 #include <linux/proc_fs.h>
 #include <linux/seq_file.h>
@@ -478,7 +472,7 @@ dump_end_info(struct musb *musb, u8 epnu
 	return buf - aBuffer;
 }
 
-/** Dump the current status and compile options.
+/* Dump the current status and compile options.
  * @param musb the device driver instance
  * @param buffer where to dump the status; it must be big enough hold the
  * result otherwise "BAD THINGS HAPPENS(TM)".
@@ -537,7 +531,7 @@ static int dump_header_stats(struct musb
 
 #ifdef	CONFIG_USB_GADGET_MUSB_HDRC
 	code = sprintf(buffer, "Peripheral address: %02x\n",
-			musb_readb(musb, MUSB_FADDR));
+			musb_readb(musb->ctrl_base, MUSB_FADDR));
 	if (code <= 0)
 		goto done;
 	buffer += code;
@@ -560,7 +554,8 @@ static int dump_header_stats(struct musb
 			"\n",
 			musb_readl(musb->ctrl_base, DAVINCI_USB_CTRL_REG),
 			musb_readl(musb->ctrl_base, DAVINCI_USB_STAT_REG),
-			__raw_readl(IO_ADDRESS(USBPHY_CTL_PADDR)),
+			__raw_readl((void __force __iomem *)
+					IO_ADDRESS(USBPHY_CTL_PADDR)),
 			musb_readl(musb->ctrl_base, DAVINCI_RNDIS_REG),
 			musb_readl(musb->ctrl_base, DAVINCI_AUTOREQ_REG),
 			musb_readl(musb->ctrl_base,
Index: linux-2.6.18/drivers/usb/musb/musb_virthub.c
===================================================================
--- linux-2.6.18.orig/drivers/usb/musb/musb_virthub.c
+++ linux-2.6.18/drivers/usb/musb/musb_virthub.c
@@ -1,5 +1,5 @@
 /*
- * MUSB OTG driver virtual hub support
+ * MUSB OTG driver virtual root hub support
  *
  * Copyright 2005 Mentor Graphics Corporation
  * Copyright (C) 2005-2006 by Texas Instruments
Index: linux-2.6.18/drivers/usb/musb/musbhsdma.c
===================================================================
--- linux-2.6.18.orig/drivers/usb/musb/musbhsdma.c
+++ linux-2.6.18/drivers/usb/musb/musbhsdma.c
@@ -1,5 +1,5 @@
 /*
- * MUSB OTG driver internal DMA controller support
+ * MUSB OTG driver - support for Mentor's DMA controller
  *
  * Copyright 2005 Mentor Graphics Corporation
  * Copyright (C) 2005-2007 by Texas Instruments
@@ -30,11 +30,6 @@
  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  *
  */
-
-/*
- * Implementation for the DMA controller within the MUSBMHDRC.
- */
-
 #include <linux/device.h>
 #include <linux/interrupt.h>
 #include <linux/platform_device.h>
Index: linux-2.6.18/mvl_patches/pro50-1785.c
===================================================================
--- /dev/null
+++ linux-2.6.18/mvl_patches/pro50-1785.c
@@ -0,0 +1,16 @@
+/*
+ * Author: MontaVista Software, Inc. <source@mvista.com>
+ *
+ * 2008 (c) MontaVista Software, Inc. This file is licensed under
+ * the terms of the GNU General Public License version 2. This program
+ * is licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ */
+#include <linux/init.h>
+#include <linux/mvl_patch.h>
+
+static __init int regpatch(void)
+{
+        return mvl_register_patch(1785);
+}
+module_init(regpatch);
EOF

    rv=0
    cat /tmp/mvl_patch_$$
    if [ "$?" != "0" ]; then
	# Patch had a hard error, return 2
	rv=2
    elif grep '^Hunk' ${TMPFILE}; then
	rv=1
    fi

    rm -f ${TMPFILE}
    return $rv
}

function options() {
    echo "Options are:"
    echo "  --force-unsupported - Force the patch to be applied even if the"
    echo "      patch is out of order or the current kernel is unsupported."
    echo "      Use of this option is strongly discouraged."
    echo "  --force-apply-fuzz - If the patch has fuzz, go ahead and apply"
    echo "      it anyway.  This can occur if the patch is applied to an"
    echo "      unsupported kernel or applied out of order or if you have"
    echo "      made your own modifications to the kernel.  Use with"
    echo "      caution."
    echo "  --remove - Remove the patch"
}


function checkpatchnum() {
    local level;

    if [ ! -e ${1} ]; then
	echo "${1} does not exist, make sure you are in the kernel" 1>&2
	echo "base directory" 1>&2
	exit 1;
    fi

    # Extract the current patch number from the lsp info file.
    level=`grep '#define LSP_.*PATCH_LEVEL' ${1} | sed 's/^.*\"\\(.*\\)\".*\$/\\1/'`
    if [ "a$level" = "a" ]; then
	echo "No patch level defined in ${1}, are you sure this is" 1>&2
	echo "a valid MVL kernel LSP?" 1>&2
	exit 1;
    fi

    expr $level + 0 >/dev/null 2>&1
    isnum=$?

    # Check if the kernel is supported
    if [ "$level" = "unsupported" ]; then
	echo "**Current kernel is unsupported by MontaVista due to patches"
	echo "  begin applied out of order."
	if [ $force_unsupported == 't' ]; then
	    echo "  Application is forced, applying patch anyway"
	    unsupported=t
	    fix_patch_level=f
	else
	    echo "  Patch application aborted.  Use --force-unsupported to"
	    echo "  force the patch to be applied, but the kernel will not"
	    echo "  be supported by MontaVista."
	    exit 1;
	fi

    # Check the patch number from the lspinfo file to make sure it is
    # a valid number
    elif [ $isnum = 2 ]; then
	echo "**Patch level from ${1} was not a valid number, " 1>&2
	echo "  are you sure this is a valid MVL kernel LSP?" 1>&2
	exit 1;

    # Check that this is the right patch number to be applied.
    elif [ `expr $level $3` ${4} ${2} ]; then
	echo "**Application of this patch is out of order and will cause the"
	echo "  kernel to be unsupported by MontaVista."
	if [ $force_unsupported == 't' ]; then
	    echo "  application is forced, applying patch anyway"
	    unsupported=t
	else
	    echo "  Patch application aborted.  Please get all the patches in"
	    echo "  proper order from MontaVista Zone and apply them in order"
	    echo "  If you really want to apply this patch, use"
	    echo "  --force-unsupported to force the patch to be applied, but"
	    echo "  the kernel will not be supported by MontaVista."
	    exit 1;
	fi
    fi
}

#
# Update the patch level in the file.  Note that we use patch to do
# this.  Certain weak version control systems don't take kindly to
# arbitrary changes directly to files, but do have a special version
# of "patch" that understands this.
#
function setpatchnum() {
    sed "s/^#define LSP_\(.*\)PATCH_LEVEL[ \t*]\"[0-9]*\".*$/#define LSP_\1PATCH_LEVEL \"${2}\"/" <${1} >/tmp/$$.tmp1
    diff -u ${1} /tmp/$$.tmp1 >/tmp/$$.tmp2
    rm /tmp/$$.tmp1
    sed "s/^+++ \/tmp\/$$.tmp1/+++ include\/linux\/lsppatchlevel.h/" </tmp/$$.tmp2 >/tmp/$$.tmp1
    rm /tmp/$$.tmp2
    patch -p0 </tmp/$$.tmp1
    rm /tmp/$$.tmp1
}

force_unsupported=f
force_apply_fuzz=""
unsupported=f
fix_patch_level=t
reverse=f
common_patchnum_diff='+ 1'
common_patchnum=$PATCHNUM
patch_extraopts=''

# Extract command line parameters.
while [ $# -gt 0 ]; do
    if [ "a$1" == 'a--force-unsupported' ]; then
	force_unsupported=t
    elif [ "a$1" == 'a--force-apply-fuzz' ]; then
	force_apply_fuzz=y
    elif [ "a$1" == 'a--remove' ]; then
	reverse=t
	common_patchnum_diff=''
	common_patchnum=`expr $PATCHNUM - 1`
	patch_extraopts='--reverse'
    else
	echo "'$1' is an invalid command line parameter."
	options
	exit 1
    fi
    shift
done

echo "Checking patch level"
checkpatchnum ${LSPINFO} ${PATCHNUM} "${common_patchnum_diff}" "-ne"

if ! dopatch -p1 --dry-run --force $patch_extraopts; then
    if [ $? = 2 ]; then
	echo -n "**Patch had errors, application aborted" 1>&2
	exit 1;
    fi

    # Patch has warnings
    clean_apply=${force_apply_fuzz}
    while [ "a$clean_apply" != 'ay' -a "a$clean_apply" != 'an' ]; do
	echo -n "**Patch did not apply cleanly.  Do you still want to apply? (y/n) > "
	read clean_apply
	clean_apply=`echo "$clean_apply" | tr '[:upper:]' '[:lower:]'`
    done
    if [ $clean_apply = 'n' ]; then
	exit 1;
    fi
fi

dopatch -p1 --force $patch_extraopts

if [ $fix_patch_level = 't' ]; then 
    if [ $unsupported = 't' ]; then
	common_patchnum="unsupported"
    fi

    setpatchnum ${LSPINFO} ${common_patchnum}
fi

# Move the patch file into the mvl_patches directory if we are not reversing
if [ $reverse != 't' ]; then 
    if echo $0 | grep '/' >/dev/null; then
	# Filename is a path, either absolute or from the current directory.
	srcfile=$0
    else
	# Filename is from the path
	for i in `echo $PATH | tr ':;' '  '`; do
	    if [ -e ${i}/$0 ]; then
		srcfile=${i}/$0
	    fi
	done
    fi

    fname=`basename ${srcfile}`
    diff -uN mvl_patches/${fname} ${srcfile} | (cd mvl_patches; patch)
fi

