#! /usr/bin/env bash
# Patch: -ide_add_init_default_and_restore_arguments_to_ide_unregister
# Date: Fri Sep 19 13:58:15 2008
# Source: Bartlomiej Zolnierkiewicz <bzolnier@gmail.com>
# MR: 27086
# Type: Enhancement
# Disposition: merged from 2.6.25-rc1
# Signed-off-by: Bartlomiej Zolnierkiewicz <bzolnier@gmail.com>
# Signed-off-by: Sergei Shtylyov <sshtylyov@ru.mvista.com>
# Description:
# 
# ide: add 'init_default' and 'restore' arguments to ide_unregister()
# 
# * Add 'init_default' (flag for calling init_hwif_default()) and 'restore'
#   (flag for calling ide_hwif_restore()) arguments to ide_unregister().
# 
# * Update ide_unregister() users to set 'init_default' and 'restore' flags.
# 
# * No need to set 'init_default' flag in ide_register_hw() if the setup done
#   by init_hwif_default() is going to be overridden by ide_init_port_hw().
# 
# * No need to set 'init_default' and 'restore' flags in cleanup_module().
# 
# There should be no functionality changes caused by this patch.
# 
# The patch is somewhat different from its upstream version because I didn't merge
# the patches making init_irq() use ide_remove_port_from_hwgroup(), making the
# 'au1xxx-ide'/'rapide' drivers pass 'hwif->index' to ide_unregister(), removing
# init_hwif_default() call from ide_register_hw(), and making /proc/ide/ optional;
# also, because the 'delkin_cb' and 'scc_pata' drivers weren't yet in 2.6.18, and
# because of the upstream version of the 'ide_platform' driver using devm_*() API
# and being a bit different otherwise...
# 
# commit f82c2b171905b6d5af92395d8159546351ab602f
# tree 89790c732a73c3210b5f8578d3a94a2717ab7b3b
# parent ead741df385607ab74876afdb05fd8ac27da9906
# author Bartlomiej Zolnierkiewicz <bzolnier@gmail.com> Sat, 02 Feb 2008 19:56:39 +0100
# committer Bartlomiej Zolnierkiewicz <bzolnier@gmail.com> Sat, 02 Feb 2008 19:56:39 +0100
# 
#  drivers/ide/arm/rapide.c          |    2 +-
#  drivers/ide/ide-pnp.c             |    7 ++++---
#  drivers/ide/ide.c                 |   19 ++++++++++++-------
#  drivers/ide/legacy/ide-cs.c       |    2 +-
#  drivers/ide/legacy/ide_platform.c |    2 +-
#  drivers/ide/mips/au1xxx-ide.c     |    2 +-
#  drivers/macintosh/mediabay.c      |    2 +-
#  include/linux/ide.h               |    2 +-
#  8 files changed, 22 insertions(+), 16 deletions(-)
# 

PATCHNUM=1539
LSPINFO=include/linux/lsppatchlevel.h
TMPFILE=/tmp/mvl_patch_$$

function dopatch() {
    patch $* >${TMPFILE} 2>&1 <<"EOF"
Source: Bartlomiej Zolnierkiewicz <bzolnier@gmail.com>
MR: 27086
Type: Enhancement
Disposition: merged from 2.6.25-rc1
Signed-off-by: Bartlomiej Zolnierkiewicz <bzolnier@gmail.com>
Signed-off-by: Sergei Shtylyov <sshtylyov@ru.mvista.com>
Description:

ide: add 'init_default' and 'restore' arguments to ide_unregister()

* Add 'init_default' (flag for calling init_hwif_default()) and 'restore'
  (flag for calling ide_hwif_restore()) arguments to ide_unregister().

* Update ide_unregister() users to set 'init_default' and 'restore' flags.

* No need to set 'init_default' flag in ide_register_hw() if the setup done
  by init_hwif_default() is going to be overridden by ide_init_port_hw().

* No need to set 'init_default' and 'restore' flags in cleanup_module().

There should be no functionality changes caused by this patch.

The patch is somewhat different from its upstream version because I didn't merge
the patches making init_irq() use ide_remove_port_from_hwgroup(), making the
'au1xxx-ide'/'rapide' drivers pass 'hwif->index' to ide_unregister(), removing
init_hwif_default() call from ide_register_hw(), and making /proc/ide/ optional;
also, because the 'delkin_cb' and 'scc_pata' drivers weren't yet in 2.6.18, and
because of the upstream version of the 'ide_platform' driver using devm_*() API
and being a bit different otherwise...

commit f82c2b171905b6d5af92395d8159546351ab602f
tree 89790c732a73c3210b5f8578d3a94a2717ab7b3b
parent ead741df385607ab74876afdb05fd8ac27da9906
author Bartlomiej Zolnierkiewicz <bzolnier@gmail.com> Sat, 02 Feb 2008 19:56:39 +0100
committer Bartlomiej Zolnierkiewicz <bzolnier@gmail.com> Sat, 02 Feb 2008 19:56:39 +0100

 drivers/ide/arm/rapide.c          |    2 +-
 drivers/ide/ide-pnp.c             |    7 ++++---
 drivers/ide/ide.c                 |   19 ++++++++++++-------
 drivers/ide/legacy/ide-cs.c       |    2 +-
 drivers/ide/legacy/ide_platform.c |    2 +-
 drivers/ide/mips/au1xxx-ide.c     |    2 +-
 drivers/macintosh/mediabay.c      |    2 +-
 include/linux/ide.h               |    2 +-
 mvl_patches/pro50-1539.c          |   16 ++++++++++++++++
 9 files changed, 38 insertions(+), 16 deletions(-)

diff --git a/drivers/ide/arm/rapide.c b/drivers/ide/arm/rapide.c
index b30adcf..823d333 100644
Index: linux-2.6.18/drivers/ide/arm/rapide.c
===================================================================
--- linux-2.6.18.orig/drivers/ide/arm/rapide.c
+++ linux-2.6.18/drivers/ide/arm/rapide.c
@@ -83,7 +83,7 @@ static void __devexit rapide_remove(stru
 	ecard_set_drvdata(ec, NULL);
 
 	/* there must be a better way */
-	ide_unregister(hwif - ide_hwifs);
+	ide_unregister(hwif - ide_hwifs, 1, 1);
 	iounmap(hwif->hwif_data);
 	ecard_release_resources(ec);
 }
Index: linux-2.6.18/drivers/ide/ide-pnp.c
===================================================================
--- linux-2.6.18.orig/drivers/ide/ide-pnp.c
+++ linux-2.6.18/drivers/ide/ide-pnp.c
@@ -58,9 +58,10 @@ static int idepnp_probe(struct pnp_dev *
 static void idepnp_remove(struct pnp_dev * dev)
 {
 	ide_hwif_t *hwif = pnp_get_drvdata(dev);
-	if (hwif) {
-		ide_unregister(hwif->index);
-	} else
+
+	if (hwif)
+		ide_unregister(hwif->index, 1, 1);
+	else
 		printk(KERN_ERR "idepnp: Unable to remove device, please report.\n");
 }
 
Index: linux-2.6.18/drivers/ide/ide.c
===================================================================
--- linux-2.6.18.orig/drivers/ide/ide.c
+++ linux-2.6.18/drivers/ide/ide.c
@@ -568,6 +568,8 @@ static void ide_hwif_restore(ide_hwif_t 
 /**
  *	ide_unregister		-	free an IDE interface
  *	@index: index of interface (will change soon to a pointer)
+ *	@init_default: init default hwif flag
+ *	@restore: restore hwif flag
  *
  *	Perform the final unregister of an IDE interface. At the moment
  *	we don't refcount interfaces so this will also get split up.
@@ -587,7 +589,7 @@ static void ide_hwif_restore(ide_hwif_t 
  *	This is raving bonkers.
  */
 
-void ide_unregister(unsigned int index)
+void ide_unregister(unsigned int index, int init_default, int restore)
 {
 	ide_drive_t *drive;
 	ide_hwif_t *hwif, *g;
@@ -700,9 +702,12 @@ void ide_unregister(unsigned int index)
 
 	/* restore hwif data to pristine status */
 	ide_init_port_data(hwif, index);
-	init_hwif_default(hwif, index);
 
-	ide_hwif_restore(hwif, &tmp_hwif);
+	if (init_default)
+		init_hwif_default(hwif, index);
+
+	if (restore)
+		ide_hwif_restore(hwif, &tmp_hwif);
 
 abort:
 	spin_unlock_irq(&ide_lock);
@@ -808,12 +813,12 @@ int ide_register_hw(hw_regs_t *hw, void 
 				goto found;
 		}
 		for (index = 0; index < MAX_HWIFS; index++)
-			ide_unregister(index);
+			ide_unregister(index, 1, 1);
 	} while (retry--);
 	return -1;
 found:
 	if (hwif->present)
-		ide_unregister(index);
+		ide_unregister(index, 0, 1);
 	else if (!hwif->hold) {
 		ide_init_port_data(hwif, index);
 		init_hwif_default(hwif, index);
@@ -1347,7 +1352,7 @@ int generic_ide_ioctl(ide_drive_t *drive
 	        case HDIO_UNREGISTER_HWIF:
 			if (!capable(CAP_SYS_RAWIO)) return -EACCES;
 			/* (arg > MAX_HWIFS) checked in function */
-			ide_unregister(arg);
+			ide_unregister(arg, 1, 1);
 			return 0;
 		case HDIO_SET_NICE:
 			if (!capable(CAP_SYS_ADMIN)) return -EACCES;
@@ -2080,7 +2085,7 @@ void cleanup_module (void)
 	int index;
 
 	for (index = 0; index < MAX_HWIFS; ++index)
-		ide_unregister(index);
+		ide_unregister(index, 0, 0);
 
 #ifdef CONFIG_PROC_FS
 	proc_ide_destroy();
Index: linux-2.6.18/drivers/ide/legacy/ide-cs.c
===================================================================
--- linux-2.6.18.orig/drivers/ide/legacy/ide-cs.c
+++ linux-2.6.18/drivers/ide/legacy/ide-cs.c
@@ -350,7 +350,7 @@ void ide_release(struct pcmcia_device *l
     if (info->ndev) {
 	/* FIXME: if this fails we need to queue the cleanup somehow
 	   -- need to investigate the required PCMCIA magic */
-	ide_unregister(info->hd);
+	ide_unregister(info->hd, 1, 1);
     }
     info->ndev = 0;
 
Index: linux-2.6.18/drivers/ide/legacy/ide_platform.c
===================================================================
--- linux-2.6.18.orig/drivers/ide/legacy/ide_platform.c
+++ linux-2.6.18/drivers/ide/legacy/ide_platform.c
@@ -125,7 +125,7 @@ static int __devexit plat_ide_remove(str
 	ide_hwif_t *hwif = pdev->dev.driver_data;
 
 	if (hwif == hwif_prop.hwif) {
-		ide_unregister(hwif_prop.index);
+		ide_unregister(hwif_prop.index, 1, 1);
 		if (hwif_prop.mmio) {
 			iounmap(hwif_prop.plat_ide_mapbase);
 			iounmap(hwif_prop.plat_ide_alt_mapbase);
Index: linux-2.6.18/drivers/ide/mips/au1xxx-ide.c
===================================================================
--- linux-2.6.18.orig/drivers/ide/mips/au1xxx-ide.c
+++ linux-2.6.18/drivers/ide/mips/au1xxx-ide.c
@@ -792,7 +792,7 @@ static int au_ide_remove(struct device *
 	ide_hwif_t *hwif = dev_get_drvdata(dev);
 	_auide_hwif *ahwif = &auide_hwif;
 
-	ide_unregister(hwif - ide_hwifs);
+	ide_unregister(hwif - ide_hwifs, 1, 1);
 
 	iounmap((void *)ahwif->regbase);
 
Index: linux-2.6.18/drivers/macintosh/mediabay.c
===================================================================
--- linux-2.6.18.orig/drivers/macintosh/mediabay.c
+++ linux-2.6.18/drivers/macintosh/mediabay.c
@@ -595,7 +595,7 @@ static void media_bay_step(int i)
     	        if (bay->cd_index >= 0) {
 			printk(KERN_DEBUG "Unregistering mb %d ide, index:%d\n", i,
 			       bay->cd_index);
-			ide_unregister(bay->cd_index);
+			ide_unregister(bay->cd_index, 1, 1);
 			bay->cd_index = -1;
 		}
 	    	if (bay->cd_retry) {
Index: linux-2.6.18/include/linux/ide.h
===================================================================
--- linux-2.6.18.orig/include/linux/ide.h
+++ linux-2.6.18/include/linux/ide.h
@@ -1295,7 +1295,7 @@ static inline void ide_release_dma(ide_h
 
 extern int ide_hwif_request_regions(ide_hwif_t *hwif);
 extern void ide_hwif_release_regions(ide_hwif_t* hwif);
-extern void ide_unregister (unsigned int index);
+void ide_unregister(unsigned int, int, int);
 
 void ide_register_region(struct gendisk *);
 void ide_unregister_region(struct gendisk *);
Index: linux-2.6.18/mvl_patches/pro50-1539.c
===================================================================
--- /dev/null
+++ linux-2.6.18/mvl_patches/pro50-1539.c
@@ -0,0 +1,16 @@
+/*
+ * Author: MontaVista Software, Inc. <source@mvista.com>
+ *
+ * 2008 (c) MontaVista Software, Inc. This file is licensed under
+ * the terms of the GNU General Public License version 2. This program
+ * is licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ */
+#include <linux/init.h>
+#include <linux/mvl_patch.h>
+
+static __init int regpatch(void)
+{
+        return mvl_register_patch(1539);
+}
+module_init(regpatch);
EOF

    rv=0
    cat /tmp/mvl_patch_$$
    if [ "$?" != "0" ]; then
	# Patch had a hard error, return 2
	rv=2
    elif grep '^Hunk' ${TMPFILE}; then
	rv=1
    fi

    rm -f ${TMPFILE}
    return $rv
}

function options() {
    echo "Options are:"
    echo "  --force-unsupported - Force the patch to be applied even if the"
    echo "      patch is out of order or the current kernel is unsupported."
    echo "      Use of this option is strongly discouraged."
    echo "  --force-apply-fuzz - If the patch has fuzz, go ahead and apply"
    echo "      it anyway.  This can occur if the patch is applied to an"
    echo "      unsupported kernel or applied out of order or if you have"
    echo "      made your own modifications to the kernel.  Use with"
    echo "      caution."
    echo "  --remove - Remove the patch"
}


function checkpatchnum() {
    local level;

    if [ ! -e ${1} ]; then
	echo "${1} does not exist, make sure you are in the kernel" 1>&2
	echo "base directory" 1>&2
	exit 1;
    fi

    # Extract the current patch number from the lsp info file.
    level=`grep '#define LSP_.*PATCH_LEVEL' ${1} | sed 's/^.*\"\\(.*\\)\".*\$/\\1/'`
    if [ "a$level" = "a" ]; then
	echo "No patch level defined in ${1}, are you sure this is" 1>&2
	echo "a valid MVL kernel LSP?" 1>&2
	exit 1;
    fi

    expr $level + 0 >/dev/null 2>&1
    isnum=$?

    # Check if the kernel is supported
    if [ "$level" = "unsupported" ]; then
	echo "**Current kernel is unsupported by MontaVista due to patches"
	echo "  begin applied out of order."
	if [ $force_unsupported == 't' ]; then
	    echo "  Application is forced, applying patch anyway"
	    unsupported=t
	    fix_patch_level=f
	else
	    echo "  Patch application aborted.  Use --force-unsupported to"
	    echo "  force the patch to be applied, but the kernel will not"
	    echo "  be supported by MontaVista."
	    exit 1;
	fi

    # Check the patch number from the lspinfo file to make sure it is
    # a valid number
    elif [ $isnum = 2 ]; then
	echo "**Patch level from ${1} was not a valid number, " 1>&2
	echo "  are you sure this is a valid MVL kernel LSP?" 1>&2
	exit 1;

    # Check that this is the right patch number to be applied.
    elif [ `expr $level $3` ${4} ${2} ]; then
	echo "**Application of this patch is out of order and will cause the"
	echo "  kernel to be unsupported by MontaVista."
	if [ $force_unsupported == 't' ]; then
	    echo "  application is forced, applying patch anyway"
	    unsupported=t
	else
	    echo "  Patch application aborted.  Please get all the patches in"
	    echo "  proper order from MontaVista Zone and apply them in order"
	    echo "  If you really want to apply this patch, use"
	    echo "  --force-unsupported to force the patch to be applied, but"
	    echo "  the kernel will not be supported by MontaVista."
	    exit 1;
	fi
    fi
}

#
# Update the patch level in the file.  Note that we use patch to do
# this.  Certain weak version control systems don't take kindly to
# arbitrary changes directly to files, but do have a special version
# of "patch" that understands this.
#
function setpatchnum() {
    sed "s/^#define LSP_\(.*\)PATCH_LEVEL[ \t*]\"[0-9]*\".*$/#define LSP_\1PATCH_LEVEL \"${2}\"/" <${1} >/tmp/$$.tmp1
    diff -u ${1} /tmp/$$.tmp1 >/tmp/$$.tmp2
    rm /tmp/$$.tmp1
    sed "s/^+++ \/tmp\/$$.tmp1/+++ include\/linux\/lsppatchlevel.h/" </tmp/$$.tmp2 >/tmp/$$.tmp1
    rm /tmp/$$.tmp2
    patch -p0 </tmp/$$.tmp1
    rm /tmp/$$.tmp1
}

force_unsupported=f
force_apply_fuzz=""
unsupported=f
fix_patch_level=t
reverse=f
common_patchnum_diff='+ 1'
common_patchnum=$PATCHNUM
patch_extraopts=''

# Extract command line parameters.
while [ $# -gt 0 ]; do
    if [ "a$1" == 'a--force-unsupported' ]; then
	force_unsupported=t
    elif [ "a$1" == 'a--force-apply-fuzz' ]; then
	force_apply_fuzz=y
    elif [ "a$1" == 'a--remove' ]; then
	reverse=t
	common_patchnum_diff=''
	common_patchnum=`expr $PATCHNUM - 1`
	patch_extraopts='--reverse'
    else
	echo "'$1' is an invalid command line parameter."
	options
	exit 1
    fi
    shift
done

echo "Checking patch level"
checkpatchnum ${LSPINFO} ${PATCHNUM} "${common_patchnum_diff}" "-ne"

if ! dopatch -p1 --dry-run --force $patch_extraopts; then
    if [ $? = 2 ]; then
	echo -n "**Patch had errors, application aborted" 1>&2
	exit 1;
    fi

    # Patch has warnings
    clean_apply=${force_apply_fuzz}
    while [ "a$clean_apply" != 'ay' -a "a$clean_apply" != 'an' ]; do
	echo -n "**Patch did not apply cleanly.  Do you still want to apply? (y/n) > "
	read clean_apply
	clean_apply=`echo "$clean_apply" | tr '[:upper:]' '[:lower:]'`
    done
    if [ $clean_apply = 'n' ]; then
	exit 1;
    fi
fi

dopatch -p1 --force $patch_extraopts

if [ $fix_patch_level = 't' ]; then 
    if [ $unsupported = 't' ]; then
	common_patchnum="unsupported"
    fi

    setpatchnum ${LSPINFO} ${common_patchnum}
fi

# Move the patch file into the mvl_patches directory if we are not reversing
if [ $reverse != 't' ]; then 
    if echo $0 | grep '/' >/dev/null; then
	# Filename is a path, either absolute or from the current directory.
	srcfile=$0
    else
	# Filename is from the path
	for i in `echo $PATH | tr ':;' '  '`; do
	    if [ -e ${i}/$0 ]; then
		srcfile=${i}/$0
	    fi
	done
    fi

    fname=`basename ${srcfile}`
    diff -uN mvl_patches/${fname} ${srcfile} | (cd mvl_patches; patch)
fi

