#! /usr/bin/env bash
# Patch: -pro_arm_davinci_emac_add_ethtool_support
# Date: Fri Sep 19 14:02:01 2008
# Source: MontaVista Software, Inc. 
# MR: 28415 
# Type: Integration.
# Disposition: merged from pro_40
# Signed-off-by: Pavel Kiryukhin <pkiryulhin@ru.mvista.com>
# Description:
#     Integration of pro_40 ethtools support for DaVinci emac.
# 

PATCHNUM=1593
LSPINFO=include/linux/lsppatchlevel.h
TMPFILE=/tmp/mvl_patch_$$

function dopatch() {
    patch $* >${TMPFILE} 2>&1 <<"EOF"
Source: MontaVista Software, Inc. 
MR: 28415 
Type: Integration.
Disposition: merged from pro_40
Signed-off-by: Pavel Kiryukhin <pkiryulhin@ru.mvista.com>
Description:
    Integration of pro_40 ethtools support for DaVinci emac.

Index: linux-2.6.18/drivers/net/davinci_emac.c
===================================================================
--- linux-2.6.18.orig/drivers/net/davinci_emac.c
+++ linux-2.6.18/drivers/net/davinci_emac.c
@@ -3463,6 +3463,95 @@ static void emac_tx_timeout(struct net_d
 	dev->net_dev_stats.tx_errors++;
 }
 
+static int
+emac_netdev_set_ecmd(struct net_device *dev, struct ethtool_cmd *ecmd)
+{
+	int speed_duplex = 0;
+	unsigned int phy_mode = 0;
+
+	if (ecmd->autoneg)
+		phy_mode |= SNWAY_AUTO;
+
+	/*             { 10, 100 }   { 0, 1 } */
+	speed_duplex = ecmd->speed + ecmd->duplex;
+	switch (speed_duplex) {
+	case 10:		/* HD10 */
+		phy_mode |= SNWAY_HD10;
+		break;
+	case 11:		/* FD10 */
+		phy_mode |= SNWAY_FD10;
+		break;
+	case 100:		/* HD100 */
+		phy_mode |= SNWAY_HD100;
+		break;
+	case 101:		/* FD100 */
+		phy_mode |= SNWAY_FD100;
+		break;
+	case 1001:		/* FD1000 */
+		phy_mode |= SNWAY_FD1000;
+		break;
+	default:
+		return -1;
+	}
+	emac_mdio_set_phy_mode(phy_mode);
+	return 0;
+}
+
+static int
+emac_netdev_get_ecmd(struct net_device *dev, struct ethtool_cmd *ecmd)
+{
+	int dplx = emac_mdio_get_duplex();
+
+	/* Hard-coded, but should perhaps be retrieved from davinci_emac_phy */
+	ecmd->supported = emac_mdio_supported_rate();
+	ecmd->advertising = emac_mdio_autoneg_rate();
+	ecmd->autoneg = emac_mdio_get_autoneg();
+	ecmd->speed = emac_mdio_get_speed();
+	ecmd->transceiver = XCVR_EXTERNAL;
+	ecmd->port = PORT_MII;
+	ecmd->phy_address = emac_mdio_get_phy_num();
+	ecmd->duplex = (dplx == 3) ? DUPLEX_FULL : DUPLEX_HALF;
+	return 0;
+}
+
+static void emac_get_drvinfo(struct net_device *dev,
+			     struct ethtool_drvinfo *info)
+{
+	strcpy(info->driver, "davinci_emac");
+	strcpy(info->version, EMAC_MODULE_VERSION);
+}
+
+static int emac_get_settings(struct net_device *dev, struct ethtool_cmd *ecmd)
+{
+	int ret;
+
+	ret = emac_netdev_get_ecmd(dev, ecmd);
+	return ret;
+}
+
+static int emac_set_settings(struct net_device *dev, struct ethtool_cmd *ecmd)
+{
+	int ret;
+
+	ret = emac_netdev_set_ecmd(dev, ecmd);
+	return ret;
+}
+
+static u32 emac_get_link(struct net_device *dev)
+{
+	u32 ret;
+
+	ret = emac_mdio_is_linked();
+	return ret;
+}
+
+struct ethtool_ops ethtool_ops = {
+	.get_drvinfo = emac_get_drvinfo,
+	.get_settings = emac_get_settings,
+	.set_settings = emac_set_settings,
+	.get_link = emac_get_link,
+};
+
 /***************************************************************
  *  emac_dev_init
  *
@@ -3567,6 +3656,7 @@ static int emac_dev_init(struct net_devi
 	netdev->tx_timeout = emac_tx_timeout;
 	netdev->set_mac_address = emac_dev_set_mac_addr;
 	netdev->poll = emac_poll;
+	SET_ETHTOOL_OPS(netdev, &ethtool_ops);
 #ifdef CONFIG_NET_POLL_CONTROLLER
 	netdev->poll_controller = emac_poll_controller;
 #endif
Index: linux-2.6.18/drivers/net/davinci_emac_phy.c
===================================================================
--- linux-2.6.18.orig/drivers/net/davinci_emac_phy.c
+++ linux-2.6.18/drivers/net/davinci_emac_phy.c
@@ -30,6 +30,7 @@
  *           					use PHY_DUPLEX_* constants
  */
 #include <linux/kernel.h>
+#include <linux/ethtool.h>
 #include <asm/arch/cpu.h>
 #include "davinci_emac_phy.h"
 
@@ -239,6 +240,58 @@ void emac_mdio_set_phy_mode(unsigned int
 		phy_mode & MII_NWAY_HD100);
 }
 
+/* Set PHY mode - autonegotiation or any other */
+unsigned int emac_mdio_supported_rate(void)
+{
+	unsigned int supported_mode = 0;
+
+	if (emac_phy->phy_mode & NWAY_HD10)
+		supported_mode |= SUPPORTED_10baseT_Half;
+
+	if (emac_phy->phy_mode & NWAY_FD10)
+		supported_mode |= SUPPORTED_10baseT_Full;
+
+	if (emac_phy->phy_mode & NWAY_HD100)
+		supported_mode |= SUPPORTED_100baseT_Half;
+
+	if (emac_phy->phy_mode & NWAY_FD100)
+		supported_mode |= SUPPORTED_100baseT_Full;
+
+	if (emac_phy->phy_mode & NWAY_FD1000)
+		supported_mode |= SUPPORTED_1000baseT_Full;
+
+	if (emac_phy->phy_mode & NWAY_AUTO)
+		supported_mode |= SUPPORTED_Autoneg;
+
+	return supported_mode;
+}
+
+/* get autonegotiate advertised rates */
+unsigned int emac_mdio_autoneg_rate(void)
+{
+	unsigned int auto_mode = 0;
+
+	if (emac_phy->phy_mode & NWAY_HD10)
+		auto_mode |= ADVERTISED_10baseT_Half;
+
+	if (emac_phy->phy_mode & NWAY_FD10)
+		auto_mode |= ADVERTISED_10baseT_Full;
+
+	if (emac_phy->phy_mode & NWAY_HD100)
+		auto_mode |= ADVERTISED_100baseT_Half;
+
+	if (emac_phy->phy_mode & NWAY_FD100)
+		auto_mode |= ADVERTISED_100baseT_Full;
+
+	if (emac_phy->phy_mode & NWAY_FD1000)
+		auto_mode |= ADVERTISED_1000baseT_Full;
+
+	if (emac_phy->phy_mode & NWAY_AUTO)
+		auto_mode |= ADVERTISED_Autoneg;
+
+	return auto_mode;
+}
+
 /* Get linked status - check if link is on - 1=link on, 0=link off */
 int emac_mdio_is_linked(void)
 {
@@ -263,6 +316,12 @@ int emac_mdio_get_phy_num(void)
 	return (emac_phy->phy_addr);
 }
 
+/* Get auto negotiation */
+int emac_mdio_get_autoneg(void)
+{
+	return ((emac_phy->phy_mode & NWAY_AUTO) ? 1 : 0);
+}
+
 /* Check if loopback enabled on phy */
 int emac_mdio_is_loopback(void)
 {
Index: linux-2.6.18/drivers/net/davinci_emac_phy.h
===================================================================
--- linux-2.6.18.orig/drivers/net/davinci_emac_phy.h
+++ linux-2.6.18/drivers/net/davinci_emac_phy.h
@@ -75,6 +75,12 @@ int emac_mdio_init(unsigned int mdio_bas
 /* Set PHY mode - autonegotiation or any other */
 void emac_mdio_set_phy_mode(unsigned int phy_mode);
 
+/* get transmit rate supported by phy */
+unsigned int emac_mdio_supported_rate(void);
+
+/* get autonegotiate advertised rates */
+unsigned int emac_mdio_autoneg_rate(void);
+
 /* Get linked status - check if link is on - 1=link on, 0=link off */
 int emac_mdio_is_linked(void);
 
@@ -87,6 +93,9 @@ int emac_mdio_get_duplex(void);
 /* Get Phy number/address */
 int emac_mdio_get_phy_num(void);
 
+/* Get autonegotiation status */
+int emac_mdio_get_autoneg(void);
+
 /* Check if loopback enabled on phy */
 int emac_mdio_is_loopback(void);
 
Index: linux-2.6.18/mvl_patches/pro50-1593.c
===================================================================
--- /dev/null
+++ linux-2.6.18/mvl_patches/pro50-1593.c
@@ -0,0 +1,16 @@
+/*
+ * Author: MontaVista Software, Inc. <source@mvista.com>
+ *
+ * 2008 (c) MontaVista Software, Inc. This file is licensed under
+ * the terms of the GNU General Public License version 2. This program
+ * is licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ */
+#include <linux/init.h>
+#include <linux/mvl_patch.h>
+
+static __init int regpatch(void)
+{
+        return mvl_register_patch(1593);
+}
+module_init(regpatch);
EOF

    rv=0
    cat /tmp/mvl_patch_$$
    if [ "$?" != "0" ]; then
	# Patch had a hard error, return 2
	rv=2
    elif grep '^Hunk' ${TMPFILE}; then
	rv=1
    fi

    rm -f ${TMPFILE}
    return $rv
}

function options() {
    echo "Options are:"
    echo "  --force-unsupported - Force the patch to be applied even if the"
    echo "      patch is out of order or the current kernel is unsupported."
    echo "      Use of this option is strongly discouraged."
    echo "  --force-apply-fuzz - If the patch has fuzz, go ahead and apply"
    echo "      it anyway.  This can occur if the patch is applied to an"
    echo "      unsupported kernel or applied out of order or if you have"
    echo "      made your own modifications to the kernel.  Use with"
    echo "      caution."
    echo "  --remove - Remove the patch"
}


function checkpatchnum() {
    local level;

    if [ ! -e ${1} ]; then
	echo "${1} does not exist, make sure you are in the kernel" 1>&2
	echo "base directory" 1>&2
	exit 1;
    fi

    # Extract the current patch number from the lsp info file.
    level=`grep '#define LSP_.*PATCH_LEVEL' ${1} | sed 's/^.*\"\\(.*\\)\".*\$/\\1/'`
    if [ "a$level" = "a" ]; then
	echo "No patch level defined in ${1}, are you sure this is" 1>&2
	echo "a valid MVL kernel LSP?" 1>&2
	exit 1;
    fi

    expr $level + 0 >/dev/null 2>&1
    isnum=$?

    # Check if the kernel is supported
    if [ "$level" = "unsupported" ]; then
	echo "**Current kernel is unsupported by MontaVista due to patches"
	echo "  begin applied out of order."
	if [ $force_unsupported == 't' ]; then
	    echo "  Application is forced, applying patch anyway"
	    unsupported=t
	    fix_patch_level=f
	else
	    echo "  Patch application aborted.  Use --force-unsupported to"
	    echo "  force the patch to be applied, but the kernel will not"
	    echo "  be supported by MontaVista."
	    exit 1;
	fi

    # Check the patch number from the lspinfo file to make sure it is
    # a valid number
    elif [ $isnum = 2 ]; then
	echo "**Patch level from ${1} was not a valid number, " 1>&2
	echo "  are you sure this is a valid MVL kernel LSP?" 1>&2
	exit 1;

    # Check that this is the right patch number to be applied.
    elif [ `expr $level $3` ${4} ${2} ]; then
	echo "**Application of this patch is out of order and will cause the"
	echo "  kernel to be unsupported by MontaVista."
	if [ $force_unsupported == 't' ]; then
	    echo "  application is forced, applying patch anyway"
	    unsupported=t
	else
	    echo "  Patch application aborted.  Please get all the patches in"
	    echo "  proper order from MontaVista Zone and apply them in order"
	    echo "  If you really want to apply this patch, use"
	    echo "  --force-unsupported to force the patch to be applied, but"
	    echo "  the kernel will not be supported by MontaVista."
	    exit 1;
	fi
    fi
}

#
# Update the patch level in the file.  Note that we use patch to do
# this.  Certain weak version control systems don't take kindly to
# arbitrary changes directly to files, but do have a special version
# of "patch" that understands this.
#
function setpatchnum() {
    sed "s/^#define LSP_\(.*\)PATCH_LEVEL[ \t*]\"[0-9]*\".*$/#define LSP_\1PATCH_LEVEL \"${2}\"/" <${1} >/tmp/$$.tmp1
    diff -u ${1} /tmp/$$.tmp1 >/tmp/$$.tmp2
    rm /tmp/$$.tmp1
    sed "s/^+++ \/tmp\/$$.tmp1/+++ include\/linux\/lsppatchlevel.h/" </tmp/$$.tmp2 >/tmp/$$.tmp1
    rm /tmp/$$.tmp2
    patch -p0 </tmp/$$.tmp1
    rm /tmp/$$.tmp1
}

force_unsupported=f
force_apply_fuzz=""
unsupported=f
fix_patch_level=t
reverse=f
common_patchnum_diff='+ 1'
common_patchnum=$PATCHNUM
patch_extraopts=''

# Extract command line parameters.
while [ $# -gt 0 ]; do
    if [ "a$1" == 'a--force-unsupported' ]; then
	force_unsupported=t
    elif [ "a$1" == 'a--force-apply-fuzz' ]; then
	force_apply_fuzz=y
    elif [ "a$1" == 'a--remove' ]; then
	reverse=t
	common_patchnum_diff=''
	common_patchnum=`expr $PATCHNUM - 1`
	patch_extraopts='--reverse'
    else
	echo "'$1' is an invalid command line parameter."
	options
	exit 1
    fi
    shift
done

echo "Checking patch level"
checkpatchnum ${LSPINFO} ${PATCHNUM} "${common_patchnum_diff}" "-ne"

if ! dopatch -p1 --dry-run --force $patch_extraopts; then
    if [ $? = 2 ]; then
	echo -n "**Patch had errors, application aborted" 1>&2
	exit 1;
    fi

    # Patch has warnings
    clean_apply=${force_apply_fuzz}
    while [ "a$clean_apply" != 'ay' -a "a$clean_apply" != 'an' ]; do
	echo -n "**Patch did not apply cleanly.  Do you still want to apply? (y/n) > "
	read clean_apply
	clean_apply=`echo "$clean_apply" | tr '[:upper:]' '[:lower:]'`
    done
    if [ $clean_apply = 'n' ]; then
	exit 1;
    fi
fi

dopatch -p1 --force $patch_extraopts

if [ $fix_patch_level = 't' ]; then 
    if [ $unsupported = 't' ]; then
	common_patchnum="unsupported"
    fi

    setpatchnum ${LSPINFO} ${common_patchnum}
fi

# Move the patch file into the mvl_patches directory if we are not reversing
if [ $reverse != 't' ]; then 
    if echo $0 | grep '/' >/dev/null; then
	# Filename is a path, either absolute or from the current directory.
	srcfile=$0
    else
	# Filename is from the path
	for i in `echo $PATH | tr ':;' '  '`; do
	    if [ -e ${i}/$0 ]; then
		srcfile=${i}/$0
	    fi
	done
    fi

    fname=`basename ${srcfile}`
    diff -uN mvl_patches/${fname} ${srcfile} | (cd mvl_patches; patch)
fi

