#! /usr/bin/env bash
# Patch: -pro_musb_hdrc_Search_and_replace_bTransmit_with_transmi
# Date: Fri Sep 19 14:12:25 2008
# From af009be4ce219ac6ef3642b0ab1f18dbb1626856 Mon Sep 17 00:00:00 2001
# From: Tony Lindgren <tony@atomide.com>
# Date: Thu, 16 Aug 2007 00:50:11 -0700
# Subject: [PATCH] musb_hdrc: Search and replace bTransmit with transmit
# 
# Search and replace bTransmit with transmit
# 
# Signed-off-by: Tony Lindgren <tony@atomide.com>
# (cherry picked from commit d150f81a6e2199b4781676258b56a06829a82fb5)

PATCHNUM=1729
LSPINFO=include/linux/lsppatchlevel.h
TMPFILE=/tmp/mvl_patch_$$

function dopatch() {
    patch $* >${TMPFILE} 2>&1 <<"EOF"
From af009be4ce219ac6ef3642b0ab1f18dbb1626856 Mon Sep 17 00:00:00 2001
From: Tony Lindgren <tony@atomide.com>
Date: Thu, 16 Aug 2007 00:50:11 -0700
Subject: [PATCH] musb_hdrc: Search and replace bTransmit with transmit

Search and replace bTransmit with transmit

Signed-off-by: Tony Lindgren <tony@atomide.com>
(cherry picked from commit d150f81a6e2199b4781676258b56a06829a82fb5)
Index: linux-2.6.18/drivers/usb/musb/cppi_dma.c
===================================================================
--- linux-2.6.18.orig/drivers/usb/musb/cppi_dma.c
+++ linux-2.6.18/drivers/usb/musb/cppi_dma.c
@@ -147,11 +147,11 @@ static int __init cppi_controller_start(
 
 	/* do whatever is necessary to start controller */
 	for (i = 0; i < ARRAY_SIZE(pController->txCppi); i++) {
-		pController->txCppi[i].bTransmit = TRUE;
+		pController->txCppi[i].transmit = TRUE;
 		pController->txCppi[i].chNo = i;
 	}
 	for (i = 0; i < ARRAY_SIZE(pController->rxCppi); i++) {
-		pController->rxCppi[i].bTransmit = FALSE;
+		pController->rxCppi[i].transmit = FALSE;
 		pController->rxCppi[i].chNo = i;
 	}
 
@@ -283,7 +283,7 @@ static inline void core_rxirq_enable(voi
 static struct dma_channel *
 cppi_channel_allocate(struct dma_controller *c,
 		struct musb_hw_ep *ep,
-		u8 bTransmit)
+		u8 transmit)
 {
 	struct cppi		*pController;
 	u8			chNum;
@@ -300,7 +300,7 @@ cppi_channel_allocate(struct dma_control
 	/* return the corresponding CPPI Channel Handle, and
 	 * probably disable the non-CPPI irq until we need it.
 	 */
-	if (bTransmit) {
+	if (transmit) {
 		if (local_end > ARRAY_SIZE(pController->txCppi)) {
 			DBG(1, "no %cX DMA channel for ep%d\n", 'T', local_end);
 			return NULL;
@@ -320,11 +320,11 @@ cppi_channel_allocate(struct dma_control
 	 */
 	if (otgCh->hw_ep)
 		DBG(1, "re-allocating DMA%d %cX channel %p\n",
-				chNum, bTransmit ? 'T' : 'R', otgCh);
+				chNum, transmit ? 'T' : 'R', otgCh);
 	otgCh->hw_ep = ep;
 	otgCh->Channel.status = MGC_DMA_STATUS_FREE;
 
-	DBG(4, "Allocate CPPI%d %cX\n", chNum, bTransmit ? 'T' : 'R');
+	DBG(4, "Allocate CPPI%d %cX\n", chNum, transmit ? 'T' : 'R');
 	otgCh->Channel.private_data = otgCh;
 	return &otgCh->Channel;
 }
@@ -343,7 +343,7 @@ static void cppi_channel_release(struct 
 	tibase = c->pController->pCoreBase - DAVINCI_BASE_OFFSET;
 	if (!c->hw_ep)
 		DBG(1, "releasing idle DMA channel %p\n", c);
-	else if (!c->bTransmit)
+	else if (!c->transmit)
 		core_rxirq_enable(tibase, epnum);
 
 	/* for now, leave its cppi IRQ enabled (we won't trigger it) */
@@ -962,19 +962,19 @@ static int cppi_channel_program(struct d
 	case MGC_DMA_STATUS_CORE_ABORT:
 		/* fault irq handler should have handled cleanup */
 		WARN("%cX DMA%d not cleaned up after abort!\n",
-				otgChannel->bTransmit ? 'T' : 'R',
+				otgChannel->transmit ? 'T' : 'R',
 				otgChannel->chNo);
 		//WARN_ON(1);
 		break;
 	case MGC_DMA_STATUS_BUSY:
 		WARN("program active channel?  %cX DMA%d\n",
-				otgChannel->bTransmit ? 'T' : 'R',
+				otgChannel->transmit ? 'T' : 'R',
 				otgChannel->chNo);
 		//WARN_ON(1);
 		break;
 	case MGC_DMA_STATUS_UNKNOWN:
 		DBG(1, "%cX DMA%d not allocated!\n",
-				otgChannel->bTransmit ? 'T' : 'R',
+				otgChannel->transmit ? 'T' : 'R',
 				otgChannel->chNo);
 		/* FALLTHROUGH */
 	case MGC_DMA_STATUS_FREE:
@@ -991,7 +991,7 @@ static int cppi_channel_program(struct d
 	otgChannel->transferSize = dwLength;
 
 	/* TX channel? or RX? */
-	if (otgChannel->bTransmit)
+	if (otgChannel->transmit)
 		cppi_next_tx_segment(musb, otgChannel);
 	else
 		cppi_next_rx_segment(musb, otgChannel, mode);
@@ -1390,7 +1390,7 @@ static int cppi_channel_abort(struct dma
 		return -EINVAL;
 	}
 
-	if (!otgCh->bTransmit && otgCh->activeQueueHead)
+	if (!otgCh->transmit && otgCh->activeQueueHead)
 		cppi_dump_rxq(3, "/abort", otgCh);
 
 	mbase = pController->pCoreBase;
@@ -1406,7 +1406,7 @@ static int cppi_channel_abort(struct dma
 	 */
 	musb_ep_select(mbase, chNum + 1);
 
-	if (otgCh->bTransmit) {
+	if (otgCh->transmit) {
 		struct cppi_tx_stateram	*__iomem txState;
 		int			enabled;
 
Index: linux-2.6.18/drivers/usb/musb/cppi_dma.h
===================================================================
--- linux-2.6.18.orig/drivers/usb/musb/cppi_dma.h
+++ linux-2.6.18/drivers/usb/musb/cppi_dma.h
@@ -66,7 +66,7 @@ struct cppi_channel {
 
 	/* which direction of which endpoint? */
 	struct musb_hw_ep	*hw_ep;
-	u8			bTransmit;
+	u8			transmit;
 	u8			chNo;
 
 	/* DMA modes:  RNDIS or "transparent" */
Index: linux-2.6.18/drivers/usb/musb/dma.h
===================================================================
--- linux-2.6.18.orig/drivers/usb/musb/dma.h
+++ linux-2.6.18/drivers/usb/musb/dma.h
@@ -181,7 +181,7 @@ struct dma_controller {
 };
 
 /* called after channel_program(), may indicate a fault */
-extern void musb_dma_completion(struct musb *musb, u8 epnum, u8 bTransmit);
+extern void musb_dma_completion(struct musb *musb, u8 epnum, u8 transmit);
 
 
 extern struct dma_controller *__init
Index: linux-2.6.18/drivers/usb/musb/musbhsdma.c
===================================================================
--- linux-2.6.18.orig/drivers/usb/musb/musbhsdma.c
+++ linux-2.6.18/drivers/usb/musb/musbhsdma.c
@@ -79,7 +79,7 @@ struct musb_dma_channel {
 	u16				wMaxPacketSize;
 	u8				bIndex;
 	u8				epnum;
-	u8				bTransmit;
+	u8				transmit;
 };
 
 struct musb_dma_controller {
@@ -126,7 +126,7 @@ static int dma_controller_stop(struct dm
 }
 
 static struct dma_channel* dma_channel_allocate(struct dma_controller *c,
-				struct musb_hw_ep *hw_ep, u8 bTransmit)
+				struct musb_hw_ep *hw_ep, u8 transmit)
 {
 	u8 bBit;
 	struct dma_channel *pChannel = NULL;
@@ -141,13 +141,13 @@ static struct dma_channel* dma_channel_a
 			pImplChannel->pController = pController;
 			pImplChannel->bIndex = bBit;
 			pImplChannel->epnum = hw_ep->epnum;
-			pImplChannel->bTransmit = bTransmit;
+			pImplChannel->transmit = transmit;
 			pChannel = &(pImplChannel->Channel);
 			pChannel->private_data = pImplChannel;
 			pChannel->status = MGC_DMA_STATUS_FREE;
 			pChannel->max_len = 0x10000;
 			/* Tx => mode 1; Rx => mode 0 */
-			pChannel->desired_mode = bTransmit;
+			pChannel->desired_mode = transmit;
 			pChannel->actual_len = 0;
 			break;
 		}
@@ -204,7 +204,7 @@ static void configure_channel(struct dma
 	csr |= (pImplChannel->epnum << MUSB_HSDMA_ENDPOINT_SHIFT)
 		| (1 << MUSB_HSDMA_ENABLE_SHIFT)
 		| (1 << MUSB_HSDMA_IRQENABLE_SHIFT)
-		| (pImplChannel->bTransmit ? (1 << MUSB_HSDMA_TRANSMIT_SHIFT) : 0);
+		| (pImplChannel->transmit ? (1 << MUSB_HSDMA_TRANSMIT_SHIFT) : 0);
 
 	/* address/count */
 	musb_writel(mbase,
@@ -229,7 +229,7 @@ static int dma_channel_program(struct dm
 
 	DBG(2, "ep%d-%s pkt_sz %d, dma_addr 0x%x length %d, mode %d\n",
 		pImplChannel->epnum,
-		pImplChannel->bTransmit ? "Tx" : "Rx",
+		pImplChannel->transmit ? "Tx" : "Rx",
 		packet_sz, dma_addr, dwLength, mode);
 
 	BUG_ON(pChannel->status == MGC_DMA_STATUS_UNKNOWN ||
@@ -260,7 +260,7 @@ static int dma_channel_abort(struct dma_
 	u16 csr;
 
 	if (pChannel->status == MGC_DMA_STATUS_BUSY) {
-		if (pImplChannel->bTransmit) {
+		if (pImplChannel->transmit) {
 
 			csr = musb_readw(mbase,
 				MGC_END_OFFSET(pImplChannel->epnum,MUSB_TXCSR));
@@ -347,7 +347,7 @@ static irqreturn_t dma_controller_irq(in
 
 				/* completed */
 				if ((devctl & MUSB_DEVCTL_HM)
-				    && (pImplChannel->bTransmit)
+				    && (pImplChannel->transmit)
 				    && ((pChannel->desired_mode == 0)
 					|| (pChannel->actual_len &
 					    (pImplChannel->wMaxPacketSize - 1)))
@@ -362,7 +362,7 @@ static irqreturn_t dma_controller_irq(in
 					musb_dma_completion(
 						pController->pDmaPrivate,
 						pImplChannel->epnum,
-						pImplChannel->bTransmit);
+						pImplChannel->transmit);
 			}
 		}
 	}
Index: linux-2.6.18/drivers/usb/musb/plat_uds.c
===================================================================
--- linux-2.6.18.orig/drivers/usb/musb/plat_uds.c
+++ linux-2.6.18/drivers/usb/musb/plat_uds.c
@@ -1539,7 +1539,7 @@ static int __initdata use_dma = 1;
 module_param(use_dma, bool, 0);
 MODULE_PARM_DESC(use_dma, "enable/disable use of DMA");
 
-void musb_dma_completion(struct musb *musb, u8 epnum, u8 bTransmit)
+void musb_dma_completion(struct musb *musb, u8 epnum, u8 transmit)
 {
 	u8	devctl = musb_readb(musb->mregs, MUSB_DEVCTL);
 
@@ -1557,7 +1557,7 @@ void musb_dma_completion(struct musb *mu
 #endif
 	} else {
 		/* endpoints 1..15 */
-		if (bTransmit) {
+		if (transmit) {
 			if (devctl & MUSB_DEVCTL_HM) {
 				if (is_host_capable())
 					musb_host_tx(musb, epnum);
Index: linux-2.6.18/mvl_patches/pro50-1729.c
===================================================================
--- /dev/null
+++ linux-2.6.18/mvl_patches/pro50-1729.c
@@ -0,0 +1,16 @@
+/*
+ * Author: MontaVista Software, Inc. <source@mvista.com>
+ *
+ * 2008 (c) MontaVista Software, Inc. This file is licensed under
+ * the terms of the GNU General Public License version 2. This program
+ * is licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ */
+#include <linux/init.h>
+#include <linux/mvl_patch.h>
+
+static __init int regpatch(void)
+{
+        return mvl_register_patch(1729);
+}
+module_init(regpatch);
EOF

    rv=0
    cat /tmp/mvl_patch_$$
    if [ "$?" != "0" ]; then
	# Patch had a hard error, return 2
	rv=2
    elif grep '^Hunk' ${TMPFILE}; then
	rv=1
    fi

    rm -f ${TMPFILE}
    return $rv
}

function options() {
    echo "Options are:"
    echo "  --force-unsupported - Force the patch to be applied even if the"
    echo "      patch is out of order or the current kernel is unsupported."
    echo "      Use of this option is strongly discouraged."
    echo "  --force-apply-fuzz - If the patch has fuzz, go ahead and apply"
    echo "      it anyway.  This can occur if the patch is applied to an"
    echo "      unsupported kernel or applied out of order or if you have"
    echo "      made your own modifications to the kernel.  Use with"
    echo "      caution."
    echo "  --remove - Remove the patch"
}


function checkpatchnum() {
    local level;

    if [ ! -e ${1} ]; then
	echo "${1} does not exist, make sure you are in the kernel" 1>&2
	echo "base directory" 1>&2
	exit 1;
    fi

    # Extract the current patch number from the lsp info file.
    level=`grep '#define LSP_.*PATCH_LEVEL' ${1} | sed 's/^.*\"\\(.*\\)\".*\$/\\1/'`
    if [ "a$level" = "a" ]; then
	echo "No patch level defined in ${1}, are you sure this is" 1>&2
	echo "a valid MVL kernel LSP?" 1>&2
	exit 1;
    fi

    expr $level + 0 >/dev/null 2>&1
    isnum=$?

    # Check if the kernel is supported
    if [ "$level" = "unsupported" ]; then
	echo "**Current kernel is unsupported by MontaVista due to patches"
	echo "  begin applied out of order."
	if [ $force_unsupported == 't' ]; then
	    echo "  Application is forced, applying patch anyway"
	    unsupported=t
	    fix_patch_level=f
	else
	    echo "  Patch application aborted.  Use --force-unsupported to"
	    echo "  force the patch to be applied, but the kernel will not"
	    echo "  be supported by MontaVista."
	    exit 1;
	fi

    # Check the patch number from the lspinfo file to make sure it is
    # a valid number
    elif [ $isnum = 2 ]; then
	echo "**Patch level from ${1} was not a valid number, " 1>&2
	echo "  are you sure this is a valid MVL kernel LSP?" 1>&2
	exit 1;

    # Check that this is the right patch number to be applied.
    elif [ `expr $level $3` ${4} ${2} ]; then
	echo "**Application of this patch is out of order and will cause the"
	echo "  kernel to be unsupported by MontaVista."
	if [ $force_unsupported == 't' ]; then
	    echo "  application is forced, applying patch anyway"
	    unsupported=t
	else
	    echo "  Patch application aborted.  Please get all the patches in"
	    echo "  proper order from MontaVista Zone and apply them in order"
	    echo "  If you really want to apply this patch, use"
	    echo "  --force-unsupported to force the patch to be applied, but"
	    echo "  the kernel will not be supported by MontaVista."
	    exit 1;
	fi
    fi
}

#
# Update the patch level in the file.  Note that we use patch to do
# this.  Certain weak version control systems don't take kindly to
# arbitrary changes directly to files, but do have a special version
# of "patch" that understands this.
#
function setpatchnum() {
    sed "s/^#define LSP_\(.*\)PATCH_LEVEL[ \t*]\"[0-9]*\".*$/#define LSP_\1PATCH_LEVEL \"${2}\"/" <${1} >/tmp/$$.tmp1
    diff -u ${1} /tmp/$$.tmp1 >/tmp/$$.tmp2
    rm /tmp/$$.tmp1
    sed "s/^+++ \/tmp\/$$.tmp1/+++ include\/linux\/lsppatchlevel.h/" </tmp/$$.tmp2 >/tmp/$$.tmp1
    rm /tmp/$$.tmp2
    patch -p0 </tmp/$$.tmp1
    rm /tmp/$$.tmp1
}

force_unsupported=f
force_apply_fuzz=""
unsupported=f
fix_patch_level=t
reverse=f
common_patchnum_diff='+ 1'
common_patchnum=$PATCHNUM
patch_extraopts=''

# Extract command line parameters.
while [ $# -gt 0 ]; do
    if [ "a$1" == 'a--force-unsupported' ]; then
	force_unsupported=t
    elif [ "a$1" == 'a--force-apply-fuzz' ]; then
	force_apply_fuzz=y
    elif [ "a$1" == 'a--remove' ]; then
	reverse=t
	common_patchnum_diff=''
	common_patchnum=`expr $PATCHNUM - 1`
	patch_extraopts='--reverse'
    else
	echo "'$1' is an invalid command line parameter."
	options
	exit 1
    fi
    shift
done

echo "Checking patch level"
checkpatchnum ${LSPINFO} ${PATCHNUM} "${common_patchnum_diff}" "-ne"

if ! dopatch -p1 --dry-run --force $patch_extraopts; then
    if [ $? = 2 ]; then
	echo -n "**Patch had errors, application aborted" 1>&2
	exit 1;
    fi

    # Patch has warnings
    clean_apply=${force_apply_fuzz}
    while [ "a$clean_apply" != 'ay' -a "a$clean_apply" != 'an' ]; do
	echo -n "**Patch did not apply cleanly.  Do you still want to apply? (y/n) > "
	read clean_apply
	clean_apply=`echo "$clean_apply" | tr '[:upper:]' '[:lower:]'`
    done
    if [ $clean_apply = 'n' ]; then
	exit 1;
    fi
fi

dopatch -p1 --force $patch_extraopts

if [ $fix_patch_level = 't' ]; then 
    if [ $unsupported = 't' ]; then
	common_patchnum="unsupported"
    fi

    setpatchnum ${LSPINFO} ${common_patchnum}
fi

# Move the patch file into the mvl_patches directory if we are not reversing
if [ $reverse != 't' ]; then 
    if echo $0 | grep '/' >/dev/null; then
	# Filename is a path, either absolute or from the current directory.
	srcfile=$0
    else
	# Filename is from the path
	for i in `echo $PATH | tr ':;' '  '`; do
	    if [ -e ${i}/$0 ]; then
		srcfile=${i}/$0
	    fi
	done
    fi

    fname=`basename ${srcfile}`
    diff -uN mvl_patches/${fname} ${srcfile} | (cd mvl_patches; patch)
fi

