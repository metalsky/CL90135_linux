#! /usr/bin/env bash
# Patch: -pro_musb_hdrc_Search_and_replace_dwActualLength_with_ac
# Date: Fri Sep 19 14:09:13 2008
# From d665f4b05ad34b9ba42b0e47d8a5db07b32fdb9f Mon Sep 17 00:00:00 2001
# From: Tony Lindgren <tony@atomide.com>
# Date: Mon, 13 Aug 2007 04:53:05 -0700
# Subject: [PATCH] musb_hdrc: Search and replace dwActualLength with actual_len
# 
# Search and replace dwActualLength with actual_len
# 
# Signed-off-by: Tony Lindgren <tony@atomide.com>
# (cherry picked from commit 915b7330c0fd83f1c02d15f716d53c6329cb2a3f)

PATCHNUM=1696
LSPINFO=include/linux/lsppatchlevel.h
TMPFILE=/tmp/mvl_patch_$$

function dopatch() {
    patch $* >${TMPFILE} 2>&1 <<"EOF"
From d665f4b05ad34b9ba42b0e47d8a5db07b32fdb9f Mon Sep 17 00:00:00 2001
From: Tony Lindgren <tony@atomide.com>
Date: Mon, 13 Aug 2007 04:53:05 -0700
Subject: [PATCH] musb_hdrc: Search and replace dwActualLength with actual_len

Search and replace dwActualLength with actual_len

Signed-off-by: Tony Lindgren <tony@atomide.com>
(cherry picked from commit 915b7330c0fd83f1c02d15f716d53c6329cb2a3f)
Index: linux-2.6.18/drivers/usb/musb/cppi_dma.c
===================================================================
--- linux-2.6.18.orig/drivers/usb/musb/cppi_dma.c
+++ linux-2.6.18/drivers/usb/musb/cppi_dma.c
@@ -1229,7 +1229,7 @@ void cppi_completion(struct musb *musb, 
 
 					hw_ep = txChannel->hw_ep;
 
-					txChannel->Channel.dwActualLength =
+					txChannel->Channel.actual_len =
 						txChannel->actualLen;
 
 					/* Peripheral role never repurposes the
@@ -1292,7 +1292,7 @@ void cppi_completion(struct musb *musb, 
 
 			hw_ep = rxChannel->hw_ep;
 
-			rxChannel->Channel.dwActualLength =
+			rxChannel->Channel.actual_len =
 					rxChannel->actualLen;
 			core_rxirq_disable(regBase, chanNum + 1);
 			musb_dma_completion(musb, chanNum + 1, 0);
Index: linux-2.6.18/drivers/usb/musb/dma.h
===================================================================
--- linux-2.6.18.orig/drivers/usb/musb/dma.h
+++ linux-2.6.18/drivers/usb/musb/dma.h
@@ -103,7 +103,7 @@ struct dma_controller;
  * @private_data: channel-private data
  * @wMaxLength: the maximum number of bytes the channel can move in one
  *	transaction (typically representing many USB maximum-sized packets)
- * @dwActualLength: how many bytes have been transferred
+ * @actual_len: how many bytes have been transferred
  * @bStatus: current channel status (updated e.g. on interrupt)
  * @bDesiredMode: TRUE if mode 1 is desired; FALSE if mode 0 is desired
  *
@@ -114,7 +114,7 @@ struct dma_channel {
 	void			*private_data;
 	// FIXME not void* private_data, but a dma_controller *
 	size_t			max_len;
-	size_t			dwActualLength;
+	size_t			actual_len;
 	enum dma_channel_status	bStatus;
 	u8			bDesiredMode;
 };
Index: linux-2.6.18/drivers/usb/musb/musb_gadget.c
===================================================================
--- linux-2.6.18.orig/drivers/usb/musb/musb_gadget.c
+++ linux-2.6.18/drivers/usb/musb/musb_gadget.c
@@ -466,11 +466,11 @@ void musb_g_tx(struct musb *musb, u8 epn
 				musb_writew(epio, MGC_O_HDRC_TXCSR, wCsrVal);
 				/* ensure writebuffer is empty */
 				wCsrVal = musb_readw(epio, MGC_O_HDRC_TXCSR);
-				pRequest->actual += musb_ep->dma->dwActualLength;
+				pRequest->actual += musb_ep->dma->actual_len;
 				DBG(4, "TXCSR%d %04x, dma off, "
 						"len %Zd, req %p\n",
 					epnum, wCsrVal,
-					musb_ep->dma->dwActualLength,
+					musb_ep->dma->actual_len,
 					pRequest);
 			}
 
@@ -755,7 +755,7 @@ void musb_g_rx(struct musb *musb, u8 epn
 		if (dma_channel_status(dma) == MGC_DMA_STATUS_BUSY) {
 			dma->bStatus = MGC_DMA_STATUS_CORE_ABORT;
 			(void) musb->dma_controller->channel_abort(dma);
-			pRequest->actual += musb_ep->dma->dwActualLength;
+			pRequest->actual += musb_ep->dma->actual_len;
 		}
 
 		wCsrVal |= MGC_M_RXCSR_P_WZC_BITS;
@@ -796,17 +796,17 @@ void musb_g_rx(struct musb *musb, u8 epn
 		musb_writew(epio, MGC_O_HDRC_RXCSR,
 			MGC_M_RXCSR_P_WZC_BITS | wCsrVal);
 
-		pRequest->actual += musb_ep->dma->dwActualLength;
+		pRequest->actual += musb_ep->dma->actual_len;
 
 		DBG(4, "RXCSR%d %04x, dma off, %04x, len %Zd, req %p\n",
 			epnum, wCsrVal,
 			musb_readw(epio, MGC_O_HDRC_RXCSR),
-			musb_ep->dma->dwActualLength, pRequest);
+			musb_ep->dma->actual_len, pRequest);
 
 #if defined(CONFIG_USB_INVENTRA_DMA) || defined(CONFIG_USB_TUSB_OMAP_DMA)
 		/* Autoclear doesn't clear RxPktRdy for short packets */
 		if ((dma->bDesiredMode == 0)
-				|| (dma->dwActualLength
+				|| (dma->actual_len
 					& (musb_ep->wPacketSize - 1))) {
 			/* ack the read! */
 			wCsrVal &= ~MGC_M_RXCSR_RXPKTRDY;
@@ -815,7 +815,7 @@ void musb_g_rx(struct musb *musb, u8 epn
 
 		/* incomplete, and not short? wait for next IN packet */
                 if ((pRequest->actual < pRequest->length)
-				&& (musb_ep->dma->dwActualLength
+				&& (musb_ep->dma->actual_len
 					== musb_ep->wPacketSize))
 			goto done;
 #endif
Index: linux-2.6.18/drivers/usb/musb/musb_host.c
===================================================================
--- linux-2.6.18.orig/drivers/usb/musb/musb_host.c
+++ linux-2.6.18/drivers/usb/musb/musb_host.c
@@ -824,7 +824,7 @@ static void musb_ep_program(struct musb 
 			musb_writew(epio, MGC_O_HDRC_TXCSR,
 				wCsr | MGC_M_TXCSR_MODE);
 
-			pDmaChannel->dwActualLength = 0L;
+			pDmaChannel->actual_len = 0L;
 			qh->segsize = dwLength;
 
 			/* TX uses "rndis" mode automatically, but needs help
@@ -904,7 +904,7 @@ static void musb_ep_program(struct musb 
 		if ((is_cppi_enabled() || tusb_dma_omap()) && pDmaChannel) {
 			/* candidate for DMA */
 			if (pDmaChannel) {
-				pDmaChannel->dwActualLength = 0L;
+				pDmaChannel->actual_len = 0L;
 				qh->segsize = dwLength;
 
 				/* AUTOREQ is in a DMA register */
@@ -1260,7 +1260,7 @@ void musb_host_tx(struct musb *musb, u8 
 	/* REVISIT this looks wrong... */
 	if (!status || dma || usb_pipeisoc(nPipe)) {
 		if (dma)
-			wLength = dma->dwActualLength;
+			wLength = dma->actual_len;
 		else
 			wLength = qh->segsize;
 		qh->offset += wLength;
@@ -1416,7 +1416,7 @@ void musb_host_rx(struct musb *musb, u8 
 
 	DBG(5, "<== hw %d rxcsr %04x, urb actual %d (+dma %zd)\n",
 		epnum, wRxCsrVal, pUrb->actual_length,
-		dma ? dma->dwActualLength : 0);
+		dma ? dma->actual_len : 0);
 
 	/* check for errors, concurrent stall & unlink is not really
 	 * handled yet! */
@@ -1462,7 +1462,7 @@ void musb_host_rx(struct musb *musb, u8 
 		if (dma_channel_status(dma) == MGC_DMA_STATUS_BUSY) {
 			dma->bStatus = MGC_DMA_STATUS_CORE_ABORT;
 			(void) musb->dma_controller->channel_abort(dma);
-			xfer_len = dma->dwActualLength;
+			xfer_len = dma->actual_len;
 		}
 		musb_h_flush_rxfifo(hw_ep, 0);
 		musb_writeb(epio, MGC_O_HDRC_RXINTERVAL, 0);
@@ -1493,7 +1493,7 @@ void musb_host_rx(struct musb *musb, u8 
 		if (dma_channel_status(dma) == MGC_DMA_STATUS_BUSY) {
 			dma->bStatus = MGC_DMA_STATUS_CORE_ABORT;
 			(void) musb->dma_controller->channel_abort(dma);
-			xfer_len = dma->dwActualLength;
+			xfer_len = dma->actual_len;
 			bDone = TRUE;
 		}
 
@@ -1507,7 +1507,7 @@ void musb_host_rx(struct musb *musb, u8 
 	}
 #endif
 	if (dma && (wRxCsrVal & MGC_M_RXCSR_DMAENAB)) {
-		xfer_len = dma->dwActualLength;
+		xfer_len = dma->actual_len;
 
 		wVal &= ~(MGC_M_RXCSR_DMAENAB
 			| MGC_M_RXCSR_H_AUTOREQ
@@ -1519,7 +1519,7 @@ void musb_host_rx(struct musb *musb, u8 
 		/* bDone if pUrb buffer is full or short packet is recd */
 		bDone = ((pUrb->actual_length + xfer_len) >=
 				pUrb->transfer_buffer_length)
-			|| (dma->dwActualLength & (qh->maxpacket - 1));
+			|| (dma->actual_len & (qh->maxpacket - 1));
 
 		/* send IN token for next packet, without AUTOREQ */
 		if (!bDone) {
@@ -1920,7 +1920,7 @@ static int musb_cleanup_urb(struct urb *
 				"abort %cX%d DMA for urb %p --> %d\n",
 				is_in ? 'R' : 'T', ep->epnum,
 				urb, status);
-			urb->actual_length += dma->dwActualLength;
+			urb->actual_length += dma->actual_len;
 		}
 	}
 
Index: linux-2.6.18/drivers/usb/musb/musbhsdma.c
===================================================================
--- linux-2.6.18.orig/drivers/usb/musb/musbhsdma.c
+++ linux-2.6.18/drivers/usb/musb/musbhsdma.c
@@ -148,7 +148,7 @@ static struct dma_channel* dma_channel_a
 			pChannel->max_len = 0x10000;
 			/* Tx => mode 1; Rx => mode 0 */
 			pChannel->bDesiredMode = bTransmit;
-			pChannel->dwActualLength = 0;
+			pChannel->actual_len = 0;
 			break;
 		}
 	}
@@ -160,7 +160,7 @@ static void dma_channel_release(struct d
 	struct musb_dma_channel *pImplChannel =
 		(struct musb_dma_channel *) pChannel->private_data;
 
-	pChannel->dwActualLength = 0;
+	pChannel->actual_len = 0;
 	pImplChannel->dwStartAddress = 0;
 	pImplChannel->len = 0;
 
@@ -235,7 +235,7 @@ static int dma_channel_program(struct dm
 	BUG_ON(pChannel->bStatus == MGC_DMA_STATUS_UNKNOWN ||
 		pChannel->bStatus == MGC_DMA_STATUS_BUSY);
 
-	pChannel->dwActualLength = 0;
+	pChannel->actual_len = 0;
 	pImplChannel->dwStartAddress = dma_addr;
 	pImplChannel->len = dwLength;
 	pImplChannel->wMaxPacketSize = wPacketSize;
@@ -329,14 +329,14 @@ static irqreturn_t dma_controller_irq(in
 						MGC_HSDMA_CHANNEL_OFFSET(
 							bChannel,
 							MGC_O_HSDMA_ADDRESS));
-				pChannel->dwActualLength =
+				pChannel->actual_len =
 				    dwAddress - pImplChannel->dwStartAddress;
 
 				DBG(2, "ch %p, 0x%x -> 0x%x (%d / %d) %s\n",
 				    pChannel, pImplChannel->dwStartAddress,
-				    dwAddress, pChannel->dwActualLength,
+				    dwAddress, pChannel->actual_len,
 				    pImplChannel->len,
-				    (pChannel->dwActualLength <
+				    (pChannel->actual_len <
 					pImplChannel->len) ?
 					"=> reconfig 0": "=> complete");
 
@@ -349,7 +349,7 @@ static irqreturn_t dma_controller_irq(in
 				if ((devctl & MGC_M_DEVCTL_HM)
 				    && (pImplChannel->bTransmit)
 				    && ((pChannel->bDesiredMode == 0)
-					|| (pChannel->dwActualLength &
+					|| (pChannel->actual_len &
 					    (pImplChannel->wMaxPacketSize - 1)))
 				   ) {
 					/* Send out the packet */
Index: linux-2.6.18/drivers/usb/musb/tusb6010_omap.c
===================================================================
--- linux-2.6.18.orig/drivers/usb/musb/tusb6010_omap.c
+++ linux-2.6.18/drivers/usb/musb/tusb6010_omap.c
@@ -176,8 +176,8 @@ static void tusb_omap_dma_cb(int lch, u1
 		remaining = 0;
 	}
 
-	channel->dwActualLength = chdat->transfer_len - remaining;
-	pio = chdat->len - channel->dwActualLength;
+	channel->actual_len = chdat->transfer_len - remaining;
+	pio = chdat->len - channel->actual_len;
 
 	DBG(2, "DMA remaining %lu/%u\n", remaining, chdat->transfer_len);
 
@@ -196,7 +196,7 @@ static void tusb_omap_dma_cb(int lch, u1
 			consistent_sync(phys_to_virt((u32)chdat->dma_addr),
 					chdat->transfer_len, DMA_FROM_DEVICE);
 		}
-		channel->dwActualLength += pio;
+		channel->actual_len += pio;
 	}
 
 	if (!dmareq_works())
@@ -294,7 +294,7 @@ static int tusb_omap_dma_program(struct 
 
 	chdat->packet_sz = packet_sz;
 	chdat->len = len;
-	channel->dwActualLength = 0;
+	channel->actual_len = 0;
 	chdat->dma_addr = (void __iomem *)dma_addr;
 	channel->bStatus = MGC_DMA_STATUS_BUSY;
 
@@ -550,7 +550,7 @@ tusb_omap_dma_allocate(struct dma_contro
 
 	channel->max_len = 0x7fffffff;
 	channel->bDesiredMode = 0;
-	channel->dwActualLength = 0;
+	channel->actual_len = 0;
 
 	if (dmareq_works()) {
 		ret = tusb_omap_dma_allocate_dmareq(chdat);
Index: linux-2.6.18/mvl_patches/pro50-1696.c
===================================================================
--- /dev/null
+++ linux-2.6.18/mvl_patches/pro50-1696.c
@@ -0,0 +1,16 @@
+/*
+ * Author: MontaVista Software, Inc. <source@mvista.com>
+ *
+ * 2008 (c) MontaVista Software, Inc. This file is licensed under
+ * the terms of the GNU General Public License version 2. This program
+ * is licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ */
+#include <linux/init.h>
+#include <linux/mvl_patch.h>
+
+static __init int regpatch(void)
+{
+        return mvl_register_patch(1696);
+}
+module_init(regpatch);
EOF

    rv=0
    cat /tmp/mvl_patch_$$
    if [ "$?" != "0" ]; then
	# Patch had a hard error, return 2
	rv=2
    elif grep '^Hunk' ${TMPFILE}; then
	rv=1
    fi

    rm -f ${TMPFILE}
    return $rv
}

function options() {
    echo "Options are:"
    echo "  --force-unsupported - Force the patch to be applied even if the"
    echo "      patch is out of order or the current kernel is unsupported."
    echo "      Use of this option is strongly discouraged."
    echo "  --force-apply-fuzz - If the patch has fuzz, go ahead and apply"
    echo "      it anyway.  This can occur if the patch is applied to an"
    echo "      unsupported kernel or applied out of order or if you have"
    echo "      made your own modifications to the kernel.  Use with"
    echo "      caution."
    echo "  --remove - Remove the patch"
}


function checkpatchnum() {
    local level;

    if [ ! -e ${1} ]; then
	echo "${1} does not exist, make sure you are in the kernel" 1>&2
	echo "base directory" 1>&2
	exit 1;
    fi

    # Extract the current patch number from the lsp info file.
    level=`grep '#define LSP_.*PATCH_LEVEL' ${1} | sed 's/^.*\"\\(.*\\)\".*\$/\\1/'`
    if [ "a$level" = "a" ]; then
	echo "No patch level defined in ${1}, are you sure this is" 1>&2
	echo "a valid MVL kernel LSP?" 1>&2
	exit 1;
    fi

    expr $level + 0 >/dev/null 2>&1
    isnum=$?

    # Check if the kernel is supported
    if [ "$level" = "unsupported" ]; then
	echo "**Current kernel is unsupported by MontaVista due to patches"
	echo "  begin applied out of order."
	if [ $force_unsupported == 't' ]; then
	    echo "  Application is forced, applying patch anyway"
	    unsupported=t
	    fix_patch_level=f
	else
	    echo "  Patch application aborted.  Use --force-unsupported to"
	    echo "  force the patch to be applied, but the kernel will not"
	    echo "  be supported by MontaVista."
	    exit 1;
	fi

    # Check the patch number from the lspinfo file to make sure it is
    # a valid number
    elif [ $isnum = 2 ]; then
	echo "**Patch level from ${1} was not a valid number, " 1>&2
	echo "  are you sure this is a valid MVL kernel LSP?" 1>&2
	exit 1;

    # Check that this is the right patch number to be applied.
    elif [ `expr $level $3` ${4} ${2} ]; then
	echo "**Application of this patch is out of order and will cause the"
	echo "  kernel to be unsupported by MontaVista."
	if [ $force_unsupported == 't' ]; then
	    echo "  application is forced, applying patch anyway"
	    unsupported=t
	else
	    echo "  Patch application aborted.  Please get all the patches in"
	    echo "  proper order from MontaVista Zone and apply them in order"
	    echo "  If you really want to apply this patch, use"
	    echo "  --force-unsupported to force the patch to be applied, but"
	    echo "  the kernel will not be supported by MontaVista."
	    exit 1;
	fi
    fi
}

#
# Update the patch level in the file.  Note that we use patch to do
# this.  Certain weak version control systems don't take kindly to
# arbitrary changes directly to files, but do have a special version
# of "patch" that understands this.
#
function setpatchnum() {
    sed "s/^#define LSP_\(.*\)PATCH_LEVEL[ \t*]\"[0-9]*\".*$/#define LSP_\1PATCH_LEVEL \"${2}\"/" <${1} >/tmp/$$.tmp1
    diff -u ${1} /tmp/$$.tmp1 >/tmp/$$.tmp2
    rm /tmp/$$.tmp1
    sed "s/^+++ \/tmp\/$$.tmp1/+++ include\/linux\/lsppatchlevel.h/" </tmp/$$.tmp2 >/tmp/$$.tmp1
    rm /tmp/$$.tmp2
    patch -p0 </tmp/$$.tmp1
    rm /tmp/$$.tmp1
}

force_unsupported=f
force_apply_fuzz=""
unsupported=f
fix_patch_level=t
reverse=f
common_patchnum_diff='+ 1'
common_patchnum=$PATCHNUM
patch_extraopts=''

# Extract command line parameters.
while [ $# -gt 0 ]; do
    if [ "a$1" == 'a--force-unsupported' ]; then
	force_unsupported=t
    elif [ "a$1" == 'a--force-apply-fuzz' ]; then
	force_apply_fuzz=y
    elif [ "a$1" == 'a--remove' ]; then
	reverse=t
	common_patchnum_diff=''
	common_patchnum=`expr $PATCHNUM - 1`
	patch_extraopts='--reverse'
    else
	echo "'$1' is an invalid command line parameter."
	options
	exit 1
    fi
    shift
done

echo "Checking patch level"
checkpatchnum ${LSPINFO} ${PATCHNUM} "${common_patchnum_diff}" "-ne"

if ! dopatch -p1 --dry-run --force $patch_extraopts; then
    if [ $? = 2 ]; then
	echo -n "**Patch had errors, application aborted" 1>&2
	exit 1;
    fi

    # Patch has warnings
    clean_apply=${force_apply_fuzz}
    while [ "a$clean_apply" != 'ay' -a "a$clean_apply" != 'an' ]; do
	echo -n "**Patch did not apply cleanly.  Do you still want to apply? (y/n) > "
	read clean_apply
	clean_apply=`echo "$clean_apply" | tr '[:upper:]' '[:lower:]'`
    done
    if [ $clean_apply = 'n' ]; then
	exit 1;
    fi
fi

dopatch -p1 --force $patch_extraopts

if [ $fix_patch_level = 't' ]; then 
    if [ $unsupported = 't' ]; then
	common_patchnum="unsupported"
    fi

    setpatchnum ${LSPINFO} ${common_patchnum}
fi

# Move the patch file into the mvl_patches directory if we are not reversing
if [ $reverse != 't' ]; then 
    if echo $0 | grep '/' >/dev/null; then
	# Filename is a path, either absolute or from the current directory.
	srcfile=$0
    else
	# Filename is from the path
	for i in `echo $PATH | tr ':;' '  '`; do
	    if [ -e ${i}/$0 ]; then
		srcfile=${i}/$0
	    fi
	done
    fi

    fname=`basename ${srcfile}`
    diff -uN mvl_patches/${fname} ${srcfile} | (cd mvl_patches; patch)
fi

